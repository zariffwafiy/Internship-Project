2023-06-13 14:43:50,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 14:43:50,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 14:43:50,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 14:43:50,708:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 14:44:05,952:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-13 14:45:56,839:INFO:PyCaret RegressionExperiment
2023-06-13 14:45:56,840:INFO:Logging name: reg-default-name
2023-06-13 14:45:56,840:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 14:45:56,840:INFO:version 3.0.2
2023-06-13 14:45:56,840:INFO:Initializing setup()
2023-06-13 14:45:56,840:INFO:self.USI: c85d
2023-06-13 14:45:56,840:INFO:self._variable_keys: {'gpu_n_jobs_param', 'USI', 'exp_name_log', 'idx', 'fold_shuffle_param', 'fold_generator', 'pipeline', 'seed', 'logging_param', 'X_test', '_available_plots', 'X', 'data', 'memory', '_ml_usecase', 'gpu_param', 'y_test', 'transform_target_param', 'log_plots_param', 'X_train', 'html_param', 'y_train', 'y', 'target_param', 'fold_groups_param', 'exp_id', 'n_jobs_param'}
2023-06-13 14:45:56,840:INFO:Checking environment
2023-06-13 14:45:56,840:INFO:python_version: 3.9.13
2023-06-13 14:45:56,841:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 14:45:56,841:INFO:machine: AMD64
2023-06-13 14:45:56,841:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 14:45:56,841:INFO:Memory: svmem(total=8285085696, available=1230127104, percent=85.2, used=7054958592, free=1230127104)
2023-06-13 14:45:56,841:INFO:Physical Core: 2
2023-06-13 14:45:56,842:INFO:Logical Core: 4
2023-06-13 14:45:56,842:INFO:Checking libraries
2023-06-13 14:45:56,842:INFO:System:
2023-06-13 14:45:56,842:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 14:45:56,842:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 14:45:56,842:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 14:45:56,842:INFO:PyCaret required dependencies:
2023-06-13 14:45:56,843:INFO:                 pip: 22.2.2
2023-06-13 14:45:56,843:INFO:          setuptools: 63.4.1
2023-06-13 14:45:56,843:INFO:             pycaret: 3.0.2
2023-06-13 14:45:56,843:INFO:             IPython: 7.31.1
2023-06-13 14:45:56,843:INFO:          ipywidgets: 7.6.5
2023-06-13 14:45:56,843:INFO:                tqdm: 4.64.1
2023-06-13 14:45:56,843:INFO:               numpy: 1.21.5
2023-06-13 14:45:56,843:INFO:              pandas: 1.4.4
2023-06-13 14:45:56,843:INFO:              jinja2: 2.11.3
2023-06-13 14:45:56,843:INFO:               scipy: 1.9.1
2023-06-13 14:45:56,844:INFO:              joblib: 1.1.0
2023-06-13 14:45:56,844:INFO:             sklearn: 1.0.2
2023-06-13 14:45:56,844:INFO:                pyod: 1.0.9
2023-06-13 14:45:56,844:INFO:            imblearn: 0.10.1
2023-06-13 14:45:56,844:INFO:   category_encoders: 2.6.1
2023-06-13 14:45:56,844:INFO:            lightgbm: 3.3.5
2023-06-13 14:45:56,844:INFO:               numba: 0.55.1
2023-06-13 14:45:56,844:INFO:            requests: 2.28.1
2023-06-13 14:45:56,845:INFO:          matplotlib: 3.5.2
2023-06-13 14:45:56,845:INFO:          scikitplot: 0.3.7
2023-06-13 14:45:56,845:INFO:         yellowbrick: 1.5
2023-06-13 14:45:56,845:INFO:              plotly: 5.9.0
2023-06-13 14:45:56,845:INFO:             kaleido: 0.2.1
2023-06-13 14:45:56,845:INFO:         statsmodels: 0.13.2
2023-06-13 14:45:56,845:INFO:              sktime: 0.17.0
2023-06-13 14:45:56,845:INFO:               tbats: 1.1.3
2023-06-13 14:45:56,845:INFO:            pmdarima: 2.0.3
2023-06-13 14:45:56,845:INFO:              psutil: 5.9.0
2023-06-13 14:45:56,846:INFO:PyCaret optional dependencies:
2023-06-13 14:45:56,914:INFO:                shap: Not installed
2023-06-13 14:45:56,914:INFO:           interpret: Not installed
2023-06-13 14:45:56,914:INFO:                umap: Not installed
2023-06-13 14:45:56,914:INFO:    pandas_profiling: Not installed
2023-06-13 14:45:56,914:INFO:  explainerdashboard: Not installed
2023-06-13 14:45:56,914:INFO:             autoviz: Not installed
2023-06-13 14:45:56,915:INFO:           fairlearn: Not installed
2023-06-13 14:45:56,915:INFO:             xgboost: Not installed
2023-06-13 14:45:56,915:INFO:            catboost: Not installed
2023-06-13 14:45:56,915:INFO:              kmodes: Not installed
2023-06-13 14:45:56,915:INFO:             mlxtend: Not installed
2023-06-13 14:45:56,915:INFO:       statsforecast: Not installed
2023-06-13 14:45:56,915:INFO:        tune_sklearn: Not installed
2023-06-13 14:45:56,915:INFO:                 ray: Not installed
2023-06-13 14:45:56,915:INFO:            hyperopt: Not installed
2023-06-13 14:45:56,915:INFO:              optuna: Not installed
2023-06-13 14:45:56,915:INFO:               skopt: Not installed
2023-06-13 14:45:56,915:INFO:              mlflow: Not installed
2023-06-13 14:45:56,915:INFO:              gradio: Not installed
2023-06-13 14:45:56,915:INFO:             fastapi: Not installed
2023-06-13 14:45:56,915:INFO:             uvicorn: Not installed
2023-06-13 14:45:56,915:INFO:              m2cgen: Not installed
2023-06-13 14:45:56,915:INFO:           evidently: Not installed
2023-06-13 14:45:56,915:INFO:               fugue: Not installed
2023-06-13 14:45:56,916:INFO:           streamlit: 1.22.0
2023-06-13 14:45:56,916:INFO:             prophet: Not installed
2023-06-13 14:45:56,916:INFO:None
2023-06-13 14:45:56,916:INFO:Set up data.
2023-06-13 14:45:56,927:INFO:Set up train/test split.
2023-06-13 14:45:56,928:INFO:Set up data.
2023-06-13 14:45:56,942:INFO:Set up index.
2023-06-13 14:45:56,943:INFO:Set up folding strategy.
2023-06-13 14:45:56,943:INFO:Assigning column types.
2023-06-13 14:46:31,385:INFO:PyCaret RegressionExperiment
2023-06-13 14:46:31,385:INFO:Logging name: reg-default-name
2023-06-13 14:46:31,386:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 14:46:31,386:INFO:version 3.0.2
2023-06-13 14:46:31,387:INFO:Initializing setup()
2023-06-13 14:46:31,387:INFO:self.USI: c7d2
2023-06-13 14:46:31,387:INFO:self._variable_keys: {'gpu_n_jobs_param', 'USI', 'exp_name_log', 'idx', 'fold_shuffle_param', 'fold_generator', 'pipeline', 'seed', 'logging_param', 'X_test', '_available_plots', 'X', 'data', 'memory', '_ml_usecase', 'gpu_param', 'y_test', 'transform_target_param', 'log_plots_param', 'X_train', 'html_param', 'y_train', 'y', 'target_param', 'fold_groups_param', 'exp_id', 'n_jobs_param'}
2023-06-13 14:46:31,387:INFO:Checking environment
2023-06-13 14:46:31,387:INFO:python_version: 3.9.13
2023-06-13 14:46:31,387:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 14:46:31,387:INFO:machine: AMD64
2023-06-13 14:46:31,387:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 14:46:31,388:INFO:Memory: svmem(total=8285085696, available=1213841408, percent=85.3, used=7071244288, free=1213841408)
2023-06-13 14:46:31,388:INFO:Physical Core: 2
2023-06-13 14:46:31,388:INFO:Logical Core: 4
2023-06-13 14:46:31,388:INFO:Checking libraries
2023-06-13 14:46:31,388:INFO:System:
2023-06-13 14:46:31,388:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 14:46:31,388:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 14:46:31,388:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 14:46:31,389:INFO:PyCaret required dependencies:
2023-06-13 14:46:31,389:INFO:                 pip: 22.2.2
2023-06-13 14:46:31,389:INFO:          setuptools: 63.4.1
2023-06-13 14:46:31,389:INFO:             pycaret: 3.0.2
2023-06-13 14:46:31,389:INFO:             IPython: 7.31.1
2023-06-13 14:46:31,389:INFO:          ipywidgets: 7.6.5
2023-06-13 14:46:31,389:INFO:                tqdm: 4.64.1
2023-06-13 14:46:31,389:INFO:               numpy: 1.21.5
2023-06-13 14:46:31,390:INFO:              pandas: 1.4.4
2023-06-13 14:46:31,390:INFO:              jinja2: 2.11.3
2023-06-13 14:46:31,390:INFO:               scipy: 1.9.1
2023-06-13 14:46:31,390:INFO:              joblib: 1.1.0
2023-06-13 14:46:31,390:INFO:             sklearn: 1.0.2
2023-06-13 14:46:31,390:INFO:                pyod: 1.0.9
2023-06-13 14:46:31,390:INFO:            imblearn: 0.10.1
2023-06-13 14:46:31,390:INFO:   category_encoders: 2.6.1
2023-06-13 14:46:31,390:INFO:            lightgbm: 3.3.5
2023-06-13 14:46:31,391:INFO:               numba: 0.55.1
2023-06-13 14:46:31,391:INFO:            requests: 2.28.1
2023-06-13 14:46:31,391:INFO:          matplotlib: 3.5.2
2023-06-13 14:46:31,391:INFO:          scikitplot: 0.3.7
2023-06-13 14:46:31,391:INFO:         yellowbrick: 1.5
2023-06-13 14:46:31,391:INFO:              plotly: 5.9.0
2023-06-13 14:46:31,391:INFO:             kaleido: 0.2.1
2023-06-13 14:46:31,391:INFO:         statsmodels: 0.13.2
2023-06-13 14:46:31,391:INFO:              sktime: 0.17.0
2023-06-13 14:46:31,391:INFO:               tbats: 1.1.3
2023-06-13 14:46:31,391:INFO:            pmdarima: 2.0.3
2023-06-13 14:46:31,391:INFO:              psutil: 5.9.0
2023-06-13 14:46:31,391:INFO:PyCaret optional dependencies:
2023-06-13 14:46:31,392:INFO:                shap: Not installed
2023-06-13 14:46:31,392:INFO:           interpret: Not installed
2023-06-13 14:46:31,392:INFO:                umap: Not installed
2023-06-13 14:46:31,392:INFO:    pandas_profiling: Not installed
2023-06-13 14:46:31,392:INFO:  explainerdashboard: Not installed
2023-06-13 14:46:31,392:INFO:             autoviz: Not installed
2023-06-13 14:46:31,392:INFO:           fairlearn: Not installed
2023-06-13 14:46:31,392:INFO:             xgboost: Not installed
2023-06-13 14:46:31,392:INFO:            catboost: Not installed
2023-06-13 14:46:31,392:INFO:              kmodes: Not installed
2023-06-13 14:46:31,392:INFO:             mlxtend: Not installed
2023-06-13 14:46:31,392:INFO:       statsforecast: Not installed
2023-06-13 14:46:31,393:INFO:        tune_sklearn: Not installed
2023-06-13 14:46:31,393:INFO:                 ray: Not installed
2023-06-13 14:46:31,393:INFO:            hyperopt: Not installed
2023-06-13 14:46:31,393:INFO:              optuna: Not installed
2023-06-13 14:46:31,393:INFO:               skopt: Not installed
2023-06-13 14:46:31,393:INFO:              mlflow: Not installed
2023-06-13 14:46:31,393:INFO:              gradio: Not installed
2023-06-13 14:46:31,393:INFO:             fastapi: Not installed
2023-06-13 14:46:31,393:INFO:             uvicorn: Not installed
2023-06-13 14:46:31,393:INFO:              m2cgen: Not installed
2023-06-13 14:46:31,394:INFO:           evidently: Not installed
2023-06-13 14:46:31,394:INFO:               fugue: Not installed
2023-06-13 14:46:31,394:INFO:           streamlit: 1.22.0
2023-06-13 14:46:31,394:INFO:             prophet: Not installed
2023-06-13 14:46:31,394:INFO:None
2023-06-13 14:46:31,394:INFO:Set up data.
2023-06-13 14:46:31,412:INFO:Set up train/test split.
2023-06-13 14:46:31,412:INFO:Set up data.
2023-06-13 14:46:31,448:INFO:Set up index.
2023-06-13 14:46:31,450:INFO:Set up folding strategy.
2023-06-13 14:46:31,450:INFO:Assigning column types.
2023-06-13 14:46:31,456:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-13 14:46:31,457:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:46:31,462:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:46:31,470:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:31,562:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:31,624:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:31,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,075:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,076:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,084:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,303:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,303:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,303:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,304:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-13 14:46:32,309:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,317:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,446:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,556:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,563:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,681:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,762:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:32,764:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-13 14:46:32,783:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:32,898:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,003:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,005:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,129:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,207:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,208:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-13 14:46:33,342:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,411:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,411:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,528:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,623:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,625:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-13 14:46:33,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:33,836:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,837:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:33,959:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:46:34,047:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,049:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-13 14:46:34,269:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,512:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:46:34,523:INFO:Preparing preprocessing pipeline...
2023-06-13 14:46:34,523:INFO:Set up target transformation.
2023-06-13 14:46:34,523:INFO:Set up date feature engineering.
2023-06-13 14:46:34,523:INFO:Set up simple imputation.
2023-06-13 14:46:34,529:INFO:Set up encoding of categorical features.
2023-06-13 14:46:34,583:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:50:44,965:INFO:PyCaret RegressionExperiment
2023-06-13 14:50:44,966:INFO:Logging name: reg-default-name
2023-06-13 14:50:44,966:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 14:50:44,966:INFO:version 3.0.2
2023-06-13 14:50:44,966:INFO:Initializing setup()
2023-06-13 14:50:44,966:INFO:self.USI: b567
2023-06-13 14:50:44,966:INFO:self._variable_keys: {'gpu_n_jobs_param', 'USI', 'exp_name_log', 'idx', 'fold_shuffle_param', 'fold_generator', 'pipeline', 'seed', 'logging_param', 'X_test', '_available_plots', 'X', 'data', 'memory', '_ml_usecase', 'gpu_param', 'y_test', 'transform_target_param', 'log_plots_param', 'X_train', 'html_param', 'y_train', 'y', 'target_param', 'fold_groups_param', 'exp_id', 'n_jobs_param'}
2023-06-13 14:50:44,966:INFO:Checking environment
2023-06-13 14:50:44,966:INFO:python_version: 3.9.13
2023-06-13 14:50:44,966:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 14:50:44,966:INFO:machine: AMD64
2023-06-13 14:50:44,966:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 14:50:44,967:INFO:Memory: svmem(total=8285085696, available=1223024640, percent=85.2, used=7062061056, free=1223024640)
2023-06-13 14:50:44,967:INFO:Physical Core: 2
2023-06-13 14:50:44,967:INFO:Logical Core: 4
2023-06-13 14:50:44,967:INFO:Checking libraries
2023-06-13 14:50:44,967:INFO:System:
2023-06-13 14:50:44,968:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 14:50:44,968:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 14:50:44,968:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 14:50:44,968:INFO:PyCaret required dependencies:
2023-06-13 14:50:44,968:INFO:                 pip: 22.2.2
2023-06-13 14:50:44,969:INFO:          setuptools: 63.4.1
2023-06-13 14:50:44,969:INFO:             pycaret: 3.0.2
2023-06-13 14:50:44,969:INFO:             IPython: 7.31.1
2023-06-13 14:50:44,969:INFO:          ipywidgets: 7.6.5
2023-06-13 14:50:44,969:INFO:                tqdm: 4.64.1
2023-06-13 14:50:44,969:INFO:               numpy: 1.21.5
2023-06-13 14:50:44,970:INFO:              pandas: 1.4.4
2023-06-13 14:50:44,970:INFO:              jinja2: 2.11.3
2023-06-13 14:50:44,970:INFO:               scipy: 1.9.1
2023-06-13 14:50:44,970:INFO:              joblib: 1.1.0
2023-06-13 14:50:44,970:INFO:             sklearn: 1.0.2
2023-06-13 14:50:44,970:INFO:                pyod: 1.0.9
2023-06-13 14:50:44,970:INFO:            imblearn: 0.10.1
2023-06-13 14:50:44,971:INFO:   category_encoders: 2.6.1
2023-06-13 14:50:44,971:INFO:            lightgbm: 3.3.5
2023-06-13 14:50:44,971:INFO:               numba: 0.55.1
2023-06-13 14:50:44,971:INFO:            requests: 2.28.1
2023-06-13 14:50:44,971:INFO:          matplotlib: 3.5.2
2023-06-13 14:50:44,971:INFO:          scikitplot: 0.3.7
2023-06-13 14:50:44,972:INFO:         yellowbrick: 1.5
2023-06-13 14:50:44,972:INFO:              plotly: 5.9.0
2023-06-13 14:50:44,972:INFO:             kaleido: 0.2.1
2023-06-13 14:50:44,972:INFO:         statsmodels: 0.13.2
2023-06-13 14:50:44,972:INFO:              sktime: 0.17.0
2023-06-13 14:50:44,972:INFO:               tbats: 1.1.3
2023-06-13 14:50:44,972:INFO:            pmdarima: 2.0.3
2023-06-13 14:50:44,972:INFO:              psutil: 5.9.0
2023-06-13 14:50:44,972:INFO:PyCaret optional dependencies:
2023-06-13 14:50:44,973:INFO:                shap: Not installed
2023-06-13 14:50:44,973:INFO:           interpret: Not installed
2023-06-13 14:50:44,973:INFO:                umap: Not installed
2023-06-13 14:50:44,973:INFO:    pandas_profiling: Not installed
2023-06-13 14:50:44,973:INFO:  explainerdashboard: Not installed
2023-06-13 14:50:44,973:INFO:             autoviz: Not installed
2023-06-13 14:50:44,973:INFO:           fairlearn: Not installed
2023-06-13 14:50:44,973:INFO:             xgboost: Not installed
2023-06-13 14:50:44,973:INFO:            catboost: Not installed
2023-06-13 14:50:44,973:INFO:              kmodes: Not installed
2023-06-13 14:50:44,974:INFO:             mlxtend: Not installed
2023-06-13 14:50:44,974:INFO:       statsforecast: Not installed
2023-06-13 14:50:44,974:INFO:        tune_sklearn: Not installed
2023-06-13 14:50:44,974:INFO:                 ray: Not installed
2023-06-13 14:50:44,974:INFO:            hyperopt: Not installed
2023-06-13 14:50:44,974:INFO:              optuna: Not installed
2023-06-13 14:50:44,974:INFO:               skopt: Not installed
2023-06-13 14:50:44,974:INFO:              mlflow: Not installed
2023-06-13 14:50:44,974:INFO:              gradio: Not installed
2023-06-13 14:50:44,974:INFO:             fastapi: Not installed
2023-06-13 14:50:44,974:INFO:             uvicorn: Not installed
2023-06-13 14:50:44,975:INFO:              m2cgen: Not installed
2023-06-13 14:50:44,975:INFO:           evidently: Not installed
2023-06-13 14:50:44,975:INFO:               fugue: Not installed
2023-06-13 14:50:44,976:INFO:           streamlit: 1.22.0
2023-06-13 14:50:44,976:INFO:             prophet: Not installed
2023-06-13 14:50:44,976:INFO:None
2023-06-13 14:50:44,976:INFO:Set up data.
2023-06-13 14:50:44,984:INFO:Set up train/test split.
2023-06-13 14:50:44,985:INFO:Set up data.
2023-06-13 14:50:44,996:INFO:Set up index.
2023-06-13 14:50:44,996:INFO:Set up folding strategy.
2023-06-13 14:50:44,997:INFO:Assigning column types.
2023-06-13 14:50:45,001:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-13 14:50:45,001:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,007:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,013:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,084:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,138:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,140:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,145:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,150:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,219:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,272:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,273:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-13 14:50:45,279:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,284:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,354:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,414:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,419:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,536:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,538:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-13 14:50:45,549:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,625:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,676:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,689:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,757:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,811:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,813:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-13 14:50:45,892:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:45,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:45,947:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,033:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:46,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:50:46,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,089:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-13 14:50:46,180:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:46,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:50:46,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,371:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-13 14:50:46,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,635:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:46,637:INFO:Preparing preprocessing pipeline...
2023-06-13 14:50:46,637:INFO:Set up target transformation.
2023-06-13 14:50:46,637:INFO:Set up date feature engineering.
2023-06-13 14:50:46,637:INFO:Set up simple imputation.
2023-06-13 14:50:46,641:INFO:Set up encoding of categorical features.
2023-06-13 14:50:46,652:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:50:46,774:INFO:Finished creating preprocessing pipeline.
2023-06-13 14:50:46,801:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 Tr...
                                             'BOND_NAME', 'FACILITY_NAME',
                                             'ISSUER_NAME'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['BOND_CODE', 'PROD_CODE',
                                             'BOND_NAME', 'FACILITY_NAME',
                                             'ISSUER_NAME'],
                                    transformer=OneHotEncoder(cols=['BOND_CODE',
                                                                    'PROD_CODE',
                                                                    'BOND_NAME',
                                                                    'FACILITY_NAME',
                                                                    'ISSUER_NAME'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-06-13 14:50:46,802:INFO:Creating final display dataframe.
2023-06-13 14:50:47,176:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    NOTCH_VARIANCE
2                   Target type        Regression
3           Original data shape          (89, 12)
4        Transformed data shape          (89, 14)
5   Transformed train set shape          (76, 14)
6    Transformed test set shape          (13, 14)
7              Numeric features                 5
8                 Date features                 1
9          Categorical features                 5
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16             Transform target              True
17      Transform target method       yeo-johnson
18               Fold Generator   TimeSeriesSplit
19                  Fold Number                 3
20                     CPU Jobs                -1
21                      Use GPU             False
22               Log Experiment             False
23              Experiment Name  reg-default-name
24                          USI              b567
2023-06-13 14:50:47,340:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:47,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:47,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:47,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:50:47,494:INFO:setup() successfully completed in 2.55s...............
2023-06-13 14:51:48,763:INFO:Initializing compare_models()
2023-06-13 14:51:48,763:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-13 14:51:48,764:INFO:Checking exceptions
2023-06-13 14:51:48,768:INFO:Preparing display monitor
2023-06-13 14:51:48,839:INFO:Initializing Linear Regression
2023-06-13 14:51:48,839:INFO:Total runtime is 0.0 minutes
2023-06-13 14:51:48,851:INFO:SubProcess create_model() called ==================================
2023-06-13 14:51:48,852:INFO:Initializing create_model()
2023-06-13 14:51:48,852:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:51:48,852:INFO:Checking exceptions
2023-06-13 14:51:48,852:INFO:Importing libraries
2023-06-13 14:51:48,853:INFO:Copying training dataset
2023-06-13 14:51:48,866:INFO:Defining folds
2023-06-13 14:51:48,866:INFO:Declaring metric variables
2023-06-13 14:51:48,881:INFO:Importing untrained model
2023-06-13 14:51:48,889:INFO:Linear Regression Imported successfully
2023-06-13 14:51:48,903:INFO:Starting cross validation
2023-06-13 14:51:48,979:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:05,791:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:05,809:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:05,817:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:06,303:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:06,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:06,364:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:06,366:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:06,382:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:06,385:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:06,386:INFO:Calculating mean and std
2023-06-13 14:52:06,390:INFO:Creating metrics dataframe
2023-06-13 14:52:06,408:INFO:Uploading results into container
2023-06-13 14:52:06,410:INFO:Uploading model into container now
2023-06-13 14:52:06,411:INFO:_master_model_container: 1
2023-06-13 14:52:06,411:INFO:_display_container: 2
2023-06-13 14:52:06,412:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:52:06,412:INFO:create_model() successfully completed......................................
2023-06-13 14:52:06,563:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:06,563:INFO:Creating metrics dataframe
2023-06-13 14:52:06,573:INFO:Initializing Lasso Regression
2023-06-13 14:52:06,573:INFO:Total runtime is 0.29557232062021893 minutes
2023-06-13 14:52:06,580:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:06,581:INFO:Initializing create_model()
2023-06-13 14:52:06,581:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:06,582:INFO:Checking exceptions
2023-06-13 14:52:06,582:INFO:Importing libraries
2023-06-13 14:52:06,582:INFO:Copying training dataset
2023-06-13 14:52:06,597:INFO:Defining folds
2023-06-13 14:52:06,600:INFO:Declaring metric variables
2023-06-13 14:52:06,611:INFO:Importing untrained model
2023-06-13 14:52:06,621:INFO:Lasso Regression Imported successfully
2023-06-13 14:52:06,634:INFO:Starting cross validation
2023-06-13 14:52:06,638:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:06,702:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:06,718:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:07,223:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:07,237:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:07,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:07,583:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:07,602:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:07,602:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:12,654:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:12,817:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:12,914:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:12,915:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:12,916:INFO:Calculating mean and std
2023-06-13 14:52:12,920:INFO:Creating metrics dataframe
2023-06-13 14:52:12,943:INFO:Uploading results into container
2023-06-13 14:52:12,945:INFO:Uploading model into container now
2023-06-13 14:52:12,946:INFO:_master_model_container: 2
2023-06-13 14:52:12,946:INFO:_display_container: 2
2023-06-13 14:52:12,947:INFO:Lasso(random_state=123)
2023-06-13 14:52:12,947:INFO:create_model() successfully completed......................................
2023-06-13 14:52:13,044:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:13,044:INFO:Creating metrics dataframe
2023-06-13 14:52:13,055:INFO:Initializing Ridge Regression
2023-06-13 14:52:13,055:INFO:Total runtime is 0.4036003708839417 minutes
2023-06-13 14:52:13,059:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:13,060:INFO:Initializing create_model()
2023-06-13 14:52:13,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:13,060:INFO:Checking exceptions
2023-06-13 14:52:13,060:INFO:Importing libraries
2023-06-13 14:52:13,061:INFO:Copying training dataset
2023-06-13 14:52:13,082:INFO:Defining folds
2023-06-13 14:52:13,082:INFO:Declaring metric variables
2023-06-13 14:52:13,091:INFO:Importing untrained model
2023-06-13 14:52:13,097:INFO:Ridge Regression Imported successfully
2023-06-13 14:52:13,109:INFO:Starting cross validation
2023-06-13 14:52:13,113:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:13,154:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:13,168:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:13,187:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:13,525:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:13,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:13,579:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:13,580:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:13,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:13,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:13,593:INFO:Calculating mean and std
2023-06-13 14:52:13,596:INFO:Creating metrics dataframe
2023-06-13 14:52:13,618:INFO:Uploading results into container
2023-06-13 14:52:13,619:INFO:Uploading model into container now
2023-06-13 14:52:13,619:INFO:_master_model_container: 3
2023-06-13 14:52:13,619:INFO:_display_container: 2
2023-06-13 14:52:13,620:INFO:Ridge(random_state=123)
2023-06-13 14:52:13,620:INFO:create_model() successfully completed......................................
2023-06-13 14:52:13,706:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:13,707:INFO:Creating metrics dataframe
2023-06-13 14:52:13,717:INFO:Initializing Elastic Net
2023-06-13 14:52:13,718:INFO:Total runtime is 0.41464875936508183 minutes
2023-06-13 14:52:13,722:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:13,722:INFO:Initializing create_model()
2023-06-13 14:52:13,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:13,723:INFO:Checking exceptions
2023-06-13 14:52:13,723:INFO:Importing libraries
2023-06-13 14:52:13,723:INFO:Copying training dataset
2023-06-13 14:52:13,737:INFO:Defining folds
2023-06-13 14:52:13,738:INFO:Declaring metric variables
2023-06-13 14:52:13,744:INFO:Importing untrained model
2023-06-13 14:52:13,754:INFO:Elastic Net Imported successfully
2023-06-13 14:52:13,768:INFO:Starting cross validation
2023-06-13 14:52:13,771:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:13,820:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:13,835:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:13,847:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:14,043:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:14,044:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:14,064:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:52:14,270:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:14,270:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:14,286:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:14,286:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:14,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:14,328:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:14,329:INFO:Calculating mean and std
2023-06-13 14:52:14,332:INFO:Creating metrics dataframe
2023-06-13 14:52:14,357:INFO:Uploading results into container
2023-06-13 14:52:14,358:INFO:Uploading model into container now
2023-06-13 14:52:14,358:INFO:_master_model_container: 4
2023-06-13 14:52:14,358:INFO:_display_container: 2
2023-06-13 14:52:14,359:INFO:ElasticNet(random_state=123)
2023-06-13 14:52:14,359:INFO:create_model() successfully completed......................................
2023-06-13 14:52:14,446:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:14,446:INFO:Creating metrics dataframe
2023-06-13 14:52:14,459:INFO:Initializing Least Angle Regression
2023-06-13 14:52:14,459:INFO:Total runtime is 0.4270084778467815 minutes
2023-06-13 14:52:14,464:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:14,464:INFO:Initializing create_model()
2023-06-13 14:52:14,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:14,465:INFO:Checking exceptions
2023-06-13 14:52:14,465:INFO:Importing libraries
2023-06-13 14:52:14,466:INFO:Copying training dataset
2023-06-13 14:52:14,480:INFO:Defining folds
2023-06-13 14:52:14,480:INFO:Declaring metric variables
2023-06-13 14:52:14,489:INFO:Importing untrained model
2023-06-13 14:52:14,496:INFO:Least Angle Regression Imported successfully
2023-06-13 14:52:14,510:INFO:Starting cross validation
2023-06-13 14:52:14,515:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:14,556:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:14,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:14,584:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:14,795:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:14,799:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:14,799:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:15,038:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:15,038:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,053:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:15,053:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,053:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,084:INFO:Calculating mean and std
2023-06-13 14:52:15,086:INFO:Creating metrics dataframe
2023-06-13 14:52:15,108:INFO:Uploading results into container
2023-06-13 14:52:15,109:INFO:Uploading model into container now
2023-06-13 14:52:15,110:INFO:_master_model_container: 5
2023-06-13 14:52:15,110:INFO:_display_container: 2
2023-06-13 14:52:15,110:INFO:Lars(random_state=123)
2023-06-13 14:52:15,111:INFO:create_model() successfully completed......................................
2023-06-13 14:52:15,197:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:15,197:INFO:Creating metrics dataframe
2023-06-13 14:52:15,209:INFO:Initializing Lasso Least Angle Regression
2023-06-13 14:52:15,209:INFO:Total runtime is 0.43950272003809615 minutes
2023-06-13 14:52:15,213:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:15,214:INFO:Initializing create_model()
2023-06-13 14:52:15,214:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:15,215:INFO:Checking exceptions
2023-06-13 14:52:15,215:INFO:Importing libraries
2023-06-13 14:52:15,215:INFO:Copying training dataset
2023-06-13 14:52:15,228:INFO:Defining folds
2023-06-13 14:52:15,229:INFO:Declaring metric variables
2023-06-13 14:52:15,238:INFO:Importing untrained model
2023-06-13 14:52:15,243:INFO:Lasso Least Angle Regression Imported successfully
2023-06-13 14:52:15,257:INFO:Starting cross validation
2023-06-13 14:52:15,260:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:15,301:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:15,315:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:15,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:15,515:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:52:15,521:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:52:15,550:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:52:15,767:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:15,767:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,781:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:15,781:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,820:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:15,820:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:15,822:INFO:Calculating mean and std
2023-06-13 14:52:15,826:INFO:Creating metrics dataframe
2023-06-13 14:52:15,855:INFO:Uploading results into container
2023-06-13 14:52:15,856:INFO:Uploading model into container now
2023-06-13 14:52:15,857:INFO:_master_model_container: 6
2023-06-13 14:52:15,857:INFO:_display_container: 2
2023-06-13 14:52:15,857:INFO:LassoLars(random_state=123)
2023-06-13 14:52:15,857:INFO:create_model() successfully completed......................................
2023-06-13 14:52:15,946:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:15,946:INFO:Creating metrics dataframe
2023-06-13 14:52:15,957:INFO:Initializing Orthogonal Matching Pursuit
2023-06-13 14:52:15,958:INFO:Total runtime is 0.4519860625267029 minutes
2023-06-13 14:52:15,962:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:15,963:INFO:Initializing create_model()
2023-06-13 14:52:15,963:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:15,963:INFO:Checking exceptions
2023-06-13 14:52:15,963:INFO:Importing libraries
2023-06-13 14:52:15,963:INFO:Copying training dataset
2023-06-13 14:52:15,974:INFO:Defining folds
2023-06-13 14:52:15,976:INFO:Declaring metric variables
2023-06-13 14:52:15,986:INFO:Importing untrained model
2023-06-13 14:52:15,993:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-13 14:52:16,006:INFO:Starting cross validation
2023-06-13 14:52:16,010:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:16,052:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:16,064:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:16,086:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:16,257:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:16,294:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:16,299:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:52:16,299:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:52:16,300:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:52:16,306:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:52:16,540:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:16,540:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:16,541:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:16,541:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:16,551:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:16,551:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:16,599:INFO:Calculating mean and std
2023-06-13 14:52:16,601:INFO:Creating metrics dataframe
2023-06-13 14:52:16,630:INFO:Uploading results into container
2023-06-13 14:52:16,630:INFO:Uploading model into container now
2023-06-13 14:52:16,631:INFO:_master_model_container: 7
2023-06-13 14:52:16,631:INFO:_display_container: 2
2023-06-13 14:52:16,631:INFO:OrthogonalMatchingPursuit()
2023-06-13 14:52:16,631:INFO:create_model() successfully completed......................................
2023-06-13 14:52:16,719:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:16,719:INFO:Creating metrics dataframe
2023-06-13 14:52:16,734:INFO:Initializing Bayesian Ridge
2023-06-13 14:52:16,735:INFO:Total runtime is 0.4649365107218425 minutes
2023-06-13 14:52:16,741:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:16,742:INFO:Initializing create_model()
2023-06-13 14:52:16,742:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:16,743:INFO:Checking exceptions
2023-06-13 14:52:16,743:INFO:Importing libraries
2023-06-13 14:52:16,743:INFO:Copying training dataset
2023-06-13 14:52:16,765:INFO:Defining folds
2023-06-13 14:52:16,766:INFO:Declaring metric variables
2023-06-13 14:52:16,770:INFO:Importing untrained model
2023-06-13 14:52:16,775:INFO:Bayesian Ridge Imported successfully
2023-06-13 14:52:16,789:INFO:Starting cross validation
2023-06-13 14:52:16,793:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:16,847:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:16,860:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:16,874:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:17,313:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:17,313:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:17,356:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:17,357:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:17,358:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:17,359:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:17,388:INFO:Calculating mean and std
2023-06-13 14:52:17,390:INFO:Creating metrics dataframe
2023-06-13 14:52:17,422:INFO:Uploading results into container
2023-06-13 14:52:17,422:INFO:Uploading model into container now
2023-06-13 14:52:17,423:INFO:_master_model_container: 8
2023-06-13 14:52:17,423:INFO:_display_container: 2
2023-06-13 14:52:17,423:INFO:BayesianRidge()
2023-06-13 14:52:17,423:INFO:create_model() successfully completed......................................
2023-06-13 14:52:17,511:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:17,512:INFO:Creating metrics dataframe
2023-06-13 14:52:17,525:INFO:Initializing Passive Aggressive Regressor
2023-06-13 14:52:17,525:INFO:Total runtime is 0.47811149358749394 minutes
2023-06-13 14:52:17,531:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:17,531:INFO:Initializing create_model()
2023-06-13 14:52:17,531:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:17,531:INFO:Checking exceptions
2023-06-13 14:52:17,531:INFO:Importing libraries
2023-06-13 14:52:17,531:INFO:Copying training dataset
2023-06-13 14:52:17,541:INFO:Defining folds
2023-06-13 14:52:17,541:INFO:Declaring metric variables
2023-06-13 14:52:17,548:INFO:Importing untrained model
2023-06-13 14:52:17,558:INFO:Passive Aggressive Regressor Imported successfully
2023-06-13 14:52:17,573:INFO:Starting cross validation
2023-06-13 14:52:17,577:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:17,618:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:17,628:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:17,646:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:18,079:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,080:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,099:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,099:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,136:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,137:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,152:INFO:Calculating mean and std
2023-06-13 14:52:18,155:INFO:Creating metrics dataframe
2023-06-13 14:52:18,191:INFO:Uploading results into container
2023-06-13 14:52:18,192:INFO:Uploading model into container now
2023-06-13 14:52:18,192:INFO:_master_model_container: 9
2023-06-13 14:52:18,192:INFO:_display_container: 2
2023-06-13 14:52:18,193:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-13 14:52:18,193:INFO:create_model() successfully completed......................................
2023-06-13 14:52:18,278:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:18,278:INFO:Creating metrics dataframe
2023-06-13 14:52:18,291:INFO:Initializing Huber Regressor
2023-06-13 14:52:18,291:INFO:Total runtime is 0.49087030490239464 minutes
2023-06-13 14:52:18,295:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:18,296:INFO:Initializing create_model()
2023-06-13 14:52:18,296:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:18,296:INFO:Checking exceptions
2023-06-13 14:52:18,296:INFO:Importing libraries
2023-06-13 14:52:18,296:INFO:Copying training dataset
2023-06-13 14:52:18,306:INFO:Defining folds
2023-06-13 14:52:18,306:INFO:Declaring metric variables
2023-06-13 14:52:18,322:INFO:Importing untrained model
2023-06-13 14:52:18,330:INFO:Huber Regressor Imported successfully
2023-06-13 14:52:18,347:INFO:Starting cross validation
2023-06-13 14:52:18,352:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:18,396:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:18,410:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:18,426:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:18,854:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,855:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,870:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,870:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,938:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:18,938:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:18,942:INFO:Calculating mean and std
2023-06-13 14:52:18,946:INFO:Creating metrics dataframe
2023-06-13 14:52:19,002:INFO:Uploading results into container
2023-06-13 14:52:19,003:INFO:Uploading model into container now
2023-06-13 14:52:19,004:INFO:_master_model_container: 10
2023-06-13 14:52:19,004:INFO:_display_container: 2
2023-06-13 14:52:19,004:INFO:HuberRegressor()
2023-06-13 14:52:19,005:INFO:create_model() successfully completed......................................
2023-06-13 14:52:19,099:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:19,099:INFO:Creating metrics dataframe
2023-06-13 14:52:19,115:INFO:Initializing K Neighbors Regressor
2023-06-13 14:52:19,115:INFO:Total runtime is 0.5046008070309957 minutes
2023-06-13 14:52:19,120:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:19,120:INFO:Initializing create_model()
2023-06-13 14:52:19,121:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:19,121:INFO:Checking exceptions
2023-06-13 14:52:19,121:INFO:Importing libraries
2023-06-13 14:52:19,121:INFO:Copying training dataset
2023-06-13 14:52:19,131:INFO:Defining folds
2023-06-13 14:52:19,132:INFO:Declaring metric variables
2023-06-13 14:52:19,142:INFO:Importing untrained model
2023-06-13 14:52:19,154:INFO:K Neighbors Regressor Imported successfully
2023-06-13 14:52:19,167:INFO:Starting cross validation
2023-06-13 14:52:19,171:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:19,213:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:19,227:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:19,239:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:19,721:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:19,721:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:19,722:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:19,722:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:19,746:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:19,747:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:19,800:INFO:Calculating mean and std
2023-06-13 14:52:19,803:INFO:Creating metrics dataframe
2023-06-13 14:52:19,841:INFO:Uploading results into container
2023-06-13 14:52:19,842:INFO:Uploading model into container now
2023-06-13 14:52:19,842:INFO:_master_model_container: 11
2023-06-13 14:52:19,842:INFO:_display_container: 2
2023-06-13 14:52:19,843:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-13 14:52:19,843:INFO:create_model() successfully completed......................................
2023-06-13 14:52:19,929:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:19,929:INFO:Creating metrics dataframe
2023-06-13 14:52:19,942:INFO:Initializing Decision Tree Regressor
2023-06-13 14:52:19,943:INFO:Total runtime is 0.5184036612510682 minutes
2023-06-13 14:52:19,947:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:19,948:INFO:Initializing create_model()
2023-06-13 14:52:19,948:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:19,948:INFO:Checking exceptions
2023-06-13 14:52:19,948:INFO:Importing libraries
2023-06-13 14:52:19,948:INFO:Copying training dataset
2023-06-13 14:52:19,958:INFO:Defining folds
2023-06-13 14:52:19,959:INFO:Declaring metric variables
2023-06-13 14:52:19,970:INFO:Importing untrained model
2023-06-13 14:52:19,979:INFO:Decision Tree Regressor Imported successfully
2023-06-13 14:52:19,989:INFO:Starting cross validation
2023-06-13 14:52:19,991:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:20,029:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:20,041:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:20,063:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:20,418:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:20,418:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:20,441:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:20,441:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:20,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:20,528:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:20,529:INFO:Calculating mean and std
2023-06-13 14:52:20,533:INFO:Creating metrics dataframe
2023-06-13 14:52:20,580:INFO:Uploading results into container
2023-06-13 14:52:20,581:INFO:Uploading model into container now
2023-06-13 14:52:20,581:INFO:_master_model_container: 12
2023-06-13 14:52:20,581:INFO:_display_container: 2
2023-06-13 14:52:20,582:INFO:DecisionTreeRegressor(random_state=123)
2023-06-13 14:52:20,582:INFO:create_model() successfully completed......................................
2023-06-13 14:52:20,670:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:20,670:INFO:Creating metrics dataframe
2023-06-13 14:52:20,684:INFO:Initializing Random Forest Regressor
2023-06-13 14:52:20,684:INFO:Total runtime is 0.530747127532959 minutes
2023-06-13 14:52:20,689:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:20,689:INFO:Initializing create_model()
2023-06-13 14:52:20,690:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:20,690:INFO:Checking exceptions
2023-06-13 14:52:20,690:INFO:Importing libraries
2023-06-13 14:52:20,690:INFO:Copying training dataset
2023-06-13 14:52:20,700:INFO:Defining folds
2023-06-13 14:52:20,700:INFO:Declaring metric variables
2023-06-13 14:52:20,712:INFO:Importing untrained model
2023-06-13 14:52:20,720:INFO:Random Forest Regressor Imported successfully
2023-06-13 14:52:20,732:INFO:Starting cross validation
2023-06-13 14:52:20,736:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:20,777:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:20,791:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:20,804:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:21,589:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:21,589:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:21,777:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:21,778:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:21,778:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:21,778:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:21,826:INFO:Calculating mean and std
2023-06-13 14:52:21,828:INFO:Creating metrics dataframe
2023-06-13 14:52:21,875:INFO:Uploading results into container
2023-06-13 14:52:21,876:INFO:Uploading model into container now
2023-06-13 14:52:21,877:INFO:_master_model_container: 13
2023-06-13 14:52:21,877:INFO:_display_container: 2
2023-06-13 14:52:21,877:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:52:21,877:INFO:create_model() successfully completed......................................
2023-06-13 14:52:21,974:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:21,975:INFO:Creating metrics dataframe
2023-06-13 14:52:21,988:INFO:Initializing Extra Trees Regressor
2023-06-13 14:52:21,989:INFO:Total runtime is 0.5525034268697103 minutes
2023-06-13 14:52:21,995:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:21,996:INFO:Initializing create_model()
2023-06-13 14:52:21,996:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:21,996:INFO:Checking exceptions
2023-06-13 14:52:21,996:INFO:Importing libraries
2023-06-13 14:52:21,996:INFO:Copying training dataset
2023-06-13 14:52:22,008:INFO:Defining folds
2023-06-13 14:52:22,008:INFO:Declaring metric variables
2023-06-13 14:52:22,016:INFO:Importing untrained model
2023-06-13 14:52:22,024:INFO:Extra Trees Regressor Imported successfully
2023-06-13 14:52:22,038:INFO:Starting cross validation
2023-06-13 14:52:22,041:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:22,086:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:22,105:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:22,120:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:22,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:22,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,051:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:23,051:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,058:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:23,059:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,114:INFO:Calculating mean and std
2023-06-13 14:52:23,117:INFO:Creating metrics dataframe
2023-06-13 14:52:23,186:INFO:Uploading results into container
2023-06-13 14:52:23,187:INFO:Uploading model into container now
2023-06-13 14:52:23,188:INFO:_master_model_container: 14
2023-06-13 14:52:23,188:INFO:_display_container: 2
2023-06-13 14:52:23,189:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:52:23,189:INFO:create_model() successfully completed......................................
2023-06-13 14:52:23,275:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:23,275:INFO:Creating metrics dataframe
2023-06-13 14:52:23,288:INFO:Initializing AdaBoost Regressor
2023-06-13 14:52:23,288:INFO:Total runtime is 0.5741607626279196 minutes
2023-06-13 14:52:23,293:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:23,293:INFO:Initializing create_model()
2023-06-13 14:52:23,294:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:23,294:INFO:Checking exceptions
2023-06-13 14:52:23,294:INFO:Importing libraries
2023-06-13 14:52:23,295:INFO:Copying training dataset
2023-06-13 14:52:23,305:INFO:Defining folds
2023-06-13 14:52:23,305:INFO:Declaring metric variables
2023-06-13 14:52:23,316:INFO:Importing untrained model
2023-06-13 14:52:23,326:INFO:AdaBoost Regressor Imported successfully
2023-06-13 14:52:23,338:INFO:Starting cross validation
2023-06-13 14:52:23,342:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:23,391:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:23,409:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:23,428:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:23,723:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:23,724:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,851:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:23,851:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,901:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:23,901:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:23,910:INFO:Calculating mean and std
2023-06-13 14:52:23,912:INFO:Creating metrics dataframe
2023-06-13 14:52:23,990:INFO:Uploading results into container
2023-06-13 14:52:23,991:INFO:Uploading model into container now
2023-06-13 14:52:23,993:INFO:_master_model_container: 15
2023-06-13 14:52:23,993:INFO:_display_container: 2
2023-06-13 14:52:23,994:INFO:AdaBoostRegressor(random_state=123)
2023-06-13 14:52:23,994:INFO:create_model() successfully completed......................................
2023-06-13 14:52:24,133:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:24,134:INFO:Creating metrics dataframe
2023-06-13 14:52:24,161:INFO:Initializing Gradient Boosting Regressor
2023-06-13 14:52:24,162:INFO:Total runtime is 0.5887007395426433 minutes
2023-06-13 14:52:24,169:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:24,172:INFO:Initializing create_model()
2023-06-13 14:52:24,172:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:24,173:INFO:Checking exceptions
2023-06-13 14:52:24,173:INFO:Importing libraries
2023-06-13 14:52:24,173:INFO:Copying training dataset
2023-06-13 14:52:24,191:INFO:Defining folds
2023-06-13 14:52:24,191:INFO:Declaring metric variables
2023-06-13 14:52:24,202:INFO:Importing untrained model
2023-06-13 14:52:24,212:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 14:52:24,229:INFO:Starting cross validation
2023-06-13 14:52:24,232:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:24,289:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:24,309:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:24,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:25,099:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:25,099:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:25,103:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:25,103:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:25,219:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:25,219:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:25,240:INFO:Calculating mean and std
2023-06-13 14:52:25,243:INFO:Creating metrics dataframe
2023-06-13 14:52:25,319:INFO:Uploading results into container
2023-06-13 14:52:25,320:INFO:Uploading model into container now
2023-06-13 14:52:25,320:INFO:_master_model_container: 16
2023-06-13 14:52:25,320:INFO:_display_container: 2
2023-06-13 14:52:25,321:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 14:52:25,321:INFO:create_model() successfully completed......................................
2023-06-13 14:52:25,422:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:25,423:INFO:Creating metrics dataframe
2023-06-13 14:52:25,446:INFO:Initializing Light Gradient Boosting Machine
2023-06-13 14:52:25,446:INFO:Total runtime is 0.6101174195607505 minutes
2023-06-13 14:52:25,454:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:25,455:INFO:Initializing create_model()
2023-06-13 14:52:25,455:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:25,455:INFO:Checking exceptions
2023-06-13 14:52:25,455:INFO:Importing libraries
2023-06-13 14:52:25,455:INFO:Copying training dataset
2023-06-13 14:52:25,474:INFO:Defining folds
2023-06-13 14:52:25,474:INFO:Declaring metric variables
2023-06-13 14:52:25,506:INFO:Importing untrained model
2023-06-13 14:52:25,516:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-13 14:52:25,535:INFO:Starting cross validation
2023-06-13 14:52:25,539:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:28,096:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:28,099:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:28,119:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:28,670:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:28,670:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:28,690:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:28,690:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:28,799:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:28,799:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:28,824:INFO:Calculating mean and std
2023-06-13 14:52:28,827:INFO:Creating metrics dataframe
2023-06-13 14:52:28,917:INFO:Uploading results into container
2023-06-13 14:52:28,918:INFO:Uploading model into container now
2023-06-13 14:52:28,919:INFO:_master_model_container: 17
2023-06-13 14:52:28,919:INFO:_display_container: 2
2023-06-13 14:52:28,920:INFO:LGBMRegressor(random_state=123)
2023-06-13 14:52:28,920:INFO:create_model() successfully completed......................................
2023-06-13 14:52:29,024:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:29,024:INFO:Creating metrics dataframe
2023-06-13 14:52:29,044:INFO:Initializing Dummy Regressor
2023-06-13 14:52:29,044:INFO:Total runtime is 0.6700792352358502 minutes
2023-06-13 14:52:29,049:INFO:SubProcess create_model() called ==================================
2023-06-13 14:52:29,050:INFO:Initializing create_model()
2023-06-13 14:52:29,051:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B554BA39A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:29,051:INFO:Checking exceptions
2023-06-13 14:52:29,051:INFO:Importing libraries
2023-06-13 14:52:29,051:INFO:Copying training dataset
2023-06-13 14:52:29,064:INFO:Defining folds
2023-06-13 14:52:29,065:INFO:Declaring metric variables
2023-06-13 14:52:29,074:INFO:Importing untrained model
2023-06-13 14:52:29,090:INFO:Dummy Regressor Imported successfully
2023-06-13 14:52:29,110:INFO:Starting cross validation
2023-06-13 14:52:29,116:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:52:29,174:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:29,189:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:29,206:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:29,728:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:29,728:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:29,779:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:29,779:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:29,838:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:52:29,839:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:52:29,901:INFO:Calculating mean and std
2023-06-13 14:52:29,905:INFO:Creating metrics dataframe
2023-06-13 14:52:29,976:INFO:Uploading results into container
2023-06-13 14:52:29,977:INFO:Uploading model into container now
2023-06-13 14:52:29,977:INFO:_master_model_container: 18
2023-06-13 14:52:29,977:INFO:_display_container: 2
2023-06-13 14:52:29,977:INFO:DummyRegressor()
2023-06-13 14:52:29,977:INFO:create_model() successfully completed......................................
2023-06-13 14:52:30,063:INFO:SubProcess create_model() end ==================================
2023-06-13 14:52:30,063:INFO:Creating metrics dataframe
2023-06-13 14:52:30,093:INFO:Initializing create_model()
2023-06-13 14:52:30,094:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=LinearRegression(n_jobs=-1), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:52:30,094:INFO:Checking exceptions
2023-06-13 14:52:30,097:INFO:Importing libraries
2023-06-13 14:52:30,097:INFO:Copying training dataset
2023-06-13 14:52:30,110:INFO:Defining folds
2023-06-13 14:52:30,111:INFO:Declaring metric variables
2023-06-13 14:52:30,111:INFO:Importing untrained model
2023-06-13 14:52:30,111:INFO:Declaring custom model
2023-06-13 14:52:30,112:INFO:Linear Regression Imported successfully
2023-06-13 14:52:30,115:INFO:Cross validation set to False
2023-06-13 14:52:30,116:INFO:Fitting Model
2023-06-13 14:52:30,131:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:52:30,365:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:52:30,365:INFO:create_model() successfully completed......................................
2023-06-13 14:52:30,520:INFO:_master_model_container: 18
2023-06-13 14:52:30,520:INFO:_display_container: 2
2023-06-13 14:52:30,521:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:52:30,522:INFO:compare_models() successfully completed......................................
2023-06-13 14:55:15,140:INFO:Initializing compare_models()
2023-06-13 14:55:15,140:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-13 14:55:15,140:INFO:Checking exceptions
2023-06-13 14:55:15,144:INFO:Preparing display monitor
2023-06-13 14:55:15,219:INFO:Initializing Linear Regression
2023-06-13 14:55:15,220:INFO:Total runtime is 1.6673405965169272e-05 minutes
2023-06-13 14:55:15,227:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:15,227:INFO:Initializing create_model()
2023-06-13 14:55:15,228:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:15,228:INFO:Checking exceptions
2023-06-13 14:55:15,228:INFO:Importing libraries
2023-06-13 14:55:15,228:INFO:Copying training dataset
2023-06-13 14:55:15,240:INFO:Defining folds
2023-06-13 14:55:15,240:INFO:Declaring metric variables
2023-06-13 14:55:15,250:INFO:Importing untrained model
2023-06-13 14:55:15,258:INFO:Linear Regression Imported successfully
2023-06-13 14:55:15,271:INFO:Starting cross validation
2023-06-13 14:55:15,276:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:15,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:15,332:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:15,342:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:15,578:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:15,579:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:15,729:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:15,729:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:15,786:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:15,787:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:15,799:INFO:Calculating mean and std
2023-06-13 14:55:15,800:INFO:Creating metrics dataframe
2023-06-13 14:55:15,872:INFO:Uploading results into container
2023-06-13 14:55:15,873:INFO:Uploading model into container now
2023-06-13 14:55:15,874:INFO:_master_model_container: 19
2023-06-13 14:55:15,874:INFO:_display_container: 3
2023-06-13 14:55:15,874:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:55:15,874:INFO:create_model() successfully completed......................................
2023-06-13 14:55:15,983:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:15,983:INFO:Creating metrics dataframe
2023-06-13 14:55:15,998:INFO:Initializing Lasso Regression
2023-06-13 14:55:15,998:INFO:Total runtime is 0.01298814614613851 minutes
2023-06-13 14:55:16,007:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:16,008:INFO:Initializing create_model()
2023-06-13 14:55:16,008:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:16,009:INFO:Checking exceptions
2023-06-13 14:55:16,009:INFO:Importing libraries
2023-06-13 14:55:16,009:INFO:Copying training dataset
2023-06-13 14:55:16,022:INFO:Defining folds
2023-06-13 14:55:16,022:INFO:Declaring metric variables
2023-06-13 14:55:16,030:INFO:Importing untrained model
2023-06-13 14:55:16,037:INFO:Lasso Regression Imported successfully
2023-06-13 14:55:16,052:INFO:Starting cross validation
2023-06-13 14:55:16,056:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:16,106:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:16,122:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:16,139:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:16,354:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:16,366:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:16,398:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:16,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:16,582:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:16,602:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:16,602:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:16,674:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:16,675:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:16,731:INFO:Calculating mean and std
2023-06-13 14:55:16,734:INFO:Creating metrics dataframe
2023-06-13 14:55:16,806:INFO:Uploading results into container
2023-06-13 14:55:16,807:INFO:Uploading model into container now
2023-06-13 14:55:16,807:INFO:_master_model_container: 20
2023-06-13 14:55:16,807:INFO:_display_container: 3
2023-06-13 14:55:16,808:INFO:Lasso(random_state=123)
2023-06-13 14:55:16,808:INFO:create_model() successfully completed......................................
2023-06-13 14:55:16,894:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:16,894:INFO:Creating metrics dataframe
2023-06-13 14:55:16,905:INFO:Initializing Ridge Regression
2023-06-13 14:55:16,906:INFO:Total runtime is 0.02813010613123576 minutes
2023-06-13 14:55:16,910:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:16,911:INFO:Initializing create_model()
2023-06-13 14:55:16,911:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:16,911:INFO:Checking exceptions
2023-06-13 14:55:16,911:INFO:Importing libraries
2023-06-13 14:55:16,912:INFO:Copying training dataset
2023-06-13 14:55:16,927:INFO:Defining folds
2023-06-13 14:55:16,928:INFO:Declaring metric variables
2023-06-13 14:55:16,936:INFO:Importing untrained model
2023-06-13 14:55:16,944:INFO:Ridge Regression Imported successfully
2023-06-13 14:55:16,963:INFO:Starting cross validation
2023-06-13 14:55:16,966:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:17,007:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,024:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,044:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,263:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:17,264:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:17,298:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:17,298:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:17,490:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:17,490:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:17,492:INFO:Calculating mean and std
2023-06-13 14:55:17,496:INFO:Creating metrics dataframe
2023-06-13 14:55:17,583:INFO:Uploading results into container
2023-06-13 14:55:17,584:INFO:Uploading model into container now
2023-06-13 14:55:17,585:INFO:_master_model_container: 21
2023-06-13 14:55:17,585:INFO:_display_container: 3
2023-06-13 14:55:17,585:INFO:Ridge(random_state=123)
2023-06-13 14:55:17,585:INFO:create_model() successfully completed......................................
2023-06-13 14:55:17,671:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:17,671:INFO:Creating metrics dataframe
2023-06-13 14:55:17,683:INFO:Initializing Elastic Net
2023-06-13 14:55:17,683:INFO:Total runtime is 0.04108128945032756 minutes
2023-06-13 14:55:17,687:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:17,688:INFO:Initializing create_model()
2023-06-13 14:55:17,688:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:17,688:INFO:Checking exceptions
2023-06-13 14:55:17,688:INFO:Importing libraries
2023-06-13 14:55:17,688:INFO:Copying training dataset
2023-06-13 14:55:17,699:INFO:Defining folds
2023-06-13 14:55:17,699:INFO:Declaring metric variables
2023-06-13 14:55:17,710:INFO:Importing untrained model
2023-06-13 14:55:17,717:INFO:Elastic Net Imported successfully
2023-06-13 14:55:17,730:INFO:Starting cross validation
2023-06-13 14:55:17,735:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:17,773:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,787:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,802:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:17,967:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:18,010:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:18,011:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,011:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,026:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-13 14:55:18,077:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,077:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,081:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,081:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,162:INFO:Calculating mean and std
2023-06-13 14:55:18,164:INFO:Creating metrics dataframe
2023-06-13 14:55:18,233:INFO:Uploading results into container
2023-06-13 14:55:18,233:INFO:Uploading model into container now
2023-06-13 14:55:18,234:INFO:_master_model_container: 22
2023-06-13 14:55:18,234:INFO:_display_container: 3
2023-06-13 14:55:18,234:INFO:ElasticNet(random_state=123)
2023-06-13 14:55:18,234:INFO:create_model() successfully completed......................................
2023-06-13 14:55:18,320:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:18,320:INFO:Creating metrics dataframe
2023-06-13 14:55:18,331:INFO:Initializing Least Angle Regression
2023-06-13 14:55:18,332:INFO:Total runtime is 0.05189021428426107 minutes
2023-06-13 14:55:18,336:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:18,337:INFO:Initializing create_model()
2023-06-13 14:55:18,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:18,337:INFO:Checking exceptions
2023-06-13 14:55:18,337:INFO:Importing libraries
2023-06-13 14:55:18,337:INFO:Copying training dataset
2023-06-13 14:55:18,354:INFO:Defining folds
2023-06-13 14:55:18,354:INFO:Declaring metric variables
2023-06-13 14:55:18,362:INFO:Importing untrained model
2023-06-13 14:55:18,368:INFO:Least Angle Regression Imported successfully
2023-06-13 14:55:18,380:INFO:Starting cross validation
2023-06-13 14:55:18,385:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:18,427:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:18,443:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:18,463:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:18,607:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:18,640:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,641:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,652:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:18,660:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:18,704:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,705:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,711:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:18,711:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:18,804:INFO:Calculating mean and std
2023-06-13 14:55:18,806:INFO:Creating metrics dataframe
2023-06-13 14:55:18,878:INFO:Uploading results into container
2023-06-13 14:55:18,879:INFO:Uploading model into container now
2023-06-13 14:55:18,880:INFO:_master_model_container: 23
2023-06-13 14:55:18,880:INFO:_display_container: 3
2023-06-13 14:55:18,880:INFO:Lars(random_state=123)
2023-06-13 14:55:18,880:INFO:create_model() successfully completed......................................
2023-06-13 14:55:18,981:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:18,982:INFO:Creating metrics dataframe
2023-06-13 14:55:18,995:INFO:Initializing Lasso Least Angle Regression
2023-06-13 14:55:18,995:INFO:Total runtime is 0.06293761332829793 minutes
2023-06-13 14:55:19,001:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:19,001:INFO:Initializing create_model()
2023-06-13 14:55:19,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:19,002:INFO:Checking exceptions
2023-06-13 14:55:19,002:INFO:Importing libraries
2023-06-13 14:55:19,002:INFO:Copying training dataset
2023-06-13 14:55:19,015:INFO:Defining folds
2023-06-13 14:55:19,015:INFO:Declaring metric variables
2023-06-13 14:55:19,024:INFO:Importing untrained model
2023-06-13 14:55:19,032:INFO:Lasso Least Angle Regression Imported successfully
2023-06-13 14:55:19,048:INFO:Starting cross validation
2023-06-13 14:55:19,052:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:19,092:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,102:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,122:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,282:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:55:19,305:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:55:19,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:19,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:19,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:55:19,358:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:19,358:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:19,388:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:19,388:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:19,476:INFO:Calculating mean and std
2023-06-13 14:55:19,478:INFO:Creating metrics dataframe
2023-06-13 14:55:19,550:INFO:Uploading results into container
2023-06-13 14:55:19,551:INFO:Uploading model into container now
2023-06-13 14:55:19,551:INFO:_master_model_container: 24
2023-06-13 14:55:19,551:INFO:_display_container: 3
2023-06-13 14:55:19,552:INFO:LassoLars(random_state=123)
2023-06-13 14:55:19,552:INFO:create_model() successfully completed......................................
2023-06-13 14:55:19,637:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:19,637:INFO:Creating metrics dataframe
2023-06-13 14:55:19,649:INFO:Initializing Orthogonal Matching Pursuit
2023-06-13 14:55:19,649:INFO:Total runtime is 0.0738361636797587 minutes
2023-06-13 14:55:19,655:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:19,656:INFO:Initializing create_model()
2023-06-13 14:55:19,656:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:19,656:INFO:Checking exceptions
2023-06-13 14:55:19,656:INFO:Importing libraries
2023-06-13 14:55:19,657:INFO:Copying training dataset
2023-06-13 14:55:19,670:INFO:Defining folds
2023-06-13 14:55:19,670:INFO:Declaring metric variables
2023-06-13 14:55:19,677:INFO:Importing untrained model
2023-06-13 14:55:19,685:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-13 14:55:19,701:INFO:Starting cross validation
2023-06-13 14:55:19,705:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:19,747:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,762:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,778:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:19,946:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:19,950:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:55:19,959:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:19,962:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:55:19,978:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:55:19,981:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-13 14:55:19,992:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:19,992:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:20,000:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:20,001:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:20,050:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:20,050:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:20,179:INFO:Calculating mean and std
2023-06-13 14:55:20,184:INFO:Creating metrics dataframe
2023-06-13 14:55:20,291:INFO:Uploading results into container
2023-06-13 14:55:20,292:INFO:Uploading model into container now
2023-06-13 14:55:20,293:INFO:_master_model_container: 25
2023-06-13 14:55:20,293:INFO:_display_container: 3
2023-06-13 14:55:20,294:INFO:OrthogonalMatchingPursuit()
2023-06-13 14:55:20,294:INFO:create_model() successfully completed......................................
2023-06-13 14:55:20,413:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:20,413:INFO:Creating metrics dataframe
2023-06-13 14:55:20,431:INFO:Initializing Bayesian Ridge
2023-06-13 14:55:20,431:INFO:Total runtime is 0.08687845865885416 minutes
2023-06-13 14:55:20,439:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:20,440:INFO:Initializing create_model()
2023-06-13 14:55:20,440:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:20,441:INFO:Checking exceptions
2023-06-13 14:55:20,441:INFO:Importing libraries
2023-06-13 14:55:20,441:INFO:Copying training dataset
2023-06-13 14:55:20,467:INFO:Defining folds
2023-06-13 14:55:20,468:INFO:Declaring metric variables
2023-06-13 14:55:20,480:INFO:Importing untrained model
2023-06-13 14:55:20,492:INFO:Bayesian Ridge Imported successfully
2023-06-13 14:55:20,517:INFO:Starting cross validation
2023-06-13 14:55:20,520:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:20,578:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:20,596:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:20,615:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:20,873:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:20,874:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:20,934:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:20,934:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:20,950:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:20,950:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:21,070:INFO:Calculating mean and std
2023-06-13 14:55:21,072:INFO:Creating metrics dataframe
2023-06-13 14:55:21,159:INFO:Uploading results into container
2023-06-13 14:55:21,160:INFO:Uploading model into container now
2023-06-13 14:55:21,161:INFO:_master_model_container: 26
2023-06-13 14:55:21,161:INFO:_display_container: 3
2023-06-13 14:55:21,161:INFO:BayesianRidge()
2023-06-13 14:55:21,161:INFO:create_model() successfully completed......................................
2023-06-13 14:55:21,263:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:21,263:INFO:Creating metrics dataframe
2023-06-13 14:55:21,281:INFO:Initializing Passive Aggressive Regressor
2023-06-13 14:55:21,281:INFO:Total runtime is 0.10104576349258422 minutes
2023-06-13 14:55:21,285:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:21,286:INFO:Initializing create_model()
2023-06-13 14:55:21,286:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:21,287:INFO:Checking exceptions
2023-06-13 14:55:21,287:INFO:Importing libraries
2023-06-13 14:55:21,288:INFO:Copying training dataset
2023-06-13 14:55:21,302:INFO:Defining folds
2023-06-13 14:55:21,303:INFO:Declaring metric variables
2023-06-13 14:55:21,320:INFO:Importing untrained model
2023-06-13 14:55:21,327:INFO:Passive Aggressive Regressor Imported successfully
2023-06-13 14:55:21,344:INFO:Starting cross validation
2023-06-13 14:55:21,347:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:21,401:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:21,413:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:21,433:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:21,695:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:21,695:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:21,737:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:21,738:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:21,775:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:21,776:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:21,870:INFO:Calculating mean and std
2023-06-13 14:55:21,872:INFO:Creating metrics dataframe
2023-06-13 14:55:21,963:INFO:Uploading results into container
2023-06-13 14:55:21,963:INFO:Uploading model into container now
2023-06-13 14:55:21,964:INFO:_master_model_container: 27
2023-06-13 14:55:21,964:INFO:_display_container: 3
2023-06-13 14:55:21,964:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-13 14:55:21,964:INFO:create_model() successfully completed......................................
2023-06-13 14:55:22,065:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:22,065:INFO:Creating metrics dataframe
2023-06-13 14:55:22,090:INFO:Initializing Huber Regressor
2023-06-13 14:55:22,090:INFO:Total runtime is 0.11451677481333414 minutes
2023-06-13 14:55:22,098:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:22,098:INFO:Initializing create_model()
2023-06-13 14:55:22,099:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:22,099:INFO:Checking exceptions
2023-06-13 14:55:22,099:INFO:Importing libraries
2023-06-13 14:55:22,099:INFO:Copying training dataset
2023-06-13 14:55:22,124:INFO:Defining folds
2023-06-13 14:55:22,125:INFO:Declaring metric variables
2023-06-13 14:55:22,142:INFO:Importing untrained model
2023-06-13 14:55:22,147:INFO:Huber Regressor Imported successfully
2023-06-13 14:55:22,167:INFO:Starting cross validation
2023-06-13 14:55:22,171:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:22,226:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:22,240:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:22,253:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:22,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:22,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:22,544:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:22,545:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:22,597:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:22,597:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:22,708:INFO:Calculating mean and std
2023-06-13 14:55:22,712:INFO:Creating metrics dataframe
2023-06-13 14:55:22,839:INFO:Uploading results into container
2023-06-13 14:55:22,841:INFO:Uploading model into container now
2023-06-13 14:55:22,842:INFO:_master_model_container: 28
2023-06-13 14:55:22,842:INFO:_display_container: 3
2023-06-13 14:55:22,843:INFO:HuberRegressor()
2023-06-13 14:55:22,843:INFO:create_model() successfully completed......................................
2023-06-13 14:55:22,975:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:22,976:INFO:Creating metrics dataframe
2023-06-13 14:55:23,013:INFO:Initializing K Neighbors Regressor
2023-06-13 14:55:23,014:INFO:Total runtime is 0.12991707324981688 minutes
2023-06-13 14:55:23,028:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:23,029:INFO:Initializing create_model()
2023-06-13 14:55:23,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:23,029:INFO:Checking exceptions
2023-06-13 14:55:23,030:INFO:Importing libraries
2023-06-13 14:55:23,030:INFO:Copying training dataset
2023-06-13 14:55:23,047:INFO:Defining folds
2023-06-13 14:55:23,047:INFO:Declaring metric variables
2023-06-13 14:55:23,060:INFO:Importing untrained model
2023-06-13 14:55:23,074:INFO:K Neighbors Regressor Imported successfully
2023-06-13 14:55:23,094:INFO:Starting cross validation
2023-06-13 14:55:23,098:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:23,164:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:23,182:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:23,203:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:23,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:23,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:23,586:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:23,586:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:23,688:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:23,688:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:23,736:INFO:Calculating mean and std
2023-06-13 14:55:23,739:INFO:Creating metrics dataframe
2023-06-13 14:55:23,847:INFO:Uploading results into container
2023-06-13 14:55:23,848:INFO:Uploading model into container now
2023-06-13 14:55:23,849:INFO:_master_model_container: 29
2023-06-13 14:55:23,849:INFO:_display_container: 3
2023-06-13 14:55:23,850:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-13 14:55:23,850:INFO:create_model() successfully completed......................................
2023-06-13 14:55:23,977:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:23,977:INFO:Creating metrics dataframe
2023-06-13 14:55:24,007:INFO:Initializing Decision Tree Regressor
2023-06-13 14:55:24,008:INFO:Total runtime is 0.1464840610822042 minutes
2023-06-13 14:55:24,015:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:24,018:INFO:Initializing create_model()
2023-06-13 14:55:24,018:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:24,018:INFO:Checking exceptions
2023-06-13 14:55:24,018:INFO:Importing libraries
2023-06-13 14:55:24,018:INFO:Copying training dataset
2023-06-13 14:55:24,036:INFO:Defining folds
2023-06-13 14:55:24,037:INFO:Declaring metric variables
2023-06-13 14:55:24,046:INFO:Importing untrained model
2023-06-13 14:55:24,061:INFO:Decision Tree Regressor Imported successfully
2023-06-13 14:55:24,080:INFO:Starting cross validation
2023-06-13 14:55:24,088:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:24,148:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:24,164:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:24,191:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:24,623:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:24,624:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:24,940:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:24,941:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:25,138:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:25,138:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:25,141:INFO:Calculating mean and std
2023-06-13 14:55:25,146:INFO:Creating metrics dataframe
2023-06-13 14:55:25,253:INFO:Uploading results into container
2023-06-13 14:55:25,255:INFO:Uploading model into container now
2023-06-13 14:55:25,255:INFO:_master_model_container: 30
2023-06-13 14:55:25,256:INFO:_display_container: 3
2023-06-13 14:55:25,256:INFO:DecisionTreeRegressor(random_state=123)
2023-06-13 14:55:25,257:INFO:create_model() successfully completed......................................
2023-06-13 14:55:25,388:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:25,388:INFO:Creating metrics dataframe
2023-06-13 14:55:25,412:INFO:Initializing Random Forest Regressor
2023-06-13 14:55:25,412:INFO:Total runtime is 0.16988454659779867 minutes
2023-06-13 14:55:25,420:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:25,421:INFO:Initializing create_model()
2023-06-13 14:55:25,421:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:25,423:INFO:Checking exceptions
2023-06-13 14:55:25,423:INFO:Importing libraries
2023-06-13 14:55:25,423:INFO:Copying training dataset
2023-06-13 14:55:25,437:INFO:Defining folds
2023-06-13 14:55:25,437:INFO:Declaring metric variables
2023-06-13 14:55:25,446:INFO:Importing untrained model
2023-06-13 14:55:25,457:INFO:Random Forest Regressor Imported successfully
2023-06-13 14:55:25,478:INFO:Starting cross validation
2023-06-13 14:55:25,483:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:25,545:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:25,560:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:25,579:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:26,097:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:26,097:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:26,400:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:26,400:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:26,431:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:26,431:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:26,484:INFO:Calculating mean and std
2023-06-13 14:55:26,488:INFO:Creating metrics dataframe
2023-06-13 14:55:26,570:INFO:Uploading results into container
2023-06-13 14:55:26,570:INFO:Uploading model into container now
2023-06-13 14:55:26,571:INFO:_master_model_container: 31
2023-06-13 14:55:26,571:INFO:_display_container: 3
2023-06-13 14:55:26,571:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:55:26,571:INFO:create_model() successfully completed......................................
2023-06-13 14:55:26,657:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:26,657:INFO:Creating metrics dataframe
2023-06-13 14:55:26,671:INFO:Initializing Extra Trees Regressor
2023-06-13 14:55:26,671:INFO:Total runtime is 0.1908662994702657 minutes
2023-06-13 14:55:26,676:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:26,676:INFO:Initializing create_model()
2023-06-13 14:55:26,676:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:26,677:INFO:Checking exceptions
2023-06-13 14:55:26,677:INFO:Importing libraries
2023-06-13 14:55:26,677:INFO:Copying training dataset
2023-06-13 14:55:26,686:INFO:Defining folds
2023-06-13 14:55:26,686:INFO:Declaring metric variables
2023-06-13 14:55:26,704:INFO:Importing untrained model
2023-06-13 14:55:26,714:INFO:Extra Trees Regressor Imported successfully
2023-06-13 14:55:26,741:INFO:Starting cross validation
2023-06-13 14:55:26,745:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:26,796:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:26,812:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:26,828:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:27,519:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:27,519:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:27,776:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:27,776:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:27,827:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:27,827:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:27,872:INFO:Calculating mean and std
2023-06-13 14:55:27,874:INFO:Creating metrics dataframe
2023-06-13 14:55:28,187:INFO:Uploading results into container
2023-06-13 14:55:28,188:INFO:Uploading model into container now
2023-06-13 14:55:28,189:INFO:_master_model_container: 32
2023-06-13 14:55:28,189:INFO:_display_container: 3
2023-06-13 14:55:28,190:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:55:28,190:INFO:create_model() successfully completed......................................
2023-06-13 14:55:28,310:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:28,310:INFO:Creating metrics dataframe
2023-06-13 14:55:28,328:INFO:Initializing AdaBoost Regressor
2023-06-13 14:55:28,328:INFO:Total runtime is 0.21849213043848673 minutes
2023-06-13 14:55:28,334:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:28,335:INFO:Initializing create_model()
2023-06-13 14:55:28,335:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:28,335:INFO:Checking exceptions
2023-06-13 14:55:28,335:INFO:Importing libraries
2023-06-13 14:55:28,335:INFO:Copying training dataset
2023-06-13 14:55:28,345:INFO:Defining folds
2023-06-13 14:55:28,345:INFO:Declaring metric variables
2023-06-13 14:55:28,357:INFO:Importing untrained model
2023-06-13 14:55:28,363:INFO:AdaBoost Regressor Imported successfully
2023-06-13 14:55:28,380:INFO:Starting cross validation
2023-06-13 14:55:28,384:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:28,426:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:28,445:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:28,462:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:28,724:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:28,725:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:28,959:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:28,960:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:28,992:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:28,992:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:29,067:INFO:Calculating mean and std
2023-06-13 14:55:29,071:INFO:Creating metrics dataframe
2023-06-13 14:55:29,174:INFO:Uploading results into container
2023-06-13 14:55:29,175:INFO:Uploading model into container now
2023-06-13 14:55:29,176:INFO:_master_model_container: 33
2023-06-13 14:55:29,176:INFO:_display_container: 3
2023-06-13 14:55:29,176:INFO:AdaBoostRegressor(random_state=123)
2023-06-13 14:55:29,177:INFO:create_model() successfully completed......................................
2023-06-13 14:55:29,278:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:29,278:INFO:Creating metrics dataframe
2023-06-13 14:55:29,296:INFO:Initializing Gradient Boosting Regressor
2023-06-13 14:55:29,296:INFO:Total runtime is 0.23462517261505125 minutes
2023-06-13 14:55:29,302:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:29,303:INFO:Initializing create_model()
2023-06-13 14:55:29,303:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:29,304:INFO:Checking exceptions
2023-06-13 14:55:29,304:INFO:Importing libraries
2023-06-13 14:55:29,304:INFO:Copying training dataset
2023-06-13 14:55:29,317:INFO:Defining folds
2023-06-13 14:55:29,318:INFO:Declaring metric variables
2023-06-13 14:55:29,331:INFO:Importing untrained model
2023-06-13 14:55:29,339:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 14:55:29,352:INFO:Starting cross validation
2023-06-13 14:55:29,357:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:29,414:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:29,442:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:29,465:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:29,805:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:29,805:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:29,868:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:29,868:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:30,129:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:30,129:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:30,131:INFO:Calculating mean and std
2023-06-13 14:55:30,134:INFO:Creating metrics dataframe
2023-06-13 14:55:30,238:INFO:Uploading results into container
2023-06-13 14:55:30,239:INFO:Uploading model into container now
2023-06-13 14:55:30,239:INFO:_master_model_container: 34
2023-06-13 14:55:30,239:INFO:_display_container: 3
2023-06-13 14:55:30,240:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 14:55:30,240:INFO:create_model() successfully completed......................................
2023-06-13 14:55:30,334:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:30,334:INFO:Creating metrics dataframe
2023-06-13 14:55:30,349:INFO:Initializing Light Gradient Boosting Machine
2023-06-13 14:55:30,350:INFO:Total runtime is 0.25218382279078166 minutes
2023-06-13 14:55:30,356:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:30,356:INFO:Initializing create_model()
2023-06-13 14:55:30,356:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:30,357:INFO:Checking exceptions
2023-06-13 14:55:30,357:INFO:Importing libraries
2023-06-13 14:55:30,357:INFO:Copying training dataset
2023-06-13 14:55:30,368:INFO:Defining folds
2023-06-13 14:55:30,369:INFO:Declaring metric variables
2023-06-13 14:55:30,378:INFO:Importing untrained model
2023-06-13 14:55:30,387:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-13 14:55:30,397:INFO:Starting cross validation
2023-06-13 14:55:30,402:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:30,444:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:30,461:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:30,751:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:30,751:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:30,966:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:30,966:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:32,110:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:32,262:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:32,262:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:32,263:INFO:Calculating mean and std
2023-06-13 14:55:32,266:INFO:Creating metrics dataframe
2023-06-13 14:55:32,362:INFO:Uploading results into container
2023-06-13 14:55:32,363:INFO:Uploading model into container now
2023-06-13 14:55:32,364:INFO:_master_model_container: 35
2023-06-13 14:55:32,364:INFO:_display_container: 3
2023-06-13 14:55:32,364:INFO:LGBMRegressor(random_state=123)
2023-06-13 14:55:32,364:INFO:create_model() successfully completed......................................
2023-06-13 14:55:32,453:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:32,453:INFO:Creating metrics dataframe
2023-06-13 14:55:32,469:INFO:Initializing Dummy Regressor
2023-06-13 14:55:32,469:INFO:Total runtime is 0.2875006556510925 minutes
2023-06-13 14:55:32,474:INFO:SubProcess create_model() called ==================================
2023-06-13 14:55:32,475:INFO:Initializing create_model()
2023-06-13 14:55:32,475:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54E9DD0A0>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:32,475:INFO:Checking exceptions
2023-06-13 14:55:32,475:INFO:Importing libraries
2023-06-13 14:55:32,475:INFO:Copying training dataset
2023-06-13 14:55:32,485:INFO:Defining folds
2023-06-13 14:55:32,485:INFO:Declaring metric variables
2023-06-13 14:55:32,494:INFO:Importing untrained model
2023-06-13 14:55:32,508:INFO:Dummy Regressor Imported successfully
2023-06-13 14:55:32,524:INFO:Starting cross validation
2023-06-13 14:55:32,527:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:55:32,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:32,583:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:32,598:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:32,806:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:32,806:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:32,853:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:32,854:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:33,023:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\lib\function_base.py:380: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis)

2023-06-13 14:55:33,023:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\numpy\core\_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars
  ret = ret.dtype.type(ret / rcount)

2023-06-13 14:55:33,025:INFO:Calculating mean and std
2023-06-13 14:55:33,029:INFO:Creating metrics dataframe
2023-06-13 14:55:33,131:INFO:Uploading results into container
2023-06-13 14:55:33,132:INFO:Uploading model into container now
2023-06-13 14:55:33,133:INFO:_master_model_container: 36
2023-06-13 14:55:33,133:INFO:_display_container: 3
2023-06-13 14:55:33,133:INFO:DummyRegressor()
2023-06-13 14:55:33,133:INFO:create_model() successfully completed......................................
2023-06-13 14:55:33,222:INFO:SubProcess create_model() end ==================================
2023-06-13 14:55:33,223:INFO:Creating metrics dataframe
2023-06-13 14:55:33,255:INFO:Initializing create_model()
2023-06-13 14:55:33,255:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B554F0ABB0>, estimator=LinearRegression(n_jobs=-1), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:55:33,255:INFO:Checking exceptions
2023-06-13 14:55:33,259:INFO:Importing libraries
2023-06-13 14:55:33,260:INFO:Copying training dataset
2023-06-13 14:55:33,271:INFO:Defining folds
2023-06-13 14:55:33,271:INFO:Declaring metric variables
2023-06-13 14:55:33,272:INFO:Importing untrained model
2023-06-13 14:55:33,272:INFO:Declaring custom model
2023-06-13 14:55:33,273:INFO:Linear Regression Imported successfully
2023-06-13 14:55:33,276:INFO:Cross validation set to False
2023-06-13 14:55:33,276:INFO:Fitting Model
2023-06-13 14:55:33,287:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-13 14:55:33,509:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:55:33,509:INFO:create_model() successfully completed......................................
2023-06-13 14:55:33,668:INFO:_master_model_container: 36
2023-06-13 14:55:33,669:INFO:_display_container: 3
2023-06-13 14:55:33,670:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:55:33,670:INFO:compare_models() successfully completed......................................
2023-06-13 14:56:24,518:INFO:PyCaret RegressionExperiment
2023-06-13 14:56:24,518:INFO:Logging name: reg-default-name
2023-06-13 14:56:24,519:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 14:56:24,519:INFO:version 3.0.2
2023-06-13 14:56:24,519:INFO:Initializing setup()
2023-06-13 14:56:24,519:INFO:self.USI: 514c
2023-06-13 14:56:24,519:INFO:self._variable_keys: {'gpu_n_jobs_param', 'USI', 'exp_name_log', 'idx', 'fold_shuffle_param', 'fold_generator', 'pipeline', 'seed', 'logging_param', 'X_test', '_available_plots', 'X', 'data', 'memory', '_ml_usecase', 'gpu_param', 'y_test', 'transform_target_param', 'log_plots_param', 'X_train', 'html_param', 'y_train', 'y', 'target_param', 'fold_groups_param', 'exp_id', 'n_jobs_param'}
2023-06-13 14:56:24,519:INFO:Checking environment
2023-06-13 14:56:24,519:INFO:python_version: 3.9.13
2023-06-13 14:56:24,519:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 14:56:24,519:INFO:machine: AMD64
2023-06-13 14:56:24,519:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 14:56:24,519:INFO:Memory: svmem(total=8285085696, available=951341056, percent=88.5, used=7333744640, free=951341056)
2023-06-13 14:56:24,519:INFO:Physical Core: 2
2023-06-13 14:56:24,519:INFO:Logical Core: 4
2023-06-13 14:56:24,519:INFO:Checking libraries
2023-06-13 14:56:24,519:INFO:System:
2023-06-13 14:56:24,520:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 14:56:24,520:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 14:56:24,520:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 14:56:24,520:INFO:PyCaret required dependencies:
2023-06-13 14:56:24,520:INFO:                 pip: 22.2.2
2023-06-13 14:56:24,520:INFO:          setuptools: 63.4.1
2023-06-13 14:56:24,521:INFO:             pycaret: 3.0.2
2023-06-13 14:56:24,521:INFO:             IPython: 7.31.1
2023-06-13 14:56:24,521:INFO:          ipywidgets: 7.6.5
2023-06-13 14:56:24,521:INFO:                tqdm: 4.64.1
2023-06-13 14:56:24,521:INFO:               numpy: 1.21.5
2023-06-13 14:56:24,521:INFO:              pandas: 1.4.4
2023-06-13 14:56:24,521:INFO:              jinja2: 2.11.3
2023-06-13 14:56:24,521:INFO:               scipy: 1.9.1
2023-06-13 14:56:24,521:INFO:              joblib: 1.1.0
2023-06-13 14:56:24,522:INFO:             sklearn: 1.0.2
2023-06-13 14:56:24,522:INFO:                pyod: 1.0.9
2023-06-13 14:56:24,522:INFO:            imblearn: 0.10.1
2023-06-13 14:56:24,522:INFO:   category_encoders: 2.6.1
2023-06-13 14:56:24,522:INFO:            lightgbm: 3.3.5
2023-06-13 14:56:24,522:INFO:               numba: 0.55.1
2023-06-13 14:56:24,522:INFO:            requests: 2.28.1
2023-06-13 14:56:24,522:INFO:          matplotlib: 3.5.2
2023-06-13 14:56:24,523:INFO:          scikitplot: 0.3.7
2023-06-13 14:56:24,523:INFO:         yellowbrick: 1.5
2023-06-13 14:56:24,523:INFO:              plotly: 5.9.0
2023-06-13 14:56:24,523:INFO:             kaleido: 0.2.1
2023-06-13 14:56:24,523:INFO:         statsmodels: 0.13.2
2023-06-13 14:56:24,523:INFO:              sktime: 0.17.0
2023-06-13 14:56:24,523:INFO:               tbats: 1.1.3
2023-06-13 14:56:24,523:INFO:            pmdarima: 2.0.3
2023-06-13 14:56:24,523:INFO:              psutil: 5.9.0
2023-06-13 14:56:24,524:INFO:PyCaret optional dependencies:
2023-06-13 14:56:24,524:INFO:                shap: Not installed
2023-06-13 14:56:24,524:INFO:           interpret: Not installed
2023-06-13 14:56:24,524:INFO:                umap: Not installed
2023-06-13 14:56:24,524:INFO:    pandas_profiling: Not installed
2023-06-13 14:56:24,524:INFO:  explainerdashboard: Not installed
2023-06-13 14:56:24,524:INFO:             autoviz: Not installed
2023-06-13 14:56:24,524:INFO:           fairlearn: Not installed
2023-06-13 14:56:24,525:INFO:             xgboost: Not installed
2023-06-13 14:56:24,525:INFO:            catboost: Not installed
2023-06-13 14:56:24,525:INFO:              kmodes: Not installed
2023-06-13 14:56:24,525:INFO:             mlxtend: Not installed
2023-06-13 14:56:24,525:INFO:       statsforecast: Not installed
2023-06-13 14:56:24,525:INFO:        tune_sklearn: Not installed
2023-06-13 14:56:24,525:INFO:                 ray: Not installed
2023-06-13 14:56:24,525:INFO:            hyperopt: Not installed
2023-06-13 14:56:24,526:INFO:              optuna: Not installed
2023-06-13 14:56:24,526:INFO:               skopt: Not installed
2023-06-13 14:56:24,526:INFO:              mlflow: Not installed
2023-06-13 14:56:24,526:INFO:              gradio: Not installed
2023-06-13 14:56:24,526:INFO:             fastapi: Not installed
2023-06-13 14:56:24,526:INFO:             uvicorn: Not installed
2023-06-13 14:56:24,526:INFO:              m2cgen: Not installed
2023-06-13 14:56:24,526:INFO:           evidently: Not installed
2023-06-13 14:56:24,527:INFO:               fugue: Not installed
2023-06-13 14:56:24,527:INFO:           streamlit: 1.22.0
2023-06-13 14:56:24,527:INFO:             prophet: Not installed
2023-06-13 14:56:24,527:INFO:None
2023-06-13 14:56:24,527:INFO:Set up data.
2023-06-13 14:56:24,543:INFO:Set up train/test split.
2023-06-13 14:56:24,543:INFO:Set up data.
2023-06-13 14:56:24,556:INFO:Set up index.
2023-06-13 14:56:24,556:INFO:Set up folding strategy.
2023-06-13 14:56:24,556:INFO:Assigning column types.
2023-06-13 14:56:24,563:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-13 14:56:24,563:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,570:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,576:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,665:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,732:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,733:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:24,734:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:24,734:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,740:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,746:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,857:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,946:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,947:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:24,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:24,948:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-13 14:56:24,954:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:56:24,961:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,055:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,135:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,136:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,147:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,155:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,264:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,336:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,336:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,337:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-13 14:56:25,362:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,445:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,538:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,539:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,564:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,814:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,815:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-13 14:56:25,916:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:25,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:25,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:26,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 14:56:26,147:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,150:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-13 14:56:26,246:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:26,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 14:56:26,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,492:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-13 14:56:26,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,847:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:26,854:INFO:Preparing preprocessing pipeline...
2023-06-13 14:56:26,854:INFO:Set up target transformation.
2023-06-13 14:56:26,854:INFO:Set up date feature engineering.
2023-06-13 14:56:26,854:INFO:Set up simple imputation.
2023-06-13 14:56:26,859:INFO:Set up encoding of categorical features.
2023-06-13 14:56:27,037:INFO:Finished creating preprocessing pipeline.
2023-06-13 14:56:27,055:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 Tr...
                                             'BOND_NAME', 'FACILITY_NAME',
                                             'ISSUER_NAME'],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('onehot_encoding',
                 TransformerWrapper(include=['BOND_CODE', 'PROD_CODE',
                                             'BOND_NAME', 'FACILITY_NAME',
                                             'ISSUER_NAME'],
                                    transformer=OneHotEncoder(cols=['BOND_CODE',
                                                                    'PROD_CODE',
                                                                    'BOND_NAME',
                                                                    'FACILITY_NAME',
                                                                    'ISSUER_NAME'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2023-06-13 14:56:27,056:INFO:Creating final display dataframe.
2023-06-13 14:56:27,569:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                   (89, 12)
4        Transformed data shape                   (89, 14)
5   Transformed train set shape                   (76, 14)
6    Transformed test set shape                   (13, 14)
7              Numeric features                          5
8                 Date features                          1
9          Categorical features                          5
10                   Preprocess                       True
11              Imputation type                     simple
12           Numeric imputation                       mean
13       Categorical imputation                       mode
14     Maximum one-hot encoding                         25
15              Encoding method                       None
16             Transform target                       True
17      Transform target method                yeo-johnson
18               Fold Generator            TimeSeriesSplit
19                  Fold Number                          3
20                     CPU Jobs                         -1
21                      Use GPU                      False
22               Log Experiment                      False
23              Experiment Name           reg-default-name
24                          USI                       514c
2023-06-13 14:56:27,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:27,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:27,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:27,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 14:56:27,984:INFO:setup() successfully completed in 3.57s...............
2023-06-13 14:56:28,079:INFO:Initializing compare_models()
2023-06-13 14:56:28,079:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-13 14:56:28,079:INFO:Checking exceptions
2023-06-13 14:56:28,086:INFO:Preparing display monitor
2023-06-13 14:56:28,182:INFO:Initializing Linear Regression
2023-06-13 14:56:28,182:INFO:Total runtime is 0.0 minutes
2023-06-13 14:56:28,193:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:28,194:INFO:Initializing create_model()
2023-06-13 14:56:28,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:28,195:INFO:Checking exceptions
2023-06-13 14:56:28,195:INFO:Importing libraries
2023-06-13 14:56:28,195:INFO:Copying training dataset
2023-06-13 14:56:28,210:INFO:Defining folds
2023-06-13 14:56:28,210:INFO:Declaring metric variables
2023-06-13 14:56:28,219:INFO:Importing untrained model
2023-06-13 14:56:28,231:INFO:Linear Regression Imported successfully
2023-06-13 14:56:28,250:INFO:Starting cross validation
2023-06-13 14:56:28,253:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:29,349:INFO:Calculating mean and std
2023-06-13 14:56:29,351:INFO:Creating metrics dataframe
2023-06-13 14:56:29,469:INFO:Uploading results into container
2023-06-13 14:56:29,470:INFO:Uploading model into container now
2023-06-13 14:56:29,472:INFO:_master_model_container: 1
2023-06-13 14:56:29,473:INFO:_display_container: 2
2023-06-13 14:56:29,474:INFO:LinearRegression(n_jobs=-1)
2023-06-13 14:56:29,475:INFO:create_model() successfully completed......................................
2023-06-13 14:56:29,587:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:29,587:INFO:Creating metrics dataframe
2023-06-13 14:56:29,603:INFO:Initializing Lasso Regression
2023-06-13 14:56:29,603:INFO:Total runtime is 0.023684946695963542 minutes
2023-06-13 14:56:29,610:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:29,611:INFO:Initializing create_model()
2023-06-13 14:56:29,611:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:29,611:INFO:Checking exceptions
2023-06-13 14:56:29,611:INFO:Importing libraries
2023-06-13 14:56:29,611:INFO:Copying training dataset
2023-06-13 14:56:29,625:INFO:Defining folds
2023-06-13 14:56:29,626:INFO:Declaring metric variables
2023-06-13 14:56:29,637:INFO:Importing untrained model
2023-06-13 14:56:29,645:INFO:Lasso Regression Imported successfully
2023-06-13 14:56:29,662:INFO:Starting cross validation
2023-06-13 14:56:29,665:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:30,355:INFO:Calculating mean and std
2023-06-13 14:56:30,363:INFO:Creating metrics dataframe
2023-06-13 14:56:30,487:INFO:Uploading results into container
2023-06-13 14:56:30,488:INFO:Uploading model into container now
2023-06-13 14:56:30,488:INFO:_master_model_container: 2
2023-06-13 14:56:30,488:INFO:_display_container: 2
2023-06-13 14:56:30,489:INFO:Lasso(random_state=123)
2023-06-13 14:56:30,489:INFO:create_model() successfully completed......................................
2023-06-13 14:56:30,599:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:30,600:INFO:Creating metrics dataframe
2023-06-13 14:56:30,617:INFO:Initializing Ridge Regression
2023-06-13 14:56:30,617:INFO:Total runtime is 0.04058527151743571 minutes
2023-06-13 14:56:30,625:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:30,626:INFO:Initializing create_model()
2023-06-13 14:56:30,626:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:30,626:INFO:Checking exceptions
2023-06-13 14:56:30,626:INFO:Importing libraries
2023-06-13 14:56:30,626:INFO:Copying training dataset
2023-06-13 14:56:30,642:INFO:Defining folds
2023-06-13 14:56:30,642:INFO:Declaring metric variables
2023-06-13 14:56:30,651:INFO:Importing untrained model
2023-06-13 14:56:30,659:INFO:Ridge Regression Imported successfully
2023-06-13 14:56:30,674:INFO:Starting cross validation
2023-06-13 14:56:30,678:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:31,307:INFO:Calculating mean and std
2023-06-13 14:56:31,308:INFO:Creating metrics dataframe
2023-06-13 14:56:31,410:INFO:Uploading results into container
2023-06-13 14:56:31,410:INFO:Uploading model into container now
2023-06-13 14:56:31,411:INFO:_master_model_container: 3
2023-06-13 14:56:31,411:INFO:_display_container: 2
2023-06-13 14:56:31,412:INFO:Ridge(random_state=123)
2023-06-13 14:56:31,412:INFO:create_model() successfully completed......................................
2023-06-13 14:56:31,503:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:31,504:INFO:Creating metrics dataframe
2023-06-13 14:56:31,515:INFO:Initializing Elastic Net
2023-06-13 14:56:31,516:INFO:Total runtime is 0.05557830333709717 minutes
2023-06-13 14:56:31,520:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:31,520:INFO:Initializing create_model()
2023-06-13 14:56:31,520:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:31,521:INFO:Checking exceptions
2023-06-13 14:56:31,521:INFO:Importing libraries
2023-06-13 14:56:31,521:INFO:Copying training dataset
2023-06-13 14:56:31,531:INFO:Defining folds
2023-06-13 14:56:31,531:INFO:Declaring metric variables
2023-06-13 14:56:31,548:INFO:Importing untrained model
2023-06-13 14:56:31,566:INFO:Elastic Net Imported successfully
2023-06-13 14:56:31,585:INFO:Starting cross validation
2023-06-13 14:56:31,590:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:32,200:INFO:Calculating mean and std
2023-06-13 14:56:32,202:INFO:Creating metrics dataframe
2023-06-13 14:56:32,299:INFO:Uploading results into container
2023-06-13 14:56:32,300:INFO:Uploading model into container now
2023-06-13 14:56:32,300:INFO:_master_model_container: 4
2023-06-13 14:56:32,301:INFO:_display_container: 2
2023-06-13 14:56:32,301:INFO:ElasticNet(random_state=123)
2023-06-13 14:56:32,301:INFO:create_model() successfully completed......................................
2023-06-13 14:56:32,387:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:32,387:INFO:Creating metrics dataframe
2023-06-13 14:56:32,399:INFO:Initializing Least Angle Regression
2023-06-13 14:56:32,399:INFO:Total runtime is 0.07028784354527792 minutes
2023-06-13 14:56:32,404:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:32,405:INFO:Initializing create_model()
2023-06-13 14:56:32,405:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:32,406:INFO:Checking exceptions
2023-06-13 14:56:32,406:INFO:Importing libraries
2023-06-13 14:56:32,406:INFO:Copying training dataset
2023-06-13 14:56:32,420:INFO:Defining folds
2023-06-13 14:56:32,420:INFO:Declaring metric variables
2023-06-13 14:56:32,431:INFO:Importing untrained model
2023-06-13 14:56:32,440:INFO:Least Angle Regression Imported successfully
2023-06-13 14:56:32,454:INFO:Starting cross validation
2023-06-13 14:56:32,459:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:32,700:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:32,718:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:32,727:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:33,134:INFO:Calculating mean and std
2023-06-13 14:56:33,136:INFO:Creating metrics dataframe
2023-06-13 14:56:33,233:INFO:Uploading results into container
2023-06-13 14:56:33,234:INFO:Uploading model into container now
2023-06-13 14:56:33,234:INFO:_master_model_container: 5
2023-06-13 14:56:33,234:INFO:_display_container: 2
2023-06-13 14:56:33,235:INFO:Lars(random_state=123)
2023-06-13 14:56:33,235:INFO:create_model() successfully completed......................................
2023-06-13 14:56:33,322:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:33,322:INFO:Creating metrics dataframe
2023-06-13 14:56:33,333:INFO:Initializing Lasso Least Angle Regression
2023-06-13 14:56:33,334:INFO:Total runtime is 0.08586896657943727 minutes
2023-06-13 14:56:33,339:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:33,340:INFO:Initializing create_model()
2023-06-13 14:56:33,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:33,340:INFO:Checking exceptions
2023-06-13 14:56:33,340:INFO:Importing libraries
2023-06-13 14:56:33,340:INFO:Copying training dataset
2023-06-13 14:56:33,350:INFO:Defining folds
2023-06-13 14:56:33,350:INFO:Declaring metric variables
2023-06-13 14:56:33,366:INFO:Importing untrained model
2023-06-13 14:56:33,382:INFO:Lasso Least Angle Regression Imported successfully
2023-06-13 14:56:33,400:INFO:Starting cross validation
2023-06-13 14:56:33,403:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:33,643:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:56:33,653:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:56:33,682:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 14:56:34,035:INFO:Calculating mean and std
2023-06-13 14:56:34,036:INFO:Creating metrics dataframe
2023-06-13 14:56:34,139:INFO:Uploading results into container
2023-06-13 14:56:34,140:INFO:Uploading model into container now
2023-06-13 14:56:34,140:INFO:_master_model_container: 6
2023-06-13 14:56:34,141:INFO:_display_container: 2
2023-06-13 14:56:34,141:INFO:LassoLars(random_state=123)
2023-06-13 14:56:34,142:INFO:create_model() successfully completed......................................
2023-06-13 14:56:34,233:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:34,233:INFO:Creating metrics dataframe
2023-06-13 14:56:34,245:INFO:Initializing Orthogonal Matching Pursuit
2023-06-13 14:56:34,245:INFO:Total runtime is 0.10105231602986654 minutes
2023-06-13 14:56:34,250:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:34,250:INFO:Initializing create_model()
2023-06-13 14:56:34,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:34,251:INFO:Checking exceptions
2023-06-13 14:56:34,251:INFO:Importing libraries
2023-06-13 14:56:34,251:INFO:Copying training dataset
2023-06-13 14:56:34,263:INFO:Defining folds
2023-06-13 14:56:34,264:INFO:Declaring metric variables
2023-06-13 14:56:34,275:INFO:Importing untrained model
2023-06-13 14:56:34,285:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-13 14:56:34,298:INFO:Starting cross validation
2023-06-13 14:56:34,303:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:34,535:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:34,553:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:34,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 14:56:34,981:INFO:Calculating mean and std
2023-06-13 14:56:34,983:INFO:Creating metrics dataframe
2023-06-13 14:56:35,094:INFO:Uploading results into container
2023-06-13 14:56:35,095:INFO:Uploading model into container now
2023-06-13 14:56:35,095:INFO:_master_model_container: 7
2023-06-13 14:56:35,095:INFO:_display_container: 2
2023-06-13 14:56:35,096:INFO:OrthogonalMatchingPursuit()
2023-06-13 14:56:35,096:INFO:create_model() successfully completed......................................
2023-06-13 14:56:35,190:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:35,190:INFO:Creating metrics dataframe
2023-06-13 14:56:35,206:INFO:Initializing Bayesian Ridge
2023-06-13 14:56:35,206:INFO:Total runtime is 0.1170693318049113 minutes
2023-06-13 14:56:35,212:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:35,213:INFO:Initializing create_model()
2023-06-13 14:56:35,213:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:35,213:INFO:Checking exceptions
2023-06-13 14:56:35,214:INFO:Importing libraries
2023-06-13 14:56:35,214:INFO:Copying training dataset
2023-06-13 14:56:35,228:INFO:Defining folds
2023-06-13 14:56:35,229:INFO:Declaring metric variables
2023-06-13 14:56:35,236:INFO:Importing untrained model
2023-06-13 14:56:35,245:INFO:Bayesian Ridge Imported successfully
2023-06-13 14:56:35,260:INFO:Starting cross validation
2023-06-13 14:56:35,264:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:35,882:INFO:Calculating mean and std
2023-06-13 14:56:35,884:INFO:Creating metrics dataframe
2023-06-13 14:56:35,996:INFO:Uploading results into container
2023-06-13 14:56:35,997:INFO:Uploading model into container now
2023-06-13 14:56:35,997:INFO:_master_model_container: 8
2023-06-13 14:56:35,997:INFO:_display_container: 2
2023-06-13 14:56:35,998:INFO:BayesianRidge()
2023-06-13 14:56:35,998:INFO:create_model() successfully completed......................................
2023-06-13 14:56:36,088:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:36,089:INFO:Creating metrics dataframe
2023-06-13 14:56:36,104:INFO:Initializing Passive Aggressive Regressor
2023-06-13 14:56:36,104:INFO:Total runtime is 0.13203341960906984 minutes
2023-06-13 14:56:36,112:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:36,113:INFO:Initializing create_model()
2023-06-13 14:56:36,113:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:36,113:INFO:Checking exceptions
2023-06-13 14:56:36,113:INFO:Importing libraries
2023-06-13 14:56:36,114:INFO:Copying training dataset
2023-06-13 14:56:36,132:INFO:Defining folds
2023-06-13 14:56:36,132:INFO:Declaring metric variables
2023-06-13 14:56:36,141:INFO:Importing untrained model
2023-06-13 14:56:36,149:INFO:Passive Aggressive Regressor Imported successfully
2023-06-13 14:56:36,165:INFO:Starting cross validation
2023-06-13 14:56:36,168:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:36,859:INFO:Calculating mean and std
2023-06-13 14:56:36,861:INFO:Creating metrics dataframe
2023-06-13 14:56:36,969:INFO:Uploading results into container
2023-06-13 14:56:36,970:INFO:Uploading model into container now
2023-06-13 14:56:36,970:INFO:_master_model_container: 9
2023-06-13 14:56:36,971:INFO:_display_container: 2
2023-06-13 14:56:36,971:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-13 14:56:36,972:INFO:create_model() successfully completed......................................
2023-06-13 14:56:37,064:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:37,065:INFO:Creating metrics dataframe
2023-06-13 14:56:37,083:INFO:Initializing Huber Regressor
2023-06-13 14:56:37,084:INFO:Total runtime is 0.14837421973546347 minutes
2023-06-13 14:56:37,088:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:37,089:INFO:Initializing create_model()
2023-06-13 14:56:37,089:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:37,089:INFO:Checking exceptions
2023-06-13 14:56:37,089:INFO:Importing libraries
2023-06-13 14:56:37,089:INFO:Copying training dataset
2023-06-13 14:56:37,103:INFO:Defining folds
2023-06-13 14:56:37,103:INFO:Declaring metric variables
2023-06-13 14:56:37,109:INFO:Importing untrained model
2023-06-13 14:56:37,122:INFO:Huber Regressor Imported successfully
2023-06-13 14:56:37,136:INFO:Starting cross validation
2023-06-13 14:56:37,141:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:37,758:INFO:Calculating mean and std
2023-06-13 14:56:37,762:INFO:Creating metrics dataframe
2023-06-13 14:56:37,871:INFO:Uploading results into container
2023-06-13 14:56:37,872:INFO:Uploading model into container now
2023-06-13 14:56:37,873:INFO:_master_model_container: 10
2023-06-13 14:56:37,873:INFO:_display_container: 2
2023-06-13 14:56:37,874:INFO:HuberRegressor()
2023-06-13 14:56:37,875:INFO:create_model() successfully completed......................................
2023-06-13 14:56:37,965:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:37,966:INFO:Creating metrics dataframe
2023-06-13 14:56:37,979:INFO:Initializing K Neighbors Regressor
2023-06-13 14:56:37,979:INFO:Total runtime is 0.16329355637232462 minutes
2023-06-13 14:56:37,986:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:37,986:INFO:Initializing create_model()
2023-06-13 14:56:37,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:37,987:INFO:Checking exceptions
2023-06-13 14:56:37,987:INFO:Importing libraries
2023-06-13 14:56:37,987:INFO:Copying training dataset
2023-06-13 14:56:37,999:INFO:Defining folds
2023-06-13 14:56:37,999:INFO:Declaring metric variables
2023-06-13 14:56:38,008:INFO:Importing untrained model
2023-06-13 14:56:38,016:INFO:K Neighbors Regressor Imported successfully
2023-06-13 14:56:38,028:INFO:Starting cross validation
2023-06-13 14:56:38,033:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:38,686:INFO:Calculating mean and std
2023-06-13 14:56:38,688:INFO:Creating metrics dataframe
2023-06-13 14:56:38,801:INFO:Uploading results into container
2023-06-13 14:56:38,802:INFO:Uploading model into container now
2023-06-13 14:56:38,803:INFO:_master_model_container: 11
2023-06-13 14:56:38,803:INFO:_display_container: 2
2023-06-13 14:56:38,803:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-13 14:56:38,804:INFO:create_model() successfully completed......................................
2023-06-13 14:56:38,894:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:38,894:INFO:Creating metrics dataframe
2023-06-13 14:56:38,907:INFO:Initializing Decision Tree Regressor
2023-06-13 14:56:38,908:INFO:Total runtime is 0.17877763907114663 minutes
2023-06-13 14:56:38,912:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:38,913:INFO:Initializing create_model()
2023-06-13 14:56:38,913:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:38,913:INFO:Checking exceptions
2023-06-13 14:56:38,913:INFO:Importing libraries
2023-06-13 14:56:38,913:INFO:Copying training dataset
2023-06-13 14:56:38,925:INFO:Defining folds
2023-06-13 14:56:38,925:INFO:Declaring metric variables
2023-06-13 14:56:38,936:INFO:Importing untrained model
2023-06-13 14:56:38,945:INFO:Decision Tree Regressor Imported successfully
2023-06-13 14:56:38,965:INFO:Starting cross validation
2023-06-13 14:56:38,969:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:39,828:INFO:Calculating mean and std
2023-06-13 14:56:39,830:INFO:Creating metrics dataframe
2023-06-13 14:56:39,939:INFO:Uploading results into container
2023-06-13 14:56:39,940:INFO:Uploading model into container now
2023-06-13 14:56:39,941:INFO:_master_model_container: 12
2023-06-13 14:56:39,942:INFO:_display_container: 2
2023-06-13 14:56:39,942:INFO:DecisionTreeRegressor(random_state=123)
2023-06-13 14:56:39,942:INFO:create_model() successfully completed......................................
2023-06-13 14:56:40,039:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:40,040:INFO:Creating metrics dataframe
2023-06-13 14:56:40,054:INFO:Initializing Random Forest Regressor
2023-06-13 14:56:40,055:INFO:Total runtime is 0.19788439273834227 minutes
2023-06-13 14:56:40,060:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:40,060:INFO:Initializing create_model()
2023-06-13 14:56:40,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:40,061:INFO:Checking exceptions
2023-06-13 14:56:40,061:INFO:Importing libraries
2023-06-13 14:56:40,062:INFO:Copying training dataset
2023-06-13 14:56:40,079:INFO:Defining folds
2023-06-13 14:56:40,080:INFO:Declaring metric variables
2023-06-13 14:56:40,089:INFO:Importing untrained model
2023-06-13 14:56:40,098:INFO:Random Forest Regressor Imported successfully
2023-06-13 14:56:40,116:INFO:Starting cross validation
2023-06-13 14:56:40,119:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:41,802:INFO:Calculating mean and std
2023-06-13 14:56:41,805:INFO:Creating metrics dataframe
2023-06-13 14:56:41,968:INFO:Uploading results into container
2023-06-13 14:56:41,969:INFO:Uploading model into container now
2023-06-13 14:56:41,969:INFO:_master_model_container: 13
2023-06-13 14:56:41,969:INFO:_display_container: 2
2023-06-13 14:56:41,970:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:56:41,970:INFO:create_model() successfully completed......................................
2023-06-13 14:56:42,078:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:42,079:INFO:Creating metrics dataframe
2023-06-13 14:56:42,100:INFO:Initializing Extra Trees Regressor
2023-06-13 14:56:42,101:INFO:Total runtime is 0.23199574947357177 minutes
2023-06-13 14:56:42,108:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:42,108:INFO:Initializing create_model()
2023-06-13 14:56:42,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:42,109:INFO:Checking exceptions
2023-06-13 14:56:42,109:INFO:Importing libraries
2023-06-13 14:56:42,109:INFO:Copying training dataset
2023-06-13 14:56:42,122:INFO:Defining folds
2023-06-13 14:56:42,122:INFO:Declaring metric variables
2023-06-13 14:56:42,128:INFO:Importing untrained model
2023-06-13 14:56:42,138:INFO:Extra Trees Regressor Imported successfully
2023-06-13 14:56:42,162:INFO:Starting cross validation
2023-06-13 14:56:42,166:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:43,745:INFO:Calculating mean and std
2023-06-13 14:56:43,749:INFO:Creating metrics dataframe
2023-06-13 14:56:43,927:INFO:Uploading results into container
2023-06-13 14:56:43,928:INFO:Uploading model into container now
2023-06-13 14:56:43,929:INFO:_master_model_container: 14
2023-06-13 14:56:43,930:INFO:_display_container: 2
2023-06-13 14:56:43,930:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-13 14:56:43,931:INFO:create_model() successfully completed......................................
2023-06-13 14:56:44,072:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:44,072:INFO:Creating metrics dataframe
2023-06-13 14:56:44,099:INFO:Initializing AdaBoost Regressor
2023-06-13 14:56:44,099:INFO:Total runtime is 0.26528854767481486 minutes
2023-06-13 14:56:44,107:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:44,107:INFO:Initializing create_model()
2023-06-13 14:56:44,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:44,108:INFO:Checking exceptions
2023-06-13 14:56:44,108:INFO:Importing libraries
2023-06-13 14:56:44,108:INFO:Copying training dataset
2023-06-13 14:56:44,122:INFO:Defining folds
2023-06-13 14:56:44,122:INFO:Declaring metric variables
2023-06-13 14:56:44,132:INFO:Importing untrained model
2023-06-13 14:56:44,143:INFO:AdaBoost Regressor Imported successfully
2023-06-13 14:56:44,156:INFO:Starting cross validation
2023-06-13 14:56:44,160:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:45,226:INFO:Calculating mean and std
2023-06-13 14:56:45,229:INFO:Creating metrics dataframe
2023-06-13 14:56:45,450:INFO:Uploading results into container
2023-06-13 14:56:45,453:INFO:Uploading model into container now
2023-06-13 14:56:45,454:INFO:_master_model_container: 15
2023-06-13 14:56:45,455:INFO:_display_container: 2
2023-06-13 14:56:45,455:INFO:AdaBoostRegressor(random_state=123)
2023-06-13 14:56:45,456:INFO:create_model() successfully completed......................................
2023-06-13 14:56:45,559:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:45,559:INFO:Creating metrics dataframe
2023-06-13 14:56:45,589:INFO:Initializing Gradient Boosting Regressor
2023-06-13 14:56:45,589:INFO:Total runtime is 0.29012239774068194 minutes
2023-06-13 14:56:45,597:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:45,598:INFO:Initializing create_model()
2023-06-13 14:56:45,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:45,598:INFO:Checking exceptions
2023-06-13 14:56:45,599:INFO:Importing libraries
2023-06-13 14:56:45,599:INFO:Copying training dataset
2023-06-13 14:56:45,616:INFO:Defining folds
2023-06-13 14:56:45,616:INFO:Declaring metric variables
2023-06-13 14:56:45,627:INFO:Importing untrained model
2023-06-13 14:56:45,634:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 14:56:45,650:INFO:Starting cross validation
2023-06-13 14:56:45,654:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:46,696:INFO:Calculating mean and std
2023-06-13 14:56:46,699:INFO:Creating metrics dataframe
2023-06-13 14:56:46,842:INFO:Uploading results into container
2023-06-13 14:56:46,843:INFO:Uploading model into container now
2023-06-13 14:56:46,844:INFO:_master_model_container: 16
2023-06-13 14:56:46,844:INFO:_display_container: 2
2023-06-13 14:56:46,844:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 14:56:46,845:INFO:create_model() successfully completed......................................
2023-06-13 14:56:46,937:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:46,938:INFO:Creating metrics dataframe
2023-06-13 14:56:46,952:INFO:Initializing Light Gradient Boosting Machine
2023-06-13 14:56:46,952:INFO:Total runtime is 0.31283984184265134 minutes
2023-06-13 14:56:46,956:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:46,957:INFO:Initializing create_model()
2023-06-13 14:56:46,957:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:46,957:INFO:Checking exceptions
2023-06-13 14:56:46,957:INFO:Importing libraries
2023-06-13 14:56:46,957:INFO:Copying training dataset
2023-06-13 14:56:46,967:INFO:Defining folds
2023-06-13 14:56:46,967:INFO:Declaring metric variables
2023-06-13 14:56:46,976:INFO:Importing untrained model
2023-06-13 14:56:46,986:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-13 14:56:47,003:INFO:Starting cross validation
2023-06-13 14:56:47,007:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:47,700:INFO:Calculating mean and std
2023-06-13 14:56:47,702:INFO:Creating metrics dataframe
2023-06-13 14:56:47,836:INFO:Uploading results into container
2023-06-13 14:56:47,836:INFO:Uploading model into container now
2023-06-13 14:56:47,837:INFO:_master_model_container: 17
2023-06-13 14:56:47,837:INFO:_display_container: 2
2023-06-13 14:56:47,838:INFO:LGBMRegressor(random_state=123)
2023-06-13 14:56:47,838:INFO:create_model() successfully completed......................................
2023-06-13 14:56:47,932:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:47,932:INFO:Creating metrics dataframe
2023-06-13 14:56:47,954:INFO:Initializing Dummy Regressor
2023-06-13 14:56:47,954:INFO:Total runtime is 0.32954115470250445 minutes
2023-06-13 14:56:47,958:INFO:SubProcess create_model() called ==================================
2023-06-13 14:56:47,959:INFO:Initializing create_model()
2023-06-13 14:56:47,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B54C6E1F70>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:47,959:INFO:Checking exceptions
2023-06-13 14:56:47,959:INFO:Importing libraries
2023-06-13 14:56:47,959:INFO:Copying training dataset
2023-06-13 14:56:47,969:INFO:Defining folds
2023-06-13 14:56:47,970:INFO:Declaring metric variables
2023-06-13 14:56:47,978:INFO:Importing untrained model
2023-06-13 14:56:47,989:INFO:Dummy Regressor Imported successfully
2023-06-13 14:56:48,005:INFO:Starting cross validation
2023-06-13 14:56:48,008:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 14:56:48,757:INFO:Calculating mean and std
2023-06-13 14:56:48,759:INFO:Creating metrics dataframe
2023-06-13 14:56:48,900:INFO:Uploading results into container
2023-06-13 14:56:48,901:INFO:Uploading model into container now
2023-06-13 14:56:48,901:INFO:_master_model_container: 18
2023-06-13 14:56:48,901:INFO:_display_container: 2
2023-06-13 14:56:48,902:INFO:DummyRegressor()
2023-06-13 14:56:48,902:INFO:create_model() successfully completed......................................
2023-06-13 14:56:49,005:INFO:SubProcess create_model() end ==================================
2023-06-13 14:56:49,005:INFO:Creating metrics dataframe
2023-06-13 14:56:49,040:INFO:Initializing create_model()
2023-06-13 14:56:49,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=GradientBoostingRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-13 14:56:49,041:INFO:Checking exceptions
2023-06-13 14:56:49,046:INFO:Importing libraries
2023-06-13 14:56:49,046:INFO:Copying training dataset
2023-06-13 14:56:49,058:INFO:Defining folds
2023-06-13 14:56:49,058:INFO:Declaring metric variables
2023-06-13 14:56:49,059:INFO:Importing untrained model
2023-06-13 14:56:49,059:INFO:Declaring custom model
2023-06-13 14:56:49,060:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 14:56:49,063:INFO:Cross validation set to False
2023-06-13 14:56:49,063:INFO:Fitting Model
2023-06-13 14:56:49,355:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 14:56:49,355:INFO:create_model() successfully completed......................................
2023-06-13 14:56:49,522:INFO:_master_model_container: 18
2023-06-13 14:56:49,522:INFO:_display_container: 2
2023-06-13 14:56:49,523:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 14:56:49,523:INFO:compare_models() successfully completed......................................
2023-06-13 15:42:25,155:INFO:Initializing predict_model()
2023-06-13 15:42:25,155:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B55523AE50>)
2023-06-13 15:42:25,155:INFO:Checking exceptions
2023-06-13 15:42:25,155:INFO:Preloading libraries
2023-06-13 15:42:25,159:INFO:Set up data.
2023-06-13 15:42:25,163:INFO:Set up index.
2023-06-13 15:45:56,721:INFO:Initializing predict_model()
2023-06-13 15:45:56,722:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001B5556BFEE0>, estimator=GradientBoostingRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B555A1D0D0>)
2023-06-13 15:45:56,722:INFO:Checking exceptions
2023-06-13 15:45:56,722:INFO:Preloading libraries
2023-06-13 15:45:56,726:INFO:Set up data.
2023-06-13 15:45:56,729:INFO:Set up index.
2023-06-13 15:52:21,308:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_4ca30f3d281d4fa0bcd75d02d1305235
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,308:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_23fe3a2b2fb449d6af40203ce0323885_35522899276c455ba521c1da6b22d30e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,309:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_59c4d04eb8a94ad7a5077971dd7e88e3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,309:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_bff4437d22284c6b88c8695c6199799b_a4e1b394cddc438dab25a53a1b42c1a4
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,309:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_9be9980bea704b5b858137c7f00b8541
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_3fc7c38a85574d0295c90097014d193d_a46c2b3ff64b43d483b21ca429027299
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_3a94a8bf1e7c47439cb7978b64031466
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_e0fc203d514a4b3ea15ba30f1534862a_030c12ae3cef455f887a6e26d4d6b2f2
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_27f5c223ff774969b0e53f48950c4179
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,311:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_bbd1d84907694aac882aed75672a44a1_eb480befd74b434999b9520cb10b054d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,311:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_5f1b37a4f96840f38a357129dcccaf00
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,312:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_c233914a07c442628a3ad5dcc7e82f9a_4630b548816449a5a7e34d9bae16d45a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,313:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_2801862824b845f28c8a0b574db1f9ae
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,314:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_b52640c652d541759f503740114fcd36_2e5dbde512374bb3af1227af25c229a8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,314:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_ab54d78d63364176bf7cb163f84f40e9
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,314:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_7711455a5d98406f88af6de190222bd0_248eecec8cc0491092ebfc368f9bc35d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,315:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_fa5aadf208e8426b977eb92974fb9a08
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,315:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_6f9740f408664cdf80fec3e0c03b518f_48bc0b43e3ff421a89f79c11bd6f1c58
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,315:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_35162fc6846849728c3fde5dabf2cd1d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_8261b2398bae422b9d17e0eaad8059f2_91381f784f974c3b9268fdba1d358947
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_4b6a17cab7e1480c9f426bc614cde90a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_0e9ce146043b4773b4d266793a378c0d_d4422fb8a91f45348db15d086fcca9ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,316:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_35eb8a3b483246c6a770e8f1d7ad4df6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,317:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_ea8b38646a8a4a71921611d3f1ffce47_367d36e207c94be99db499c3054ad2c0
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,317:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_2ae55fd5241745fa8b8dee75612106eb
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,317:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_e9a4e97b88f14e61b07ec3cfaa3a0be0_896deae7707d4737ae7a048821ce3577
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,317:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_7f4e05337a384d7b84161e214a59d47f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,318:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_5785e7da84f64e139ae8ce3c579762da_ef244b27d7754662a63bf4a06387f24d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,318:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_d529d5abbbf34d5b84787c1d294b5ba0
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,318:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_c16f2364e9fb4400a006d4b7f808c488_dce95ea982aa44d494e364bf345f3f5e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,319:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_b3a53607809a4eec954bfaec75118e69
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,319:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_0cd6c22cd97a46329c065a64881bedde_67059c1db2e44c6a9eb00ba17c45b2e5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,319:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_7a058f9611584bd297c6df8a0f01024b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_02839b413fd44402aeea241d7a50783a_1387e7233a27493cb58965660fff5cf2
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_626385a646bf48b6ad4965008de5538e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_4b8375f3682c4775a497400bbdaf3a81_087aa68057a9414986e94da291db00e6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,320:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_17850721e3d24a67882528a657fd326b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,321:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_c8f2b7af67954a2d8f4dcc28a5c32e37_70677618ec484c64bd11917d0ada336c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,321:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_937ed2850b254941a535c6c1300ecd31
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,321:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_25a54d818cc3402790f906f7db6fa1a3_7d103b5a69cc4bd8ba016abcac43a3e8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,321:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_81017c24ca4c4f1a92ce1d0c05a441ea
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,322:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_c0d46657606344d48579f0d165deed86_716b64f55a54447cad9ff5ff897f5333
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,322:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_936d4132866e4ef7b2a7d575ba9b5fb1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,322:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_df2a4e68b0d14a6dbf6faa98c74e57a9_6a5aa168c06548b5b527bc57c0faa0d5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,322:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_c9611a43d4834921b2c1c0ef86c6a7b6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_5ee270a9c13b46f7adb986e7800bb22b_56bd66f247d2413ea1ab2170297f0428
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_844d36cb4d1b4681be9e7c5f0cf1a883
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_87aa74b18c3e4855816ea73104beaacb_e99e70fce29c4221b0fe32cc2b6ced28
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,323:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_b47fc13a81284da69bb693f7bc10022f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_834eecfc4e8545b095a8ea8829b6dc60_49e271af676747c688c1dfae0e21942a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_bd84fa91770544d48bf7bd00de6bbcd1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_2c2d1de6ab904284aa6fda4dc5e060d4_e9e5eece623d47a1b3f9ea87565aeaff
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_6b230cedf3c14349a5e61352e6a9f892
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,324:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f4caf37aab0d4b40884f93f92dd0a901_c5ade95504c74fd689a2ad99a4616025
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,325:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_f18cde83667740c692c68990d4825b58
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,325:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_eef853fee5ac44e8a9b18454de1ce1a4_3255b3f0c1fc4c719cb625a344597212
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,325:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_f0403c589b7d4e319343ec19251d62f1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,326:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_fffe49669d064c119faf8fdf34ee29a4_d0466c75516341348f24b66979537546
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,326:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_20dbb7bdffab4ba182acc6eda8591365
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,326:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_5cb99de950d340029fd3dfd10386dc14_65d87365397d4b44bd784ae9382a0f88
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,326:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_6976cb424490414db11819fe8d6b8b4b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,326:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_27b12fc206784f2f994362c7b8c5c15d_f98204fc4f094524b7584e5681999a59
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_074dd8cce1524d0383752467a628b601
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_d97b013348e14d8ba8d5175b31d9e992_d83d0f4375254389beb6275ede7bf361
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_c04cb7b0964e4408afbaf9a1b990a4a7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_3f4581e8fe0447649d2c5c7aeb442a9f_1747c345d45647658a75d941f31c44c6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,329:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_803e801dea7745ad96f4e0b7f8b327c3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,330:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_0259d41354ba469983f3e2bd8faa3d1e_dc63c15deb6940c78747ef8befcd2a6f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,330:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_1019f6deaa7849bdaf91eda05ec4ead2
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,330:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_12a482383a8d4834929abb42448f7b84_9ee3f38a21c74c908574b748c832a9b3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_b49e96cac9cd49e0bfce061bfb558cda
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_aa293cf6e28748d5a412d8514aaefcad_aea8880c2c41472db2512a6cf16ab345
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_34e542f095d643c9979d84bd54cf67ad
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,332:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_0468a82446344bc6ae57bdb15ff814f0_3ef66a9bb0e64c288938960ee3e86ac6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,332:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_3af84698e70b49e198992b5e303e2144
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,332:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f56c567ad72b4b1a85041e776ad2864f_2834195c59a44d9abaf741912777a5dc
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,332:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_921f31494dd14ce8b518585890d13b17
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,333:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_2c4799b8b6b14c5bb8e0d14d167b8649_4d3b31b6f3b64a289282351dc11a6c4e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,333:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_3a501066bd344457aa144d11978e4c39
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,333:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_7593229d771048b5be200c7726353869_49a3a30aef534c71bdc1b2cafeb67fcc
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,333:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_f5fdf37a947248259c3372887a8f5394
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,334:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_8deb6ae5292c4983ac3641c8f0b3e58e_8abbf207cc6a42dc9289e832a742333c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,334:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_ec02facc58e7496f8375b1726db2ee5a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,334:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_48041ec142144372ae9c4b8f8d6d1c11_b65c8eab8ba641449b7a1e69c3974e15
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,335:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_3878ee3d832146b2aa4ab8757cff2fa4
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,335:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_4fd44badc79e41c39e9774462bb36d8d_2e3139849ef946859e7a8f1c9ec239fc
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,335:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_49c50441ef104fd2af502ccf680ef6d5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,335:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_de2c7e7ea82d42c6af7add29048d9213_4cd9c163a68d40268fa6af7357bc96e1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,336:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_31e4353b8d4945eeb3226ba362e4201d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,336:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_df280546e09c470cbf59fe39e7c6d121_edd3bd18ae1d47029de440a06ee2771b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,336:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_74441b648d7d43f9ae1eb3190e28ab09
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,336:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_312bbfa8702f42b6b771c57b26d1312c_719fe863adbd4a4d94f38c457c154287
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,337:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_6eed6a60ab31492793b3877970f0863a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,337:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_a80c5740790f4522bd2c452f4feb1f75_614a6e6fb3024081b7981c2249f169f3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,337:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_e809ff8974d4469fa04679eead1ec484
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,337:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_1ac3b46f093a490fbb0dcaf55a0e03a5_7a00d0df3efa44788f3644e00544df10
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,338:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_8fed36df58d243c58355950ef01be892
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,338:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_df1a8f31a6e849249cbd413ad8d5b126_c1ea8fb96d564f09aed128263fb8661f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,338:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_50d6dc2495a441e3a269d09eb70847ef
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,338:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_1d5d0c67bed04112bc2b7134cfa9c6c6_f7e704fe324f4f41923862fa4f5fc361
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,339:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_c99f112086d54337a6011b7ed4babe7a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,339:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_798a1369024c4cfabdc893dfbefdab2b_0a0496b38cb443738941d3bdc2aff8d5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,339:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_3587271f4dd74bf6b5901c558629ad49
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,339:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_be5236c98c45447b91f99502af9113b5_2940d81ac5ed4417954c9cae6bf107b4
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,340:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_5bdbc41fd2b048908f98ef3785cbdfa8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,340:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_6bb0abfaedbc48a790e59eac0b2916a0_487d76bb04d6450e985c0ddc5410466e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,340:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_598eaa9647274e1ba69a3b280ecadcaa
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:21,340:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\joblib\_memmapping_reducer.py:607: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41460_f77d807b946040c69acfb396a23f93fc_db87c7c3ee83438f9ddbfa0487a68c4d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 15:52:45,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 15:52:45,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 15:52:45,702:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 15:52:45,703:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 15:52:47,913:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-13 15:54:25,373:INFO:PyCaret RegressionExperiment
2023-06-13 15:54:25,373:INFO:Logging name: reg-default-name
2023-06-13 15:54:25,374:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 15:54:25,374:INFO:version 3.0.2
2023-06-13 15:54:25,374:INFO:Initializing setup()
2023-06-13 15:54:25,374:INFO:self.USI: 4965
2023-06-13 15:54:25,374:INFO:self._variable_keys: {'log_plots_param', 'gpu_n_jobs_param', 'X_train', 'idx', 'target_param', 'transform_target_param', 'data', 'gpu_param', 'seed', '_available_plots', 'logging_param', 'USI', 'fold_generator', 'y_test', 'exp_name_log', 'pipeline', '_ml_usecase', 'memory', 'X', 'y', 'y_train', 'X_test', 'html_param', 'exp_id', 'fold_shuffle_param', 'n_jobs_param', 'fold_groups_param'}
2023-06-13 15:54:25,374:INFO:Checking environment
2023-06-13 15:54:25,374:INFO:python_version: 3.9.13
2023-06-13 15:54:25,374:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 15:54:25,374:INFO:machine: AMD64
2023-06-13 15:54:25,374:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 15:54:25,374:INFO:Memory: svmem(total=8285085696, available=1304702976, percent=84.3, used=6980382720, free=1304702976)
2023-06-13 15:54:25,374:INFO:Physical Core: 2
2023-06-13 15:54:25,374:INFO:Logical Core: 4
2023-06-13 15:54:25,374:INFO:Checking libraries
2023-06-13 15:54:25,375:INFO:System:
2023-06-13 15:54:25,375:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 15:54:25,375:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 15:54:25,375:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 15:54:25,375:INFO:PyCaret required dependencies:
2023-06-13 15:54:25,375:INFO:                 pip: 22.2.2
2023-06-13 15:54:25,375:INFO:          setuptools: 63.4.1
2023-06-13 15:54:25,375:INFO:             pycaret: 3.0.2
2023-06-13 15:54:25,375:INFO:             IPython: 7.31.1
2023-06-13 15:54:25,375:INFO:          ipywidgets: 7.6.5
2023-06-13 15:54:25,375:INFO:                tqdm: 4.64.1
2023-06-13 15:54:25,375:INFO:               numpy: 1.21.5
2023-06-13 15:54:25,375:INFO:              pandas: 1.4.4
2023-06-13 15:54:25,375:INFO:              jinja2: 2.11.3
2023-06-13 15:54:25,375:INFO:               scipy: 1.9.1
2023-06-13 15:54:25,375:INFO:              joblib: 1.1.0
2023-06-13 15:54:25,376:INFO:             sklearn: 1.0.2
2023-06-13 15:54:25,376:INFO:                pyod: 1.0.9
2023-06-13 15:54:25,376:INFO:            imblearn: 0.10.1
2023-06-13 15:54:25,376:INFO:   category_encoders: 2.6.1
2023-06-13 15:54:25,376:INFO:            lightgbm: 3.3.5
2023-06-13 15:54:25,376:INFO:               numba: 0.55.1
2023-06-13 15:54:25,376:INFO:            requests: 2.28.1
2023-06-13 15:54:25,376:INFO:          matplotlib: 3.5.2
2023-06-13 15:54:25,376:INFO:          scikitplot: 0.3.7
2023-06-13 15:54:25,376:INFO:         yellowbrick: 1.5
2023-06-13 15:54:25,376:INFO:              plotly: 5.9.0
2023-06-13 15:54:25,376:INFO:             kaleido: 0.2.1
2023-06-13 15:54:25,377:INFO:         statsmodels: 0.13.2
2023-06-13 15:54:25,377:INFO:              sktime: 0.17.0
2023-06-13 15:54:25,377:INFO:               tbats: 1.1.3
2023-06-13 15:54:25,377:INFO:            pmdarima: 2.0.3
2023-06-13 15:54:25,377:INFO:              psutil: 5.9.0
2023-06-13 15:54:25,377:INFO:PyCaret optional dependencies:
2023-06-13 15:54:25,422:INFO:                shap: Not installed
2023-06-13 15:54:25,422:INFO:           interpret: Not installed
2023-06-13 15:54:25,422:INFO:                umap: Not installed
2023-06-13 15:54:25,422:INFO:    pandas_profiling: Not installed
2023-06-13 15:54:25,422:INFO:  explainerdashboard: Not installed
2023-06-13 15:54:25,422:INFO:             autoviz: Not installed
2023-06-13 15:54:25,422:INFO:           fairlearn: Not installed
2023-06-13 15:54:25,422:INFO:             xgboost: Not installed
2023-06-13 15:54:25,422:INFO:            catboost: Not installed
2023-06-13 15:54:25,422:INFO:              kmodes: Not installed
2023-06-13 15:54:25,422:INFO:             mlxtend: Not installed
2023-06-13 15:54:25,422:INFO:       statsforecast: Not installed
2023-06-13 15:54:25,422:INFO:        tune_sklearn: Not installed
2023-06-13 15:54:25,422:INFO:                 ray: Not installed
2023-06-13 15:54:25,423:INFO:            hyperopt: Not installed
2023-06-13 15:54:25,423:INFO:              optuna: Not installed
2023-06-13 15:54:25,423:INFO:               skopt: Not installed
2023-06-13 15:54:25,423:INFO:              mlflow: Not installed
2023-06-13 15:54:25,423:INFO:              gradio: Not installed
2023-06-13 15:54:25,423:INFO:             fastapi: Not installed
2023-06-13 15:54:25,423:INFO:             uvicorn: Not installed
2023-06-13 15:54:25,423:INFO:              m2cgen: Not installed
2023-06-13 15:54:25,423:INFO:           evidently: Not installed
2023-06-13 15:54:25,423:INFO:               fugue: Not installed
2023-06-13 15:54:25,423:INFO:           streamlit: 1.22.0
2023-06-13 15:54:25,423:INFO:             prophet: Not installed
2023-06-13 15:54:25,423:INFO:None
2023-06-13 15:54:25,423:INFO:Set up data.
2023-06-13 15:54:25,432:INFO:Set up train/test split.
2023-06-13 15:54:25,432:INFO:Set up data.
2023-06-13 15:54:25,436:INFO:Set up index.
2023-06-13 15:54:25,436:INFO:Set up folding strategy.
2023-06-13 15:54:25,436:INFO:Assigning column types.
2023-06-13 15:54:25,440:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-13 15:54:25,440:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,445:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,451:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,522:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,629:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,630:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,637:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,642:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,709:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,761:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,762:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,762:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-13 15:54:25,768:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,773:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,891:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:25,899:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:25,971:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,022:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,023:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,023:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,023:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-13 15:54:26,034:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,101:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,152:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,164:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,257:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,311:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,313:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-13 15:54:26,390:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,442:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,524:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,576:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-13 15:54:26,651:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,780:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 15:54:26,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,832:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-13 15:54:26,964:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:26,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,096:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,103:INFO:Preparing preprocessing pipeline...
2023-06-13 15:54:27,103:INFO:Set up target transformation.
2023-06-13 15:54:27,104:INFO:Set up date feature engineering.
2023-06-13 15:54:27,104:INFO:Set up simple imputation.
2023-06-13 15:54:27,148:INFO:Finished creating preprocessing pipeline.
2023-06-13 15:54:27,157:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=[], transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-13 15:54:27,158:INFO:Creating final display dataframe.
2023-06-13 15:54:27,273:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (89, 2)
4        Transformed data shape                    (89, 4)
5   Transformed train set shape                    (76, 4)
6    Transformed test set shape                    (13, 4)
7                 Date features                          1
8                    Preprocess                       True
9               Imputation type                     simple
10           Numeric imputation                       mean
11       Categorical imputation                       mode
12             Transform target                       True
13      Transform target method                yeo-johnson
14               Fold Generator            TimeSeriesSplit
15                  Fold Number                          3
16                     CPU Jobs                         -1
17                      Use GPU                      False
18               Log Experiment                      False
19              Experiment Name           reg-default-name
20                          USI                       4965
2023-06-13 15:54:27,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 15:54:27,549:INFO:setup() successfully completed in 2.32s...............
2023-06-13 15:54:27,565:INFO:Initializing compare_models()
2023-06-13 15:54:27,565:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-13 15:54:27,565:INFO:Checking exceptions
2023-06-13 15:54:27,571:INFO:Preparing display monitor
2023-06-13 15:54:27,628:INFO:Initializing Linear Regression
2023-06-13 15:54:27,628:INFO:Total runtime is 0.0 minutes
2023-06-13 15:54:27,634:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:27,634:INFO:Initializing create_model()
2023-06-13 15:54:27,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:27,635:INFO:Checking exceptions
2023-06-13 15:54:27,635:INFO:Importing libraries
2023-06-13 15:54:27,635:INFO:Copying training dataset
2023-06-13 15:54:27,643:INFO:Defining folds
2023-06-13 15:54:27,644:INFO:Declaring metric variables
2023-06-13 15:54:27,650:INFO:Importing untrained model
2023-06-13 15:54:27,658:INFO:Linear Regression Imported successfully
2023-06-13 15:54:27,673:INFO:Starting cross validation
2023-06-13 15:54:27,794:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:44,185:INFO:Calculating mean and std
2023-06-13 15:54:44,187:INFO:Creating metrics dataframe
2023-06-13 15:54:44,352:INFO:Uploading results into container
2023-06-13 15:54:44,353:INFO:Uploading model into container now
2023-06-13 15:54:44,354:INFO:_master_model_container: 1
2023-06-13 15:54:44,354:INFO:_display_container: 2
2023-06-13 15:54:44,355:INFO:LinearRegression(n_jobs=-1)
2023-06-13 15:54:44,355:INFO:create_model() successfully completed......................................
2023-06-13 15:54:44,454:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:44,455:INFO:Creating metrics dataframe
2023-06-13 15:54:44,465:INFO:Initializing Lasso Regression
2023-06-13 15:54:44,466:INFO:Total runtime is 0.2806280732154846 minutes
2023-06-13 15:54:44,470:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:44,471:INFO:Initializing create_model()
2023-06-13 15:54:44,471:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:44,471:INFO:Checking exceptions
2023-06-13 15:54:44,472:INFO:Importing libraries
2023-06-13 15:54:44,472:INFO:Copying training dataset
2023-06-13 15:54:44,484:INFO:Defining folds
2023-06-13 15:54:44,484:INFO:Declaring metric variables
2023-06-13 15:54:44,492:INFO:Importing untrained model
2023-06-13 15:54:44,499:INFO:Lasso Regression Imported successfully
2023-06-13 15:54:44,509:INFO:Starting cross validation
2023-06-13 15:54:44,511:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:49,684:INFO:Calculating mean and std
2023-06-13 15:54:49,687:INFO:Creating metrics dataframe
2023-06-13 15:54:49,885:INFO:Uploading results into container
2023-06-13 15:54:49,886:INFO:Uploading model into container now
2023-06-13 15:54:49,887:INFO:_master_model_container: 2
2023-06-13 15:54:49,888:INFO:_display_container: 2
2023-06-13 15:54:49,888:INFO:Lasso(random_state=123)
2023-06-13 15:54:49,889:INFO:create_model() successfully completed......................................
2023-06-13 15:54:50,007:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:50,007:INFO:Creating metrics dataframe
2023-06-13 15:54:50,019:INFO:Initializing Ridge Regression
2023-06-13 15:54:50,019:INFO:Total runtime is 0.37317799727121986 minutes
2023-06-13 15:54:50,026:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:50,027:INFO:Initializing create_model()
2023-06-13 15:54:50,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:50,028:INFO:Checking exceptions
2023-06-13 15:54:50,028:INFO:Importing libraries
2023-06-13 15:54:50,028:INFO:Copying training dataset
2023-06-13 15:54:50,041:INFO:Defining folds
2023-06-13 15:54:50,041:INFO:Declaring metric variables
2023-06-13 15:54:50,047:INFO:Importing untrained model
2023-06-13 15:54:50,055:INFO:Ridge Regression Imported successfully
2023-06-13 15:54:50,069:INFO:Starting cross validation
2023-06-13 15:54:50,071:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:50,596:INFO:Calculating mean and std
2023-06-13 15:54:50,599:INFO:Creating metrics dataframe
2023-06-13 15:54:50,763:INFO:Uploading results into container
2023-06-13 15:54:50,764:INFO:Uploading model into container now
2023-06-13 15:54:50,764:INFO:_master_model_container: 3
2023-06-13 15:54:50,764:INFO:_display_container: 2
2023-06-13 15:54:50,765:INFO:Ridge(random_state=123)
2023-06-13 15:54:50,765:INFO:create_model() successfully completed......................................
2023-06-13 15:54:50,861:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:50,862:INFO:Creating metrics dataframe
2023-06-13 15:54:50,874:INFO:Initializing Elastic Net
2023-06-13 15:54:50,875:INFO:Total runtime is 0.3874447147051493 minutes
2023-06-13 15:54:50,883:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:50,884:INFO:Initializing create_model()
2023-06-13 15:54:50,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:50,885:INFO:Checking exceptions
2023-06-13 15:54:50,885:INFO:Importing libraries
2023-06-13 15:54:50,885:INFO:Copying training dataset
2023-06-13 15:54:50,906:INFO:Defining folds
2023-06-13 15:54:50,907:INFO:Declaring metric variables
2023-06-13 15:54:50,915:INFO:Importing untrained model
2023-06-13 15:54:50,922:INFO:Elastic Net Imported successfully
2023-06-13 15:54:50,935:INFO:Starting cross validation
2023-06-13 15:54:50,937:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:51,445:INFO:Calculating mean and std
2023-06-13 15:54:51,449:INFO:Creating metrics dataframe
2023-06-13 15:54:51,616:INFO:Uploading results into container
2023-06-13 15:54:51,617:INFO:Uploading model into container now
2023-06-13 15:54:51,618:INFO:_master_model_container: 4
2023-06-13 15:54:51,619:INFO:_display_container: 2
2023-06-13 15:54:51,620:INFO:ElasticNet(random_state=123)
2023-06-13 15:54:51,620:INFO:create_model() successfully completed......................................
2023-06-13 15:54:51,721:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:51,721:INFO:Creating metrics dataframe
2023-06-13 15:54:51,742:INFO:Initializing Least Angle Regression
2023-06-13 15:54:51,742:INFO:Total runtime is 0.4018948396046956 minutes
2023-06-13 15:54:51,748:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:51,749:INFO:Initializing create_model()
2023-06-13 15:54:51,749:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:51,749:INFO:Checking exceptions
2023-06-13 15:54:51,750:INFO:Importing libraries
2023-06-13 15:54:51,750:INFO:Copying training dataset
2023-06-13 15:54:51,763:INFO:Defining folds
2023-06-13 15:54:51,763:INFO:Declaring metric variables
2023-06-13 15:54:51,772:INFO:Importing untrained model
2023-06-13 15:54:51,781:INFO:Least Angle Regression Imported successfully
2023-06-13 15:54:51,797:INFO:Starting cross validation
2023-06-13 15:54:51,799:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:51,920:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:51,924:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:51,934:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:52,328:INFO:Calculating mean and std
2023-06-13 15:54:52,330:INFO:Creating metrics dataframe
2023-06-13 15:54:52,494:INFO:Uploading results into container
2023-06-13 15:54:52,494:INFO:Uploading model into container now
2023-06-13 15:54:52,495:INFO:_master_model_container: 5
2023-06-13 15:54:52,495:INFO:_display_container: 2
2023-06-13 15:54:52,496:INFO:Lars(random_state=123)
2023-06-13 15:54:52,497:INFO:create_model() successfully completed......................................
2023-06-13 15:54:52,601:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:52,602:INFO:Creating metrics dataframe
2023-06-13 15:54:52,624:INFO:Initializing Lasso Least Angle Regression
2023-06-13 15:54:52,625:INFO:Total runtime is 0.416594918568929 minutes
2023-06-13 15:54:52,631:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:52,632:INFO:Initializing create_model()
2023-06-13 15:54:52,633:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:52,633:INFO:Checking exceptions
2023-06-13 15:54:52,633:INFO:Importing libraries
2023-06-13 15:54:52,633:INFO:Copying training dataset
2023-06-13 15:54:52,646:INFO:Defining folds
2023-06-13 15:54:52,646:INFO:Declaring metric variables
2023-06-13 15:54:52,653:INFO:Importing untrained model
2023-06-13 15:54:52,664:INFO:Lasso Least Angle Regression Imported successfully
2023-06-13 15:54:52,678:INFO:Starting cross validation
2023-06-13 15:54:52,680:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:52,788:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 15:54:52,803:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 15:54:52,832:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 15:54:53,189:INFO:Calculating mean and std
2023-06-13 15:54:53,191:INFO:Creating metrics dataframe
2023-06-13 15:54:53,374:INFO:Uploading results into container
2023-06-13 15:54:53,375:INFO:Uploading model into container now
2023-06-13 15:54:53,376:INFO:_master_model_container: 6
2023-06-13 15:54:53,376:INFO:_display_container: 2
2023-06-13 15:54:53,377:INFO:LassoLars(random_state=123)
2023-06-13 15:54:53,378:INFO:create_model() successfully completed......................................
2023-06-13 15:54:53,478:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:53,478:INFO:Creating metrics dataframe
2023-06-13 15:54:53,493:INFO:Initializing Orthogonal Matching Pursuit
2023-06-13 15:54:53,493:INFO:Total runtime is 0.43107829093933103 minutes
2023-06-13 15:54:53,505:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:53,506:INFO:Initializing create_model()
2023-06-13 15:54:53,506:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:53,506:INFO:Checking exceptions
2023-06-13 15:54:53,506:INFO:Importing libraries
2023-06-13 15:54:53,506:INFO:Copying training dataset
2023-06-13 15:54:53,517:INFO:Defining folds
2023-06-13 15:54:53,518:INFO:Declaring metric variables
2023-06-13 15:54:53,526:INFO:Importing untrained model
2023-06-13 15:54:53,532:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-13 15:54:53,549:INFO:Starting cross validation
2023-06-13 15:54:53,552:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:53,659:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:53,676:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:53,690:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 15:54:54,054:INFO:Calculating mean and std
2023-06-13 15:54:54,057:INFO:Creating metrics dataframe
2023-06-13 15:54:54,229:INFO:Uploading results into container
2023-06-13 15:54:54,231:INFO:Uploading model into container now
2023-06-13 15:54:54,232:INFO:_master_model_container: 7
2023-06-13 15:54:54,232:INFO:_display_container: 2
2023-06-13 15:54:54,233:INFO:OrthogonalMatchingPursuit()
2023-06-13 15:54:54,233:INFO:create_model() successfully completed......................................
2023-06-13 15:54:54,337:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:54,337:INFO:Creating metrics dataframe
2023-06-13 15:54:54,358:INFO:Initializing Bayesian Ridge
2023-06-13 15:54:54,358:INFO:Total runtime is 0.4454950133959452 minutes
2023-06-13 15:54:54,364:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:54,364:INFO:Initializing create_model()
2023-06-13 15:54:54,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:54,365:INFO:Checking exceptions
2023-06-13 15:54:54,365:INFO:Importing libraries
2023-06-13 15:54:54,365:INFO:Copying training dataset
2023-06-13 15:54:54,374:INFO:Defining folds
2023-06-13 15:54:54,374:INFO:Declaring metric variables
2023-06-13 15:54:54,383:INFO:Importing untrained model
2023-06-13 15:54:54,388:INFO:Bayesian Ridge Imported successfully
2023-06-13 15:54:54,408:INFO:Starting cross validation
2023-06-13 15:54:54,410:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:54,916:INFO:Calculating mean and std
2023-06-13 15:54:54,918:INFO:Creating metrics dataframe
2023-06-13 15:54:55,080:INFO:Uploading results into container
2023-06-13 15:54:55,081:INFO:Uploading model into container now
2023-06-13 15:54:55,082:INFO:_master_model_container: 8
2023-06-13 15:54:55,082:INFO:_display_container: 2
2023-06-13 15:54:55,083:INFO:BayesianRidge()
2023-06-13 15:54:55,083:INFO:create_model() successfully completed......................................
2023-06-13 15:54:55,170:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:55,171:INFO:Creating metrics dataframe
2023-06-13 15:54:55,186:INFO:Initializing Passive Aggressive Regressor
2023-06-13 15:54:55,186:INFO:Total runtime is 0.4592949867248535 minutes
2023-06-13 15:54:55,191:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:55,192:INFO:Initializing create_model()
2023-06-13 15:54:55,192:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:55,192:INFO:Checking exceptions
2023-06-13 15:54:55,193:INFO:Importing libraries
2023-06-13 15:54:55,193:INFO:Copying training dataset
2023-06-13 15:54:55,199:INFO:Defining folds
2023-06-13 15:54:55,200:INFO:Declaring metric variables
2023-06-13 15:54:55,210:INFO:Importing untrained model
2023-06-13 15:54:55,216:INFO:Passive Aggressive Regressor Imported successfully
2023-06-13 15:54:55,229:INFO:Starting cross validation
2023-06-13 15:54:55,230:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:55,655:INFO:Calculating mean and std
2023-06-13 15:54:55,657:INFO:Creating metrics dataframe
2023-06-13 15:54:55,789:INFO:Uploading results into container
2023-06-13 15:54:55,790:INFO:Uploading model into container now
2023-06-13 15:54:55,790:INFO:_master_model_container: 9
2023-06-13 15:54:55,790:INFO:_display_container: 2
2023-06-13 15:54:55,790:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-13 15:54:55,790:INFO:create_model() successfully completed......................................
2023-06-13 15:54:55,875:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:55,876:INFO:Creating metrics dataframe
2023-06-13 15:54:55,894:INFO:Initializing Huber Regressor
2023-06-13 15:54:55,894:INFO:Total runtime is 0.47109506527582806 minutes
2023-06-13 15:54:55,899:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:55,900:INFO:Initializing create_model()
2023-06-13 15:54:55,901:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:55,901:INFO:Checking exceptions
2023-06-13 15:54:55,901:INFO:Importing libraries
2023-06-13 15:54:55,901:INFO:Copying training dataset
2023-06-13 15:54:55,910:INFO:Defining folds
2023-06-13 15:54:55,910:INFO:Declaring metric variables
2023-06-13 15:54:55,931:INFO:Importing untrained model
2023-06-13 15:54:55,939:INFO:Huber Regressor Imported successfully
2023-06-13 15:54:55,952:INFO:Starting cross validation
2023-06-13 15:54:55,955:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:56,405:INFO:Calculating mean and std
2023-06-13 15:54:56,407:INFO:Creating metrics dataframe
2023-06-13 15:54:56,545:INFO:Uploading results into container
2023-06-13 15:54:56,546:INFO:Uploading model into container now
2023-06-13 15:54:56,547:INFO:_master_model_container: 10
2023-06-13 15:54:56,547:INFO:_display_container: 2
2023-06-13 15:54:56,548:INFO:HuberRegressor()
2023-06-13 15:54:56,548:INFO:create_model() successfully completed......................................
2023-06-13 15:54:56,634:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:56,634:INFO:Creating metrics dataframe
2023-06-13 15:54:56,647:INFO:Initializing K Neighbors Regressor
2023-06-13 15:54:56,647:INFO:Total runtime is 0.48364510933558147 minutes
2023-06-13 15:54:56,651:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:56,652:INFO:Initializing create_model()
2023-06-13 15:54:56,652:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:56,653:INFO:Checking exceptions
2023-06-13 15:54:56,653:INFO:Importing libraries
2023-06-13 15:54:56,653:INFO:Copying training dataset
2023-06-13 15:54:56,662:INFO:Defining folds
2023-06-13 15:54:56,663:INFO:Declaring metric variables
2023-06-13 15:54:56,670:INFO:Importing untrained model
2023-06-13 15:54:56,679:INFO:K Neighbors Regressor Imported successfully
2023-06-13 15:54:56,689:INFO:Starting cross validation
2023-06-13 15:54:56,690:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:57,134:INFO:Calculating mean and std
2023-06-13 15:54:57,135:INFO:Creating metrics dataframe
2023-06-13 15:54:57,268:INFO:Uploading results into container
2023-06-13 15:54:57,269:INFO:Uploading model into container now
2023-06-13 15:54:57,269:INFO:_master_model_container: 11
2023-06-13 15:54:57,270:INFO:_display_container: 2
2023-06-13 15:54:57,270:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-13 15:54:57,270:INFO:create_model() successfully completed......................................
2023-06-13 15:54:57,357:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:57,357:INFO:Creating metrics dataframe
2023-06-13 15:54:57,371:INFO:Initializing Decision Tree Regressor
2023-06-13 15:54:57,371:INFO:Total runtime is 0.49571184714635214 minutes
2023-06-13 15:54:57,379:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:57,380:INFO:Initializing create_model()
2023-06-13 15:54:57,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:57,380:INFO:Checking exceptions
2023-06-13 15:54:57,381:INFO:Importing libraries
2023-06-13 15:54:57,381:INFO:Copying training dataset
2023-06-13 15:54:57,390:INFO:Defining folds
2023-06-13 15:54:57,390:INFO:Declaring metric variables
2023-06-13 15:54:57,399:INFO:Importing untrained model
2023-06-13 15:54:57,406:INFO:Decision Tree Regressor Imported successfully
2023-06-13 15:54:57,420:INFO:Starting cross validation
2023-06-13 15:54:57,421:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:57,998:INFO:Calculating mean and std
2023-06-13 15:54:58,000:INFO:Creating metrics dataframe
2023-06-13 15:54:58,154:INFO:Uploading results into container
2023-06-13 15:54:58,155:INFO:Uploading model into container now
2023-06-13 15:54:58,156:INFO:_master_model_container: 12
2023-06-13 15:54:58,156:INFO:_display_container: 2
2023-06-13 15:54:58,156:INFO:DecisionTreeRegressor(random_state=123)
2023-06-13 15:54:58,156:INFO:create_model() successfully completed......................................
2023-06-13 15:54:58,249:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:58,250:INFO:Creating metrics dataframe
2023-06-13 15:54:58,266:INFO:Initializing Random Forest Regressor
2023-06-13 15:54:58,266:INFO:Total runtime is 0.5106285572052002 minutes
2023-06-13 15:54:58,271:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:58,272:INFO:Initializing create_model()
2023-06-13 15:54:58,273:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:58,273:INFO:Checking exceptions
2023-06-13 15:54:58,273:INFO:Importing libraries
2023-06-13 15:54:58,273:INFO:Copying training dataset
2023-06-13 15:54:58,280:INFO:Defining folds
2023-06-13 15:54:58,281:INFO:Declaring metric variables
2023-06-13 15:54:58,292:INFO:Importing untrained model
2023-06-13 15:54:58,301:INFO:Random Forest Regressor Imported successfully
2023-06-13 15:54:58,318:INFO:Starting cross validation
2023-06-13 15:54:58,319:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:54:59,326:INFO:Calculating mean and std
2023-06-13 15:54:59,330:INFO:Creating metrics dataframe
2023-06-13 15:54:59,489:INFO:Uploading results into container
2023-06-13 15:54:59,490:INFO:Uploading model into container now
2023-06-13 15:54:59,491:INFO:_master_model_container: 13
2023-06-13 15:54:59,491:INFO:_display_container: 2
2023-06-13 15:54:59,492:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 15:54:59,493:INFO:create_model() successfully completed......................................
2023-06-13 15:54:59,584:INFO:SubProcess create_model() end ==================================
2023-06-13 15:54:59,584:INFO:Creating metrics dataframe
2023-06-13 15:54:59,600:INFO:Initializing Extra Trees Regressor
2023-06-13 15:54:59,600:INFO:Total runtime is 0.532858137289683 minutes
2023-06-13 15:54:59,605:INFO:SubProcess create_model() called ==================================
2023-06-13 15:54:59,606:INFO:Initializing create_model()
2023-06-13 15:54:59,606:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:54:59,607:INFO:Checking exceptions
2023-06-13 15:54:59,607:INFO:Importing libraries
2023-06-13 15:54:59,607:INFO:Copying training dataset
2023-06-13 15:54:59,614:INFO:Defining folds
2023-06-13 15:54:59,614:INFO:Declaring metric variables
2023-06-13 15:54:59,622:INFO:Importing untrained model
2023-06-13 15:54:59,631:INFO:Extra Trees Regressor Imported successfully
2023-06-13 15:54:59,644:INFO:Starting cross validation
2023-06-13 15:54:59,648:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:55:00,574:INFO:Calculating mean and std
2023-06-13 15:55:00,576:INFO:Creating metrics dataframe
2023-06-13 15:55:00,752:INFO:Uploading results into container
2023-06-13 15:55:00,753:INFO:Uploading model into container now
2023-06-13 15:55:00,756:INFO:_master_model_container: 14
2023-06-13 15:55:00,757:INFO:_display_container: 2
2023-06-13 15:55:00,758:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-13 15:55:00,758:INFO:create_model() successfully completed......................................
2023-06-13 15:55:00,852:INFO:SubProcess create_model() end ==================================
2023-06-13 15:55:00,852:INFO:Creating metrics dataframe
2023-06-13 15:55:00,869:INFO:Initializing AdaBoost Regressor
2023-06-13 15:55:00,869:INFO:Total runtime is 0.5540084918340047 minutes
2023-06-13 15:55:00,877:INFO:SubProcess create_model() called ==================================
2023-06-13 15:55:00,878:INFO:Initializing create_model()
2023-06-13 15:55:00,878:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:55:00,879:INFO:Checking exceptions
2023-06-13 15:55:00,879:INFO:Importing libraries
2023-06-13 15:55:00,879:INFO:Copying training dataset
2023-06-13 15:55:00,885:INFO:Defining folds
2023-06-13 15:55:00,885:INFO:Declaring metric variables
2023-06-13 15:55:00,893:INFO:Importing untrained model
2023-06-13 15:55:00,903:INFO:AdaBoost Regressor Imported successfully
2023-06-13 15:55:00,918:INFO:Starting cross validation
2023-06-13 15:55:00,919:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:55:01,525:INFO:Calculating mean and std
2023-06-13 15:55:01,527:INFO:Creating metrics dataframe
2023-06-13 15:55:01,672:INFO:Uploading results into container
2023-06-13 15:55:01,673:INFO:Uploading model into container now
2023-06-13 15:55:01,673:INFO:_master_model_container: 15
2023-06-13 15:55:01,673:INFO:_display_container: 2
2023-06-13 15:55:01,674:INFO:AdaBoostRegressor(random_state=123)
2023-06-13 15:55:01,674:INFO:create_model() successfully completed......................................
2023-06-13 15:55:01,760:INFO:SubProcess create_model() end ==================================
2023-06-13 15:55:01,761:INFO:Creating metrics dataframe
2023-06-13 15:55:01,790:INFO:Initializing Gradient Boosting Regressor
2023-06-13 15:55:01,790:INFO:Total runtime is 0.5693585793177286 minutes
2023-06-13 15:55:01,797:INFO:SubProcess create_model() called ==================================
2023-06-13 15:55:01,798:INFO:Initializing create_model()
2023-06-13 15:55:01,798:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:55:01,798:INFO:Checking exceptions
2023-06-13 15:55:01,799:INFO:Importing libraries
2023-06-13 15:55:01,799:INFO:Copying training dataset
2023-06-13 15:55:01,806:INFO:Defining folds
2023-06-13 15:55:01,807:INFO:Declaring metric variables
2023-06-13 15:55:01,816:INFO:Importing untrained model
2023-06-13 15:55:01,820:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 15:55:01,833:INFO:Starting cross validation
2023-06-13 15:55:01,835:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:55:02,383:INFO:Calculating mean and std
2023-06-13 15:55:02,385:INFO:Creating metrics dataframe
2023-06-13 15:55:02,532:INFO:Uploading results into container
2023-06-13 15:55:02,533:INFO:Uploading model into container now
2023-06-13 15:55:02,534:INFO:_master_model_container: 16
2023-06-13 15:55:02,534:INFO:_display_container: 2
2023-06-13 15:55:02,535:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 15:55:02,536:INFO:create_model() successfully completed......................................
2023-06-13 15:55:02,621:INFO:SubProcess create_model() end ==================================
2023-06-13 15:55:02,622:INFO:Creating metrics dataframe
2023-06-13 15:55:02,636:INFO:Initializing Light Gradient Boosting Machine
2023-06-13 15:55:02,636:INFO:Total runtime is 0.5834586064020791 minutes
2023-06-13 15:55:02,644:INFO:SubProcess create_model() called ==================================
2023-06-13 15:55:02,644:INFO:Initializing create_model()
2023-06-13 15:55:02,645:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:55:02,645:INFO:Checking exceptions
2023-06-13 15:55:02,645:INFO:Importing libraries
2023-06-13 15:55:02,645:INFO:Copying training dataset
2023-06-13 15:55:02,652:INFO:Defining folds
2023-06-13 15:55:02,652:INFO:Declaring metric variables
2023-06-13 15:55:02,660:INFO:Importing untrained model
2023-06-13 15:55:02,667:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-13 15:55:02,679:INFO:Starting cross validation
2023-06-13 15:55:02,681:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:55:05,351:INFO:Calculating mean and std
2023-06-13 15:55:05,354:INFO:Creating metrics dataframe
2023-06-13 15:55:05,533:INFO:Uploading results into container
2023-06-13 15:55:05,534:INFO:Uploading model into container now
2023-06-13 15:55:05,535:INFO:_master_model_container: 17
2023-06-13 15:55:05,535:INFO:_display_container: 2
2023-06-13 15:55:05,538:INFO:LGBMRegressor(random_state=123)
2023-06-13 15:55:05,538:INFO:create_model() successfully completed......................................
2023-06-13 15:55:05,702:INFO:SubProcess create_model() end ==================================
2023-06-13 15:55:05,702:INFO:Creating metrics dataframe
2023-06-13 15:55:05,736:INFO:Initializing Dummy Regressor
2023-06-13 15:55:05,737:INFO:Total runtime is 0.6351421634356179 minutes
2023-06-13 15:55:05,749:INFO:SubProcess create_model() called ==================================
2023-06-13 15:55:05,750:INFO:Initializing create_model()
2023-06-13 15:55:05,750:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000182D1590970>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:55:05,751:INFO:Checking exceptions
2023-06-13 15:55:05,751:INFO:Importing libraries
2023-06-13 15:55:05,751:INFO:Copying training dataset
2023-06-13 15:55:05,762:INFO:Defining folds
2023-06-13 15:55:05,762:INFO:Declaring metric variables
2023-06-13 15:55:05,774:INFO:Importing untrained model
2023-06-13 15:55:05,785:INFO:Dummy Regressor Imported successfully
2023-06-13 15:55:05,802:INFO:Starting cross validation
2023-06-13 15:55:05,805:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 15:55:06,441:INFO:Calculating mean and std
2023-06-13 15:55:06,444:INFO:Creating metrics dataframe
2023-06-13 15:55:06,644:INFO:Uploading results into container
2023-06-13 15:55:06,645:INFO:Uploading model into container now
2023-06-13 15:55:06,646:INFO:_master_model_container: 18
2023-06-13 15:55:06,646:INFO:_display_container: 2
2023-06-13 15:55:06,646:INFO:DummyRegressor()
2023-06-13 15:55:06,647:INFO:create_model() successfully completed......................................
2023-06-13 15:55:06,771:INFO:SubProcess create_model() end ==================================
2023-06-13 15:55:06,772:INFO:Creating metrics dataframe
2023-06-13 15:55:06,820:INFO:Initializing create_model()
2023-06-13 15:55:06,820:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-13 15:55:06,821:INFO:Checking exceptions
2023-06-13 15:55:06,824:INFO:Importing libraries
2023-06-13 15:55:06,825:INFO:Copying training dataset
2023-06-13 15:55:06,835:INFO:Defining folds
2023-06-13 15:55:06,836:INFO:Declaring metric variables
2023-06-13 15:55:06,837:INFO:Importing untrained model
2023-06-13 15:55:06,838:INFO:Declaring custom model
2023-06-13 15:55:06,839:INFO:Random Forest Regressor Imported successfully
2023-06-13 15:55:06,841:INFO:Cross validation set to False
2023-06-13 15:55:06,842:INFO:Fitting Model
2023-06-13 15:55:07,391:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 15:55:07,391:INFO:create_model() successfully completed......................................
2023-06-13 15:55:07,566:INFO:_master_model_container: 18
2023-06-13 15:55:07,567:INFO:_display_container: 2
2023-06-13 15:55:07,568:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 15:55:07,568:INFO:compare_models() successfully completed......................................
2023-06-13 15:55:07,615:INFO:Initializing predict_model()
2023-06-13 15:55:07,615:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182D8049940>)
2023-06-13 15:55:07,615:INFO:Checking exceptions
2023-06-13 15:55:07,615:INFO:Preloading libraries
2023-06-13 15:55:07,618:INFO:Set up data.
2023-06-13 15:55:07,624:INFO:Set up index.
2023-06-13 15:57:59,131:INFO:Initializing predict_model()
2023-06-13 15:57:59,132:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000182D051F460>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000182D8027C10>)
2023-06-13 15:57:59,132:INFO:Checking exceptions
2023-06-13 15:57:59,132:INFO:Preloading libraries
2023-06-13 15:57:59,136:INFO:Set up data.
2023-06-13 15:57:59,140:INFO:Set up index.
2023-06-13 16:07:06,934:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_4c5731bc661b4b9ab434de15fb4a5253
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,935:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_ce1d0ef6f73e409a8a57b18253081cc3_4dc4327187d64c4f887d0e97de2e852b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,935:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_d31c9d49bb814f799475c796daf2cfdd
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,935:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_8323e068d6d44bb08e1ab9b0181ad854_e7c5e67bfc034be7ac16f3b1ca1a7d6c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,936:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_f0fe4f30de4a473289ec8e03dbd7bd88
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,936:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_235abb212c2443f4b4498c4b15c174a9_e53389df7ffc4ea89bdf64a865553ea7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,937:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_fdd1520839364bd989402961f38b1294
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,937:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_2b2786a512bc4416bd01fce2dfe7ef30_e7a5cf291f3a4839b7863dab585c8859
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,938:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_f6966da9f1c7407e8e1d05b6800d0e2a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,938:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_fbe0964fe3ec41bf97532c741faf6472_fa33107108e444d589e15e6cc3968d10
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,939:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_e56f6c1f888a4f6ba4a4d7d59d347e82
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,939:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_72974809063645e5a838ce3a099588b8_b731f01309e440338b6046e75491714e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,940:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_a6a6ab33fd33426db83bc40c14b50e46
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,940:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_3f67463e64ca4c3ba8f8bebf86fd6632_cdc9e802c6b4415093099050b7a4b8e7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,940:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_6bfb55fd02374ca684f0b05af3d899f0
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,941:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_40933b5367a84975803fa87c358da39d_cd571573b13c424cab0bd764fd9acf10
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,941:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_be4f60eac5f24117a88862a4e695ecdb
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,942:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_6eba8ae6e9104fb7910ff3179998c1d8_d72fb520667e4ede93b2082a47587a2b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,942:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_dbe6c4101a7d43af832e5ca2e111140a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,943:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_adabe6799c5046d98f67f600514826a0_cdbef998112a4730aff18c7edf4238c7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,944:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_3bda577b76d343e1ba318dfb6b1a512f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,945:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_2b7132fcba0f48938f35c4bdacfe406e_ae19ab5a7d4f46929aa9c33afc143db1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,945:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_464e40b52fe34ebb8fda7d42d4a14a14
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,946:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_b0cc4822a682483d9f0e4d721a3f851f_ec0ffaf0bd7a425d93a3ba9c7f3be6ba
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,946:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_18b8084573a142fe910b4acaeb94a109
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,947:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_0b2fcc058fe148c9887999cb04fc51d2_f0f61347105f442685cfea86fbcc4a71
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,947:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_c57dbb8b03f743caafe204953921c9de
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,947:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_fa87249791b5469d860b5209ba265c9a_20e53edf7cf041b08536da385cd1843f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,948:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_45004b4096c247e3a7551b04dce53cb9
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,948:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_237aae88034548488da6ae269c07f494_9cb8d981b51c4d8f99b175e342d37f33
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,948:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_38f1487bf8c54e49959c4b33cec5c92e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,949:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_cb840d2e8b3a440c843ca5cb2143326a_ffc47efe819641e0a44d5e0e218e6ccd
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,949:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_7047e7ca2e6d447ab5435727dadc1cf3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,949:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_c08f2ad311f4406691de9f381b898911_8cac74e712f249e581cd3b0d14cdb1ce
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,950:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_a27a1bf42b744470ab4a97b8db81a842
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:06,950:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_41652_de8377c7bb0249fd9ee46dd53d20675f_a02243d3b3f74aad8ee551978d2981d0
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-13 16:07:27,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 16:07:27,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 16:07:27,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 16:07:27,831:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-13 16:07:29,337:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-13 16:07:29,962:INFO:PyCaret RegressionExperiment
2023-06-13 16:07:29,962:INFO:Logging name: reg-default-name
2023-06-13 16:07:29,963:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-13 16:07:29,963:INFO:version 3.0.2
2023-06-13 16:07:29,963:INFO:Initializing setup()
2023-06-13 16:07:29,963:INFO:self.USI: 288a
2023-06-13 16:07:29,963:INFO:self._variable_keys: {'html_param', 'data', 'gpu_n_jobs_param', 'gpu_param', 'target_param', 'y_train', 'log_plots_param', 'pipeline', '_available_plots', 'X_train', 'transform_target_param', 'exp_name_log', 'idx', '_ml_usecase', 'X', 'memory', 'seed', 'exp_id', 'X_test', 'USI', 'fold_generator', 'n_jobs_param', 'y_test', 'logging_param', 'fold_shuffle_param', 'fold_groups_param', 'y'}
2023-06-13 16:07:29,963:INFO:Checking environment
2023-06-13 16:07:29,963:INFO:python_version: 3.9.13
2023-06-13 16:07:29,963:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-13 16:07:29,963:INFO:machine: AMD64
2023-06-13 16:07:29,963:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-13 16:07:29,963:INFO:Memory: svmem(total=8285085696, available=1372246016, percent=83.4, used=6912839680, free=1372246016)
2023-06-13 16:07:29,963:INFO:Physical Core: 2
2023-06-13 16:07:29,963:INFO:Logical Core: 4
2023-06-13 16:07:29,963:INFO:Checking libraries
2023-06-13 16:07:29,963:INFO:System:
2023-06-13 16:07:29,964:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-13 16:07:29,964:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-13 16:07:29,964:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-13 16:07:29,964:INFO:PyCaret required dependencies:
2023-06-13 16:07:29,964:INFO:                 pip: 22.2.2
2023-06-13 16:07:29,964:INFO:          setuptools: 63.4.1
2023-06-13 16:07:29,964:INFO:             pycaret: 3.0.2
2023-06-13 16:07:29,964:INFO:             IPython: 7.31.1
2023-06-13 16:07:29,964:INFO:          ipywidgets: 7.6.5
2023-06-13 16:07:29,964:INFO:                tqdm: 4.64.1
2023-06-13 16:07:29,964:INFO:               numpy: 1.21.5
2023-06-13 16:07:29,964:INFO:              pandas: 1.4.4
2023-06-13 16:07:29,964:INFO:              jinja2: 2.11.3
2023-06-13 16:07:29,964:INFO:               scipy: 1.9.1
2023-06-13 16:07:29,964:INFO:              joblib: 1.1.0
2023-06-13 16:07:29,965:INFO:             sklearn: 1.0.2
2023-06-13 16:07:29,965:INFO:                pyod: 1.0.9
2023-06-13 16:07:29,965:INFO:            imblearn: 0.10.1
2023-06-13 16:07:29,965:INFO:   category_encoders: 2.6.1
2023-06-13 16:07:29,965:INFO:            lightgbm: 3.3.5
2023-06-13 16:07:29,965:INFO:               numba: 0.55.1
2023-06-13 16:07:29,965:INFO:            requests: 2.28.1
2023-06-13 16:07:29,965:INFO:          matplotlib: 3.5.2
2023-06-13 16:07:29,965:INFO:          scikitplot: 0.3.7
2023-06-13 16:07:29,965:INFO:         yellowbrick: 1.5
2023-06-13 16:07:29,965:INFO:              plotly: 5.9.0
2023-06-13 16:07:29,965:INFO:             kaleido: 0.2.1
2023-06-13 16:07:29,965:INFO:         statsmodels: 0.13.2
2023-06-13 16:07:29,965:INFO:              sktime: 0.17.0
2023-06-13 16:07:29,965:INFO:               tbats: 1.1.3
2023-06-13 16:07:29,965:INFO:            pmdarima: 2.0.3
2023-06-13 16:07:29,965:INFO:              psutil: 5.9.0
2023-06-13 16:07:29,966:INFO:PyCaret optional dependencies:
2023-06-13 16:07:30,015:INFO:                shap: Not installed
2023-06-13 16:07:30,015:INFO:           interpret: Not installed
2023-06-13 16:07:30,015:INFO:                umap: Not installed
2023-06-13 16:07:30,015:INFO:    pandas_profiling: Not installed
2023-06-13 16:07:30,015:INFO:  explainerdashboard: Not installed
2023-06-13 16:07:30,015:INFO:             autoviz: Not installed
2023-06-13 16:07:30,015:INFO:           fairlearn: Not installed
2023-06-13 16:07:30,015:INFO:             xgboost: Not installed
2023-06-13 16:07:30,015:INFO:            catboost: Not installed
2023-06-13 16:07:30,015:INFO:              kmodes: Not installed
2023-06-13 16:07:30,016:INFO:             mlxtend: Not installed
2023-06-13 16:07:30,016:INFO:       statsforecast: Not installed
2023-06-13 16:07:30,016:INFO:        tune_sklearn: Not installed
2023-06-13 16:07:30,016:INFO:                 ray: Not installed
2023-06-13 16:07:30,016:INFO:            hyperopt: Not installed
2023-06-13 16:07:30,016:INFO:              optuna: Not installed
2023-06-13 16:07:30,016:INFO:               skopt: Not installed
2023-06-13 16:07:30,016:INFO:              mlflow: Not installed
2023-06-13 16:07:30,016:INFO:              gradio: Not installed
2023-06-13 16:07:30,016:INFO:             fastapi: Not installed
2023-06-13 16:07:30,016:INFO:             uvicorn: Not installed
2023-06-13 16:07:30,016:INFO:              m2cgen: Not installed
2023-06-13 16:07:30,016:INFO:           evidently: Not installed
2023-06-13 16:07:30,016:INFO:               fugue: Not installed
2023-06-13 16:07:30,016:INFO:           streamlit: 1.22.0
2023-06-13 16:07:30,016:INFO:             prophet: Not installed
2023-06-13 16:07:30,016:INFO:None
2023-06-13 16:07:30,016:INFO:Set up data.
2023-06-13 16:07:30,023:INFO:Set up train/test split.
2023-06-13 16:07:30,023:INFO:Set up data.
2023-06-13 16:07:30,029:INFO:Set up index.
2023-06-13 16:07:30,029:INFO:Set up folding strategy.
2023-06-13 16:07:30,029:INFO:Assigning column types.
2023-06-13 16:07:30,035:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-13 16:07:30,035:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,041:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,046:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,116:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,167:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,168:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,197:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,198:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,203:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,208:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,331:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,332:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,332:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-13 16:07:30,337:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,343:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,409:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,467:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,472:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,537:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,589:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-13 16:07:30,600:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,667:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,719:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,730:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,851:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-13 16:07:30,927:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,985:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:30,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:30,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,067:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:31,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-13 16:07:31,120:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,120:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-13 16:07:31,198:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:31,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-13 16:07:31,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,378:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-13 16:07:31,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,639:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:31,642:INFO:Preparing preprocessing pipeline...
2023-06-13 16:07:31,643:INFO:Set up target transformation.
2023-06-13 16:07:31,643:INFO:Set up date feature engineering.
2023-06-13 16:07:31,643:INFO:Set up simple imputation.
2023-06-13 16:07:31,701:INFO:Finished creating preprocessing pipeline.
2023-06-13 16:07:31,711:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-13 16:07:31,711:INFO:Creating final display dataframe.
2023-06-13 16:07:31,867:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (89, 4)
4        Transformed data shape                    (89, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (13, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       288a
2023-06-13 16:07:32,012:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:32,013:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:32,141:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:32,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-13 16:07:32,142:INFO:setup() successfully completed in 2.33s...............
2023-06-13 16:07:32,154:INFO:Initializing compare_models()
2023-06-13 16:07:32,155:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-13 16:07:32,155:INFO:Checking exceptions
2023-06-13 16:07:32,160:INFO:Preparing display monitor
2023-06-13 16:07:32,224:INFO:Initializing Linear Regression
2023-06-13 16:07:32,224:INFO:Total runtime is 0.0 minutes
2023-06-13 16:07:32,233:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:32,233:INFO:Initializing create_model()
2023-06-13 16:07:32,233:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:32,234:INFO:Checking exceptions
2023-06-13 16:07:32,234:INFO:Importing libraries
2023-06-13 16:07:32,234:INFO:Copying training dataset
2023-06-13 16:07:32,243:INFO:Defining folds
2023-06-13 16:07:32,243:INFO:Declaring metric variables
2023-06-13 16:07:32,249:INFO:Importing untrained model
2023-06-13 16:07:32,259:INFO:Linear Regression Imported successfully
2023-06-13 16:07:32,274:INFO:Starting cross validation
2023-06-13 16:07:32,372:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:47,012:INFO:Calculating mean and std
2023-06-13 16:07:47,014:INFO:Creating metrics dataframe
2023-06-13 16:07:47,164:INFO:Uploading results into container
2023-06-13 16:07:47,165:INFO:Uploading model into container now
2023-06-13 16:07:47,166:INFO:_master_model_container: 1
2023-06-13 16:07:47,166:INFO:_display_container: 2
2023-06-13 16:07:47,167:INFO:LinearRegression(n_jobs=-1)
2023-06-13 16:07:47,167:INFO:create_model() successfully completed......................................
2023-06-13 16:07:47,253:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:47,254:INFO:Creating metrics dataframe
2023-06-13 16:07:47,265:INFO:Initializing Lasso Regression
2023-06-13 16:07:47,266:INFO:Total runtime is 0.25068962574005127 minutes
2023-06-13 16:07:47,271:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:47,272:INFO:Initializing create_model()
2023-06-13 16:07:47,272:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:47,272:INFO:Checking exceptions
2023-06-13 16:07:47,273:INFO:Importing libraries
2023-06-13 16:07:47,273:INFO:Copying training dataset
2023-06-13 16:07:47,283:INFO:Defining folds
2023-06-13 16:07:47,284:INFO:Declaring metric variables
2023-06-13 16:07:47,294:INFO:Importing untrained model
2023-06-13 16:07:47,299:INFO:Lasso Regression Imported successfully
2023-06-13 16:07:47,310:INFO:Starting cross validation
2023-06-13 16:07:47,312:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:51,874:INFO:Calculating mean and std
2023-06-13 16:07:51,878:INFO:Creating metrics dataframe
2023-06-13 16:07:52,071:INFO:Uploading results into container
2023-06-13 16:07:52,072:INFO:Uploading model into container now
2023-06-13 16:07:52,073:INFO:_master_model_container: 2
2023-06-13 16:07:52,073:INFO:_display_container: 2
2023-06-13 16:07:52,074:INFO:Lasso(random_state=123)
2023-06-13 16:07:52,074:INFO:create_model() successfully completed......................................
2023-06-13 16:07:52,170:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:52,171:INFO:Creating metrics dataframe
2023-06-13 16:07:52,181:INFO:Initializing Ridge Regression
2023-06-13 16:07:52,181:INFO:Total runtime is 0.3326166272163391 minutes
2023-06-13 16:07:52,186:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:52,187:INFO:Initializing create_model()
2023-06-13 16:07:52,187:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:52,187:INFO:Checking exceptions
2023-06-13 16:07:52,187:INFO:Importing libraries
2023-06-13 16:07:52,188:INFO:Copying training dataset
2023-06-13 16:07:52,197:INFO:Defining folds
2023-06-13 16:07:52,197:INFO:Declaring metric variables
2023-06-13 16:07:52,205:INFO:Importing untrained model
2023-06-13 16:07:52,211:INFO:Ridge Regression Imported successfully
2023-06-13 16:07:52,242:INFO:Starting cross validation
2023-06-13 16:07:52,243:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:52,736:INFO:Calculating mean and std
2023-06-13 16:07:52,738:INFO:Creating metrics dataframe
2023-06-13 16:07:52,885:INFO:Uploading results into container
2023-06-13 16:07:52,886:INFO:Uploading model into container now
2023-06-13 16:07:52,887:INFO:_master_model_container: 3
2023-06-13 16:07:52,887:INFO:_display_container: 2
2023-06-13 16:07:52,887:INFO:Ridge(random_state=123)
2023-06-13 16:07:52,887:INFO:create_model() successfully completed......................................
2023-06-13 16:07:52,973:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:52,974:INFO:Creating metrics dataframe
2023-06-13 16:07:52,986:INFO:Initializing Elastic Net
2023-06-13 16:07:52,987:INFO:Total runtime is 0.3460496505101522 minutes
2023-06-13 16:07:52,991:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:52,992:INFO:Initializing create_model()
2023-06-13 16:07:52,992:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:52,992:INFO:Checking exceptions
2023-06-13 16:07:52,993:INFO:Importing libraries
2023-06-13 16:07:52,993:INFO:Copying training dataset
2023-06-13 16:07:53,002:INFO:Defining folds
2023-06-13 16:07:53,004:INFO:Declaring metric variables
2023-06-13 16:07:53,010:INFO:Importing untrained model
2023-06-13 16:07:53,015:INFO:Elastic Net Imported successfully
2023-06-13 16:07:53,026:INFO:Starting cross validation
2023-06-13 16:07:53,027:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:53,516:INFO:Calculating mean and std
2023-06-13 16:07:53,518:INFO:Creating metrics dataframe
2023-06-13 16:07:53,665:INFO:Uploading results into container
2023-06-13 16:07:53,666:INFO:Uploading model into container now
2023-06-13 16:07:53,668:INFO:_master_model_container: 4
2023-06-13 16:07:53,668:INFO:_display_container: 2
2023-06-13 16:07:53,669:INFO:ElasticNet(random_state=123)
2023-06-13 16:07:53,670:INFO:create_model() successfully completed......................................
2023-06-13 16:07:53,759:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:53,760:INFO:Creating metrics dataframe
2023-06-13 16:07:53,780:INFO:Initializing Least Angle Regression
2023-06-13 16:07:53,780:INFO:Total runtime is 0.359266463915507 minutes
2023-06-13 16:07:53,794:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:53,795:INFO:Initializing create_model()
2023-06-13 16:07:53,796:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:53,796:INFO:Checking exceptions
2023-06-13 16:07:53,797:INFO:Importing libraries
2023-06-13 16:07:53,797:INFO:Copying training dataset
2023-06-13 16:07:53,809:INFO:Defining folds
2023-06-13 16:07:53,810:INFO:Declaring metric variables
2023-06-13 16:07:53,817:INFO:Importing untrained model
2023-06-13 16:07:53,827:INFO:Least Angle Regression Imported successfully
2023-06-13 16:07:53,841:INFO:Starting cross validation
2023-06-13 16:07:53,844:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:54,000:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:54,019:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:54,024:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:54,049:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.196e-07, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-13 16:07:54,050:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.598e-07, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-13 16:07:54,121:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=1.203e-03, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-13 16:07:54,122:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=6.013e-04, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-13 16:07:54,495:INFO:Calculating mean and std
2023-06-13 16:07:54,497:INFO:Creating metrics dataframe
2023-06-13 16:07:54,701:INFO:Uploading results into container
2023-06-13 16:07:54,703:INFO:Uploading model into container now
2023-06-13 16:07:54,703:INFO:_master_model_container: 5
2023-06-13 16:07:54,703:INFO:_display_container: 2
2023-06-13 16:07:54,704:INFO:Lars(random_state=123)
2023-06-13 16:07:54,704:INFO:create_model() successfully completed......................................
2023-06-13 16:07:54,812:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:54,812:INFO:Creating metrics dataframe
2023-06-13 16:07:54,832:INFO:Initializing Lasso Least Angle Regression
2023-06-13 16:07:54,832:INFO:Total runtime is 0.37679987748463944 minutes
2023-06-13 16:07:54,844:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:54,845:INFO:Initializing create_model()
2023-06-13 16:07:54,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:54,845:INFO:Checking exceptions
2023-06-13 16:07:54,845:INFO:Importing libraries
2023-06-13 16:07:54,845:INFO:Copying training dataset
2023-06-13 16:07:54,857:INFO:Defining folds
2023-06-13 16:07:54,857:INFO:Declaring metric variables
2023-06-13 16:07:54,868:INFO:Importing untrained model
2023-06-13 16:07:54,879:INFO:Lasso Least Angle Regression Imported successfully
2023-06-13 16:07:54,892:INFO:Starting cross validation
2023-06-13 16:07:54,894:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:55,038:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 16:07:55,049:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 16:07:55,064:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-13 16:07:55,472:INFO:Calculating mean and std
2023-06-13 16:07:55,476:INFO:Creating metrics dataframe
2023-06-13 16:07:55,665:INFO:Uploading results into container
2023-06-13 16:07:55,666:INFO:Uploading model into container now
2023-06-13 16:07:55,667:INFO:_master_model_container: 6
2023-06-13 16:07:55,667:INFO:_display_container: 2
2023-06-13 16:07:55,668:INFO:LassoLars(random_state=123)
2023-06-13 16:07:55,670:INFO:create_model() successfully completed......................................
2023-06-13 16:07:55,763:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:55,763:INFO:Creating metrics dataframe
2023-06-13 16:07:55,778:INFO:Initializing Orthogonal Matching Pursuit
2023-06-13 16:07:55,778:INFO:Total runtime is 0.3925666491190592 minutes
2023-06-13 16:07:55,785:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:55,786:INFO:Initializing create_model()
2023-06-13 16:07:55,786:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:55,786:INFO:Checking exceptions
2023-06-13 16:07:55,787:INFO:Importing libraries
2023-06-13 16:07:55,787:INFO:Copying training dataset
2023-06-13 16:07:55,799:INFO:Defining folds
2023-06-13 16:07:55,799:INFO:Declaring metric variables
2023-06-13 16:07:55,809:INFO:Importing untrained model
2023-06-13 16:07:55,817:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-13 16:07:55,831:INFO:Starting cross validation
2023-06-13 16:07:55,833:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:55,979:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:56,004:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:56,018:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-13 16:07:56,438:INFO:Calculating mean and std
2023-06-13 16:07:56,442:INFO:Creating metrics dataframe
2023-06-13 16:07:56,631:INFO:Uploading results into container
2023-06-13 16:07:56,632:INFO:Uploading model into container now
2023-06-13 16:07:56,633:INFO:_master_model_container: 7
2023-06-13 16:07:56,633:INFO:_display_container: 2
2023-06-13 16:07:56,633:INFO:OrthogonalMatchingPursuit()
2023-06-13 16:07:56,633:INFO:create_model() successfully completed......................................
2023-06-13 16:07:56,740:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:56,741:INFO:Creating metrics dataframe
2023-06-13 16:07:56,759:INFO:Initializing Bayesian Ridge
2023-06-13 16:07:56,760:INFO:Total runtime is 0.40893344481786087 minutes
2023-06-13 16:07:56,767:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:56,768:INFO:Initializing create_model()
2023-06-13 16:07:56,769:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:56,769:INFO:Checking exceptions
2023-06-13 16:07:56,769:INFO:Importing libraries
2023-06-13 16:07:56,769:INFO:Copying training dataset
2023-06-13 16:07:56,780:INFO:Defining folds
2023-06-13 16:07:56,780:INFO:Declaring metric variables
2023-06-13 16:07:56,787:INFO:Importing untrained model
2023-06-13 16:07:56,794:INFO:Bayesian Ridge Imported successfully
2023-06-13 16:07:56,809:INFO:Starting cross validation
2023-06-13 16:07:56,811:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:57,446:INFO:Calculating mean and std
2023-06-13 16:07:57,450:INFO:Creating metrics dataframe
2023-06-13 16:07:57,649:INFO:Uploading results into container
2023-06-13 16:07:57,650:INFO:Uploading model into container now
2023-06-13 16:07:57,651:INFO:_master_model_container: 8
2023-06-13 16:07:57,652:INFO:_display_container: 2
2023-06-13 16:07:57,652:INFO:BayesianRidge()
2023-06-13 16:07:57,652:INFO:create_model() successfully completed......................................
2023-06-13 16:07:57,758:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:57,758:INFO:Creating metrics dataframe
2023-06-13 16:07:57,785:INFO:Initializing Passive Aggressive Regressor
2023-06-13 16:07:57,785:INFO:Total runtime is 0.4260169625282287 minutes
2023-06-13 16:07:57,792:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:57,793:INFO:Initializing create_model()
2023-06-13 16:07:57,793:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:57,794:INFO:Checking exceptions
2023-06-13 16:07:57,794:INFO:Importing libraries
2023-06-13 16:07:57,794:INFO:Copying training dataset
2023-06-13 16:07:57,806:INFO:Defining folds
2023-06-13 16:07:57,806:INFO:Declaring metric variables
2023-06-13 16:07:57,814:INFO:Importing untrained model
2023-06-13 16:07:57,820:INFO:Passive Aggressive Regressor Imported successfully
2023-06-13 16:07:57,841:INFO:Starting cross validation
2023-06-13 16:07:57,843:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:58,449:INFO:Calculating mean and std
2023-06-13 16:07:58,452:INFO:Creating metrics dataframe
2023-06-13 16:07:58,640:INFO:Uploading results into container
2023-06-13 16:07:58,641:INFO:Uploading model into container now
2023-06-13 16:07:58,642:INFO:_master_model_container: 9
2023-06-13 16:07:58,642:INFO:_display_container: 2
2023-06-13 16:07:58,643:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-13 16:07:58,643:INFO:create_model() successfully completed......................................
2023-06-13 16:07:58,745:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:58,745:INFO:Creating metrics dataframe
2023-06-13 16:07:58,764:INFO:Initializing Huber Regressor
2023-06-13 16:07:58,765:INFO:Total runtime is 0.44235037565231317 minutes
2023-06-13 16:07:58,773:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:58,774:INFO:Initializing create_model()
2023-06-13 16:07:58,774:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:58,774:INFO:Checking exceptions
2023-06-13 16:07:58,774:INFO:Importing libraries
2023-06-13 16:07:58,775:INFO:Copying training dataset
2023-06-13 16:07:58,784:INFO:Defining folds
2023-06-13 16:07:58,784:INFO:Declaring metric variables
2023-06-13 16:07:58,792:INFO:Importing untrained model
2023-06-13 16:07:58,803:INFO:Huber Regressor Imported successfully
2023-06-13 16:07:58,821:INFO:Starting cross validation
2023-06-13 16:07:58,823:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:07:59,426:INFO:Calculating mean and std
2023-06-13 16:07:59,427:INFO:Creating metrics dataframe
2023-06-13 16:07:59,582:INFO:Uploading results into container
2023-06-13 16:07:59,582:INFO:Uploading model into container now
2023-06-13 16:07:59,583:INFO:_master_model_container: 10
2023-06-13 16:07:59,583:INFO:_display_container: 2
2023-06-13 16:07:59,584:INFO:HuberRegressor()
2023-06-13 16:07:59,584:INFO:create_model() successfully completed......................................
2023-06-13 16:07:59,671:INFO:SubProcess create_model() end ==================================
2023-06-13 16:07:59,672:INFO:Creating metrics dataframe
2023-06-13 16:07:59,685:INFO:Initializing K Neighbors Regressor
2023-06-13 16:07:59,686:INFO:Total runtime is 0.4577004750569661 minutes
2023-06-13 16:07:59,690:INFO:SubProcess create_model() called ==================================
2023-06-13 16:07:59,691:INFO:Initializing create_model()
2023-06-13 16:07:59,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:07:59,691:INFO:Checking exceptions
2023-06-13 16:07:59,692:INFO:Importing libraries
2023-06-13 16:07:59,692:INFO:Copying training dataset
2023-06-13 16:07:59,699:INFO:Defining folds
2023-06-13 16:07:59,699:INFO:Declaring metric variables
2023-06-13 16:07:59,708:INFO:Importing untrained model
2023-06-13 16:07:59,715:INFO:K Neighbors Regressor Imported successfully
2023-06-13 16:07:59,727:INFO:Starting cross validation
2023-06-13 16:07:59,728:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:00,280:INFO:Calculating mean and std
2023-06-13 16:08:00,282:INFO:Creating metrics dataframe
2023-06-13 16:08:00,430:INFO:Uploading results into container
2023-06-13 16:08:00,431:INFO:Uploading model into container now
2023-06-13 16:08:00,432:INFO:_master_model_container: 11
2023-06-13 16:08:00,432:INFO:_display_container: 2
2023-06-13 16:08:00,433:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-13 16:08:00,433:INFO:create_model() successfully completed......................................
2023-06-13 16:08:00,520:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:00,520:INFO:Creating metrics dataframe
2023-06-13 16:08:00,532:INFO:Initializing Decision Tree Regressor
2023-06-13 16:08:00,533:INFO:Total runtime is 0.4718111117680867 minutes
2023-06-13 16:08:00,537:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:00,538:INFO:Initializing create_model()
2023-06-13 16:08:00,538:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:00,539:INFO:Checking exceptions
2023-06-13 16:08:00,539:INFO:Importing libraries
2023-06-13 16:08:00,539:INFO:Copying training dataset
2023-06-13 16:08:00,547:INFO:Defining folds
2023-06-13 16:08:00,547:INFO:Declaring metric variables
2023-06-13 16:08:00,557:INFO:Importing untrained model
2023-06-13 16:08:00,562:INFO:Decision Tree Regressor Imported successfully
2023-06-13 16:08:00,575:INFO:Starting cross validation
2023-06-13 16:08:00,577:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:01,083:INFO:Calculating mean and std
2023-06-13 16:08:01,085:INFO:Creating metrics dataframe
2023-06-13 16:08:01,241:INFO:Uploading results into container
2023-06-13 16:08:01,242:INFO:Uploading model into container now
2023-06-13 16:08:01,242:INFO:_master_model_container: 12
2023-06-13 16:08:01,242:INFO:_display_container: 2
2023-06-13 16:08:01,243:INFO:DecisionTreeRegressor(random_state=123)
2023-06-13 16:08:01,243:INFO:create_model() successfully completed......................................
2023-06-13 16:08:01,329:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:01,329:INFO:Creating metrics dataframe
2023-06-13 16:08:01,343:INFO:Initializing Random Forest Regressor
2023-06-13 16:08:01,343:INFO:Total runtime is 0.4853132804234822 minutes
2023-06-13 16:08:01,347:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:01,348:INFO:Initializing create_model()
2023-06-13 16:08:01,349:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:01,349:INFO:Checking exceptions
2023-06-13 16:08:01,349:INFO:Importing libraries
2023-06-13 16:08:01,349:INFO:Copying training dataset
2023-06-13 16:08:01,357:INFO:Defining folds
2023-06-13 16:08:01,357:INFO:Declaring metric variables
2023-06-13 16:08:01,366:INFO:Importing untrained model
2023-06-13 16:08:01,386:INFO:Random Forest Regressor Imported successfully
2023-06-13 16:08:01,402:INFO:Starting cross validation
2023-06-13 16:08:01,405:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:02,368:INFO:Calculating mean and std
2023-06-13 16:08:02,372:INFO:Creating metrics dataframe
2023-06-13 16:08:02,533:INFO:Uploading results into container
2023-06-13 16:08:02,534:INFO:Uploading model into container now
2023-06-13 16:08:02,535:INFO:_master_model_container: 13
2023-06-13 16:08:02,535:INFO:_display_container: 2
2023-06-13 16:08:02,536:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 16:08:02,536:INFO:create_model() successfully completed......................................
2023-06-13 16:08:02,622:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:02,622:INFO:Creating metrics dataframe
2023-06-13 16:08:02,639:INFO:Initializing Extra Trees Regressor
2023-06-13 16:08:02,639:INFO:Total runtime is 0.5069137016932169 minutes
2023-06-13 16:08:02,643:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:02,643:INFO:Initializing create_model()
2023-06-13 16:08:02,644:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:02,644:INFO:Checking exceptions
2023-06-13 16:08:02,644:INFO:Importing libraries
2023-06-13 16:08:02,644:INFO:Copying training dataset
2023-06-13 16:08:02,653:INFO:Defining folds
2023-06-13 16:08:02,653:INFO:Declaring metric variables
2023-06-13 16:08:02,662:INFO:Importing untrained model
2023-06-13 16:08:02,668:INFO:Extra Trees Regressor Imported successfully
2023-06-13 16:08:02,678:INFO:Starting cross validation
2023-06-13 16:08:02,680:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:03,853:INFO:Calculating mean and std
2023-06-13 16:08:03,856:INFO:Creating metrics dataframe
2023-06-13 16:08:04,083:INFO:Uploading results into container
2023-06-13 16:08:04,085:INFO:Uploading model into container now
2023-06-13 16:08:04,087:INFO:_master_model_container: 14
2023-06-13 16:08:04,087:INFO:_display_container: 2
2023-06-13 16:08:04,088:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-13 16:08:04,088:INFO:create_model() successfully completed......................................
2023-06-13 16:08:04,209:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:04,209:INFO:Creating metrics dataframe
2023-06-13 16:08:04,235:INFO:Initializing AdaBoost Regressor
2023-06-13 16:08:04,236:INFO:Total runtime is 0.533530592918396 minutes
2023-06-13 16:08:04,244:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:04,244:INFO:Initializing create_model()
2023-06-13 16:08:04,245:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:04,245:INFO:Checking exceptions
2023-06-13 16:08:04,246:INFO:Importing libraries
2023-06-13 16:08:04,246:INFO:Copying training dataset
2023-06-13 16:08:04,264:INFO:Defining folds
2023-06-13 16:08:04,265:INFO:Declaring metric variables
2023-06-13 16:08:04,273:INFO:Importing untrained model
2023-06-13 16:08:04,281:INFO:AdaBoost Regressor Imported successfully
2023-06-13 16:08:04,298:INFO:Starting cross validation
2023-06-13 16:08:04,302:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:05,290:INFO:Calculating mean and std
2023-06-13 16:08:05,293:INFO:Creating metrics dataframe
2023-06-13 16:08:05,556:INFO:Uploading results into container
2023-06-13 16:08:05,557:INFO:Uploading model into container now
2023-06-13 16:08:05,558:INFO:_master_model_container: 15
2023-06-13 16:08:05,558:INFO:_display_container: 2
2023-06-13 16:08:05,559:INFO:AdaBoostRegressor(random_state=123)
2023-06-13 16:08:05,559:INFO:create_model() successfully completed......................................
2023-06-13 16:08:05,681:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:05,681:INFO:Creating metrics dataframe
2023-06-13 16:08:05,707:INFO:Initializing Gradient Boosting Regressor
2023-06-13 16:08:05,707:INFO:Total runtime is 0.5580474416414897 minutes
2023-06-13 16:08:05,716:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:05,718:INFO:Initializing create_model()
2023-06-13 16:08:05,718:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:05,718:INFO:Checking exceptions
2023-06-13 16:08:05,719:INFO:Importing libraries
2023-06-13 16:08:05,719:INFO:Copying training dataset
2023-06-13 16:08:05,736:INFO:Defining folds
2023-06-13 16:08:05,736:INFO:Declaring metric variables
2023-06-13 16:08:05,744:INFO:Importing untrained model
2023-06-13 16:08:05,753:INFO:Gradient Boosting Regressor Imported successfully
2023-06-13 16:08:05,772:INFO:Starting cross validation
2023-06-13 16:08:05,774:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:06,640:INFO:Calculating mean and std
2023-06-13 16:08:06,643:INFO:Creating metrics dataframe
2023-06-13 16:08:06,890:INFO:Uploading results into container
2023-06-13 16:08:06,892:INFO:Uploading model into container now
2023-06-13 16:08:06,897:INFO:_master_model_container: 16
2023-06-13 16:08:06,897:INFO:_display_container: 2
2023-06-13 16:08:06,897:INFO:GradientBoostingRegressor(random_state=123)
2023-06-13 16:08:06,898:INFO:create_model() successfully completed......................................
2023-06-13 16:08:07,014:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:07,014:INFO:Creating metrics dataframe
2023-06-13 16:08:07,037:INFO:Initializing Light Gradient Boosting Machine
2023-06-13 16:08:07,037:INFO:Total runtime is 0.580214254061381 minutes
2023-06-13 16:08:07,044:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:07,045:INFO:Initializing create_model()
2023-06-13 16:08:07,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:07,045:INFO:Checking exceptions
2023-06-13 16:08:07,046:INFO:Importing libraries
2023-06-13 16:08:07,046:INFO:Copying training dataset
2023-06-13 16:08:07,060:INFO:Defining folds
2023-06-13 16:08:07,060:INFO:Declaring metric variables
2023-06-13 16:08:07,068:INFO:Importing untrained model
2023-06-13 16:08:07,076:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-13 16:08:07,091:INFO:Starting cross validation
2023-06-13 16:08:07,094:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:10,064:INFO:Calculating mean and std
2023-06-13 16:08:10,069:INFO:Creating metrics dataframe
2023-06-13 16:08:10,332:INFO:Uploading results into container
2023-06-13 16:08:10,333:INFO:Uploading model into container now
2023-06-13 16:08:10,334:INFO:_master_model_container: 17
2023-06-13 16:08:10,334:INFO:_display_container: 2
2023-06-13 16:08:10,335:INFO:LGBMRegressor(random_state=123)
2023-06-13 16:08:10,335:INFO:create_model() successfully completed......................................
2023-06-13 16:08:10,458:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:10,459:INFO:Creating metrics dataframe
2023-06-13 16:08:10,488:INFO:Initializing Dummy Regressor
2023-06-13 16:08:10,488:INFO:Total runtime is 0.637731417020162 minutes
2023-06-13 16:08:10,496:INFO:SubProcess create_model() called ==================================
2023-06-13 16:08:10,496:INFO:Initializing create_model()
2023-06-13 16:08:10,497:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000271B8DFBD30>, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:10,497:INFO:Checking exceptions
2023-06-13 16:08:10,497:INFO:Importing libraries
2023-06-13 16:08:10,498:INFO:Copying training dataset
2023-06-13 16:08:10,510:INFO:Defining folds
2023-06-13 16:08:10,511:INFO:Declaring metric variables
2023-06-13 16:08:10,522:INFO:Importing untrained model
2023-06-13 16:08:10,530:INFO:Dummy Regressor Imported successfully
2023-06-13 16:08:10,545:INFO:Starting cross validation
2023-06-13 16:08:10,549:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-13 16:08:11,204:INFO:Calculating mean and std
2023-06-13 16:08:11,208:INFO:Creating metrics dataframe
2023-06-13 16:08:11,417:INFO:Uploading results into container
2023-06-13 16:08:11,418:INFO:Uploading model into container now
2023-06-13 16:08:11,419:INFO:_master_model_container: 18
2023-06-13 16:08:11,420:INFO:_display_container: 2
2023-06-13 16:08:11,420:INFO:DummyRegressor()
2023-06-13 16:08:11,420:INFO:create_model() successfully completed......................................
2023-06-13 16:08:11,516:INFO:SubProcess create_model() end ==================================
2023-06-13 16:08:11,516:INFO:Creating metrics dataframe
2023-06-13 16:08:11,554:INFO:Initializing create_model()
2023-06-13 16:08:11,554:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-13 16:08:11,555:INFO:Checking exceptions
2023-06-13 16:08:11,560:INFO:Importing libraries
2023-06-13 16:08:11,560:INFO:Copying training dataset
2023-06-13 16:08:11,571:INFO:Defining folds
2023-06-13 16:08:11,571:INFO:Declaring metric variables
2023-06-13 16:08:11,572:INFO:Importing untrained model
2023-06-13 16:08:11,572:INFO:Declaring custom model
2023-06-13 16:08:11,574:INFO:Random Forest Regressor Imported successfully
2023-06-13 16:08:11,575:INFO:Cross validation set to False
2023-06-13 16:08:11,576:INFO:Fitting Model
2023-06-13 16:08:12,162:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 16:08:12,162:INFO:create_model() successfully completed......................................
2023-06-13 16:08:12,334:INFO:_master_model_container: 18
2023-06-13 16:08:12,334:INFO:_display_container: 2
2023-06-13 16:08:12,335:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-13 16:08:12,336:INFO:compare_models() successfully completed......................................
2023-06-13 16:08:12,459:INFO:Initializing predict_model()
2023-06-13 16:08:12,459:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000271B8A67D00>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000271BE948DC0>)
2023-06-13 16:08:12,459:INFO:Checking exceptions
2023-06-13 16:08:12,460:INFO:Preloading libraries
2023-06-13 16:08:12,464:INFO:Set up data.
2023-06-13 16:08:12,471:INFO:Set up index.
2023-06-14 14:30:07,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 14:30:07,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 14:30:07,217:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 14:30:07,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 14:30:19,282:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 14:30:21,524:INFO:PyCaret RegressionExperiment
2023-06-14 14:30:21,524:INFO:Logging name: reg-default-name
2023-06-14 14:30:21,524:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 14:30:21,524:INFO:version 3.0.2
2023-06-14 14:30:21,524:INFO:Initializing setup()
2023-06-14 14:30:21,524:INFO:self.USI: ce7f
2023-06-14 14:30:21,524:INFO:self._variable_keys: {'USI', 'X_test', 'fold_groups_param', 'n_jobs_param', 'memory', 'transform_target_param', 'fold_shuffle_param', 'gpu_n_jobs_param', 'seed', 'logging_param', 'y_test', '_available_plots', 'data', 'exp_id', 'X_train', 'y', 'X', 'exp_name_log', 'log_plots_param', 'gpu_param', 'idx', 'target_param', 'y_train', 'html_param', 'pipeline', 'fold_generator', '_ml_usecase'}
2023-06-14 14:30:21,524:INFO:Checking environment
2023-06-14 14:30:21,524:INFO:python_version: 3.9.13
2023-06-14 14:30:21,524:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-14 14:30:21,525:INFO:machine: AMD64
2023-06-14 14:30:21,525:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 14:30:21,525:INFO:Memory: svmem(total=8285085696, available=709988352, percent=91.4, used=7575097344, free=709988352)
2023-06-14 14:30:21,525:INFO:Physical Core: 2
2023-06-14 14:30:21,525:INFO:Logical Core: 4
2023-06-14 14:30:21,525:INFO:Checking libraries
2023-06-14 14:30:21,525:INFO:System:
2023-06-14 14:30:21,525:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-14 14:30:21,525:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-14 14:30:21,525:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 14:30:21,525:INFO:PyCaret required dependencies:
2023-06-14 14:30:21,525:INFO:                 pip: 22.2.2
2023-06-14 14:30:21,526:INFO:          setuptools: 63.4.1
2023-06-14 14:30:21,526:INFO:             pycaret: 3.0.2
2023-06-14 14:30:21,526:INFO:             IPython: 7.31.1
2023-06-14 14:30:21,526:INFO:          ipywidgets: 7.6.5
2023-06-14 14:30:21,526:INFO:                tqdm: 4.64.1
2023-06-14 14:30:21,526:INFO:               numpy: 1.21.5
2023-06-14 14:30:21,526:INFO:              pandas: 1.4.4
2023-06-14 14:30:21,526:INFO:              jinja2: 2.11.3
2023-06-14 14:30:21,526:INFO:               scipy: 1.9.1
2023-06-14 14:30:21,526:INFO:              joblib: 1.1.0
2023-06-14 14:30:21,526:INFO:             sklearn: 1.0.2
2023-06-14 14:30:21,526:INFO:                pyod: 1.0.9
2023-06-14 14:30:21,526:INFO:            imblearn: 0.10.1
2023-06-14 14:30:21,526:INFO:   category_encoders: 2.6.1
2023-06-14 14:30:21,526:INFO:            lightgbm: 3.3.5
2023-06-14 14:30:21,526:INFO:               numba: 0.55.1
2023-06-14 14:30:21,526:INFO:            requests: 2.28.1
2023-06-14 14:30:21,526:INFO:          matplotlib: 3.5.2
2023-06-14 14:30:21,527:INFO:          scikitplot: 0.3.7
2023-06-14 14:30:21,527:INFO:         yellowbrick: 1.5
2023-06-14 14:30:21,527:INFO:              plotly: 5.9.0
2023-06-14 14:30:21,527:INFO:             kaleido: 0.2.1
2023-06-14 14:30:21,527:INFO:         statsmodels: 0.13.2
2023-06-14 14:30:21,527:INFO:              sktime: 0.17.0
2023-06-14 14:30:21,527:INFO:               tbats: 1.1.3
2023-06-14 14:30:21,527:INFO:            pmdarima: 2.0.3
2023-06-14 14:30:21,527:INFO:              psutil: 5.9.0
2023-06-14 14:30:21,527:INFO:PyCaret optional dependencies:
2023-06-14 14:30:21,572:INFO:                shap: Not installed
2023-06-14 14:30:21,572:INFO:           interpret: Not installed
2023-06-14 14:30:21,572:INFO:                umap: Not installed
2023-06-14 14:30:21,572:INFO:    pandas_profiling: Not installed
2023-06-14 14:30:21,572:INFO:  explainerdashboard: Not installed
2023-06-14 14:30:21,572:INFO:             autoviz: Not installed
2023-06-14 14:30:21,572:INFO:           fairlearn: Not installed
2023-06-14 14:30:21,572:INFO:             xgboost: Not installed
2023-06-14 14:30:21,572:INFO:            catboost: Not installed
2023-06-14 14:30:21,572:INFO:              kmodes: Not installed
2023-06-14 14:30:21,572:INFO:             mlxtend: Not installed
2023-06-14 14:30:21,572:INFO:       statsforecast: Not installed
2023-06-14 14:30:21,572:INFO:        tune_sklearn: Not installed
2023-06-14 14:30:21,572:INFO:                 ray: Not installed
2023-06-14 14:30:21,572:INFO:            hyperopt: Not installed
2023-06-14 14:30:21,573:INFO:              optuna: Not installed
2023-06-14 14:30:21,573:INFO:               skopt: Not installed
2023-06-14 14:30:21,573:INFO:              mlflow: Not installed
2023-06-14 14:30:21,573:INFO:              gradio: Not installed
2023-06-14 14:30:21,573:INFO:             fastapi: Not installed
2023-06-14 14:30:21,573:INFO:             uvicorn: Not installed
2023-06-14 14:30:21,573:INFO:              m2cgen: Not installed
2023-06-14 14:30:21,573:INFO:           evidently: Not installed
2023-06-14 14:30:21,573:INFO:               fugue: Not installed
2023-06-14 14:30:21,573:INFO:           streamlit: 1.22.0
2023-06-14 14:30:21,573:INFO:             prophet: Not installed
2023-06-14 14:30:21,573:INFO:None
2023-06-14 14:30:21,574:INFO:Set up data.
2023-06-14 14:30:21,583:INFO:Set up train/test split.
2023-06-14 14:30:21,583:INFO:Set up data.
2023-06-14 14:30:21,587:INFO:Set up index.
2023-06-14 14:30:21,588:INFO:Set up folding strategy.
2023-06-14 14:30:21,588:INFO:Assigning column types.
2023-06-14 14:30:21,593:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 14:30:21,593:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,599:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,604:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,742:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:21,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:21,975:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,980:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:21,985:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,053:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,106:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 14:30:22,112:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,117:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,184:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,235:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,242:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,247:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,315:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,369:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,371:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 14:30:22,384:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,450:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,511:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,513:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,529:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,596:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,649:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,650:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,651:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 14:30:22,734:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,787:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,864:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,924:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 14:30:22,925:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:22,926:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 14:30:23,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:23,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,164:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 14:30:23,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,229:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 14:30:23,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:23,546:INFO:Preparing preprocessing pipeline...
2023-06-14 14:30:23,547:INFO:Set up target transformation.
2023-06-14 14:30:23,547:INFO:Set up date feature engineering.
2023-06-14 14:30:23,547:INFO:Set up simple imputation.
2023-06-14 14:30:23,635:INFO:Finished creating preprocessing pipeline.
2023-06-14 14:30:23,659:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-14 14:30:23,659:INFO:Creating final display dataframe.
2023-06-14 14:30:23,850:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (89, 4)
4        Transformed data shape                    (89, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (13, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       ce7f
2023-06-14 14:30:24,017:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:24,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:24,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:24,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 14:30:24,158:INFO:setup() successfully completed in 2.92s...............
2023-06-14 14:30:24,173:INFO:Initializing compare_models()
2023-06-14 14:30:24,173:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-14 14:30:24,174:INFO:Checking exceptions
2023-06-14 14:30:24,180:INFO:Preparing display monitor
2023-06-14 14:30:24,242:INFO:Initializing Linear Regression
2023-06-14 14:30:24,242:INFO:Total runtime is 0.0 minutes
2023-06-14 14:30:24,248:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:24,249:INFO:Initializing create_model()
2023-06-14 14:30:24,250:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:24,250:INFO:Checking exceptions
2023-06-14 14:30:24,250:INFO:Importing libraries
2023-06-14 14:30:24,250:INFO:Copying training dataset
2023-06-14 14:30:24,259:INFO:Defining folds
2023-06-14 14:30:24,259:INFO:Declaring metric variables
2023-06-14 14:30:24,266:INFO:Importing untrained model
2023-06-14 14:30:24,287:INFO:Linear Regression Imported successfully
2023-06-14 14:30:24,309:INFO:Starting cross validation
2023-06-14 14:30:24,495:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:43,639:INFO:Calculating mean and std
2023-06-14 14:30:43,641:INFO:Creating metrics dataframe
2023-06-14 14:30:43,837:INFO:Uploading results into container
2023-06-14 14:30:43,838:INFO:Uploading model into container now
2023-06-14 14:30:43,839:INFO:_master_model_container: 1
2023-06-14 14:30:43,839:INFO:_display_container: 2
2023-06-14 14:30:43,840:INFO:LinearRegression(n_jobs=-1)
2023-06-14 14:30:43,840:INFO:create_model() successfully completed......................................
2023-06-14 14:30:43,940:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:43,940:INFO:Creating metrics dataframe
2023-06-14 14:30:43,953:INFO:Initializing Lasso Regression
2023-06-14 14:30:43,953:INFO:Total runtime is 0.3285223881403605 minutes
2023-06-14 14:30:43,959:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:43,959:INFO:Initializing create_model()
2023-06-14 14:30:43,959:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:43,959:INFO:Checking exceptions
2023-06-14 14:30:43,959:INFO:Importing libraries
2023-06-14 14:30:43,959:INFO:Copying training dataset
2023-06-14 14:30:43,970:INFO:Defining folds
2023-06-14 14:30:43,970:INFO:Declaring metric variables
2023-06-14 14:30:43,981:INFO:Importing untrained model
2023-06-14 14:30:43,990:INFO:Lasso Regression Imported successfully
2023-06-14 14:30:44,008:INFO:Starting cross validation
2023-06-14 14:30:44,011:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:50,655:INFO:Calculating mean and std
2023-06-14 14:30:50,664:INFO:Creating metrics dataframe
2023-06-14 14:30:50,913:INFO:Uploading results into container
2023-06-14 14:30:50,915:INFO:Uploading model into container now
2023-06-14 14:30:50,916:INFO:_master_model_container: 2
2023-06-14 14:30:50,917:INFO:_display_container: 2
2023-06-14 14:30:50,917:INFO:Lasso(random_state=123)
2023-06-14 14:30:50,918:INFO:create_model() successfully completed......................................
2023-06-14 14:30:51,034:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:51,034:INFO:Creating metrics dataframe
2023-06-14 14:30:51,046:INFO:Initializing Ridge Regression
2023-06-14 14:30:51,047:INFO:Total runtime is 0.4467541257540385 minutes
2023-06-14 14:30:51,054:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:51,055:INFO:Initializing create_model()
2023-06-14 14:30:51,055:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:51,055:INFO:Checking exceptions
2023-06-14 14:30:51,056:INFO:Importing libraries
2023-06-14 14:30:51,056:INFO:Copying training dataset
2023-06-14 14:30:51,079:INFO:Defining folds
2023-06-14 14:30:51,083:INFO:Declaring metric variables
2023-06-14 14:30:51,094:INFO:Importing untrained model
2023-06-14 14:30:51,106:INFO:Ridge Regression Imported successfully
2023-06-14 14:30:51,126:INFO:Starting cross validation
2023-06-14 14:30:51,130:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:51,775:INFO:Calculating mean and std
2023-06-14 14:30:51,777:INFO:Creating metrics dataframe
2023-06-14 14:30:51,958:INFO:Uploading results into container
2023-06-14 14:30:51,959:INFO:Uploading model into container now
2023-06-14 14:30:51,960:INFO:_master_model_container: 3
2023-06-14 14:30:51,960:INFO:_display_container: 2
2023-06-14 14:30:51,961:INFO:Ridge(random_state=123)
2023-06-14 14:30:51,962:INFO:create_model() successfully completed......................................
2023-06-14 14:30:52,053:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:52,054:INFO:Creating metrics dataframe
2023-06-14 14:30:52,065:INFO:Initializing Elastic Net
2023-06-14 14:30:52,065:INFO:Total runtime is 0.46372103691101074 minutes
2023-06-14 14:30:52,072:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:52,073:INFO:Initializing create_model()
2023-06-14 14:30:52,073:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:52,074:INFO:Checking exceptions
2023-06-14 14:30:52,074:INFO:Importing libraries
2023-06-14 14:30:52,074:INFO:Copying training dataset
2023-06-14 14:30:52,086:INFO:Defining folds
2023-06-14 14:30:52,086:INFO:Declaring metric variables
2023-06-14 14:30:52,092:INFO:Importing untrained model
2023-06-14 14:30:52,099:INFO:Elastic Net Imported successfully
2023-06-14 14:30:52,114:INFO:Starting cross validation
2023-06-14 14:30:52,117:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:52,711:INFO:Calculating mean and std
2023-06-14 14:30:52,713:INFO:Creating metrics dataframe
2023-06-14 14:30:52,890:INFO:Uploading results into container
2023-06-14 14:30:52,891:INFO:Uploading model into container now
2023-06-14 14:30:52,892:INFO:_master_model_container: 4
2023-06-14 14:30:52,892:INFO:_display_container: 2
2023-06-14 14:30:52,893:INFO:ElasticNet(random_state=123)
2023-06-14 14:30:52,895:INFO:create_model() successfully completed......................................
2023-06-14 14:30:52,984:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:52,984:INFO:Creating metrics dataframe
2023-06-14 14:30:52,995:INFO:Initializing Least Angle Regression
2023-06-14 14:30:52,995:INFO:Total runtime is 0.4792212963104248 minutes
2023-06-14 14:30:53,002:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:53,002:INFO:Initializing create_model()
2023-06-14 14:30:53,002:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:53,003:INFO:Checking exceptions
2023-06-14 14:30:53,003:INFO:Importing libraries
2023-06-14 14:30:53,003:INFO:Copying training dataset
2023-06-14 14:30:53,015:INFO:Defining folds
2023-06-14 14:30:53,015:INFO:Declaring metric variables
2023-06-14 14:30:53,025:INFO:Importing untrained model
2023-06-14 14:30:53,034:INFO:Least Angle Regression Imported successfully
2023-06-14 14:30:53,046:INFO:Starting cross validation
2023-06-14 14:30:53,049:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:53,200:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 14:30:53,254:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 14:30:53,382:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.196e-07, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 14:30:53,383:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.598e-07, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 14:30:53,641:INFO:Calculating mean and std
2023-06-14 14:30:53,643:INFO:Creating metrics dataframe
2023-06-14 14:30:53,827:INFO:Uploading results into container
2023-06-14 14:30:53,829:INFO:Uploading model into container now
2023-06-14 14:30:53,829:INFO:_master_model_container: 5
2023-06-14 14:30:53,830:INFO:_display_container: 2
2023-06-14 14:30:53,831:INFO:Lars(random_state=123)
2023-06-14 14:30:53,831:INFO:create_model() successfully completed......................................
2023-06-14 14:30:53,922:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:53,922:INFO:Creating metrics dataframe
2023-06-14 14:30:53,938:INFO:Initializing Lasso Least Angle Regression
2023-06-14 14:30:53,938:INFO:Total runtime is 0.4949380874633789 minutes
2023-06-14 14:30:53,945:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:53,946:INFO:Initializing create_model()
2023-06-14 14:30:53,946:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:53,947:INFO:Checking exceptions
2023-06-14 14:30:53,947:INFO:Importing libraries
2023-06-14 14:30:53,947:INFO:Copying training dataset
2023-06-14 14:30:53,960:INFO:Defining folds
2023-06-14 14:30:53,960:INFO:Declaring metric variables
2023-06-14 14:30:53,974:INFO:Importing untrained model
2023-06-14 14:30:53,983:INFO:Lasso Least Angle Regression Imported successfully
2023-06-14 14:30:53,999:INFO:Starting cross validation
2023-06-14 14:30:54,001:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:54,119:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 14:30:54,127:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 14:30:54,147:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 14:30:54,563:INFO:Calculating mean and std
2023-06-14 14:30:54,565:INFO:Creating metrics dataframe
2023-06-14 14:30:54,747:INFO:Uploading results into container
2023-06-14 14:30:54,748:INFO:Uploading model into container now
2023-06-14 14:30:54,748:INFO:_master_model_container: 6
2023-06-14 14:30:54,748:INFO:_display_container: 2
2023-06-14 14:30:54,749:INFO:LassoLars(random_state=123)
2023-06-14 14:30:54,749:INFO:create_model() successfully completed......................................
2023-06-14 14:30:54,839:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:54,839:INFO:Creating metrics dataframe
2023-06-14 14:30:54,852:INFO:Initializing Orthogonal Matching Pursuit
2023-06-14 14:30:54,852:INFO:Total runtime is 0.5101613442103068 minutes
2023-06-14 14:30:54,859:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:54,859:INFO:Initializing create_model()
2023-06-14 14:30:54,859:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:54,859:INFO:Checking exceptions
2023-06-14 14:30:54,860:INFO:Importing libraries
2023-06-14 14:30:54,860:INFO:Copying training dataset
2023-06-14 14:30:54,874:INFO:Defining folds
2023-06-14 14:30:54,874:INFO:Declaring metric variables
2023-06-14 14:30:54,885:INFO:Importing untrained model
2023-06-14 14:30:54,890:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-14 14:30:54,905:INFO:Starting cross validation
2023-06-14 14:30:54,907:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:55,025:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 14:30:55,035:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 14:30:55,047:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 14:30:55,470:INFO:Calculating mean and std
2023-06-14 14:30:55,472:INFO:Creating metrics dataframe
2023-06-14 14:30:55,638:INFO:Uploading results into container
2023-06-14 14:30:55,639:INFO:Uploading model into container now
2023-06-14 14:30:55,640:INFO:_master_model_container: 7
2023-06-14 14:30:55,640:INFO:_display_container: 2
2023-06-14 14:30:55,640:INFO:OrthogonalMatchingPursuit()
2023-06-14 14:30:55,640:INFO:create_model() successfully completed......................................
2023-06-14 14:30:55,729:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:55,729:INFO:Creating metrics dataframe
2023-06-14 14:30:55,741:INFO:Initializing Bayesian Ridge
2023-06-14 14:30:55,741:INFO:Total runtime is 0.5249781052271525 minutes
2023-06-14 14:30:55,745:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:55,746:INFO:Initializing create_model()
2023-06-14 14:30:55,747:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:55,747:INFO:Checking exceptions
2023-06-14 14:30:55,747:INFO:Importing libraries
2023-06-14 14:30:55,748:INFO:Copying training dataset
2023-06-14 14:30:55,757:INFO:Defining folds
2023-06-14 14:30:55,757:INFO:Declaring metric variables
2023-06-14 14:30:55,766:INFO:Importing untrained model
2023-06-14 14:30:55,776:INFO:Bayesian Ridge Imported successfully
2023-06-14 14:30:55,790:INFO:Starting cross validation
2023-06-14 14:30:55,791:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:56,324:INFO:Calculating mean and std
2023-06-14 14:30:56,326:INFO:Creating metrics dataframe
2023-06-14 14:30:56,493:INFO:Uploading results into container
2023-06-14 14:30:56,494:INFO:Uploading model into container now
2023-06-14 14:30:56,494:INFO:_master_model_container: 8
2023-06-14 14:30:56,494:INFO:_display_container: 2
2023-06-14 14:30:56,495:INFO:BayesianRidge()
2023-06-14 14:30:56,495:INFO:create_model() successfully completed......................................
2023-06-14 14:30:56,582:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:56,583:INFO:Creating metrics dataframe
2023-06-14 14:30:56,598:INFO:Initializing Passive Aggressive Regressor
2023-06-14 14:30:56,599:INFO:Total runtime is 0.5392782131830851 minutes
2023-06-14 14:30:56,605:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:56,605:INFO:Initializing create_model()
2023-06-14 14:30:56,605:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:56,606:INFO:Checking exceptions
2023-06-14 14:30:56,606:INFO:Importing libraries
2023-06-14 14:30:56,606:INFO:Copying training dataset
2023-06-14 14:30:56,616:INFO:Defining folds
2023-06-14 14:30:56,617:INFO:Declaring metric variables
2023-06-14 14:30:56,627:INFO:Importing untrained model
2023-06-14 14:30:56,636:INFO:Passive Aggressive Regressor Imported successfully
2023-06-14 14:30:56,647:INFO:Starting cross validation
2023-06-14 14:30:56,649:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:57,185:INFO:Calculating mean and std
2023-06-14 14:30:57,187:INFO:Creating metrics dataframe
2023-06-14 14:30:57,355:INFO:Uploading results into container
2023-06-14 14:30:57,356:INFO:Uploading model into container now
2023-06-14 14:30:57,357:INFO:_master_model_container: 9
2023-06-14 14:30:57,357:INFO:_display_container: 2
2023-06-14 14:30:57,358:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-14 14:30:57,358:INFO:create_model() successfully completed......................................
2023-06-14 14:30:57,447:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:57,447:INFO:Creating metrics dataframe
2023-06-14 14:30:57,459:INFO:Initializing Huber Regressor
2023-06-14 14:30:57,460:INFO:Total runtime is 0.5536343534787496 minutes
2023-06-14 14:30:57,464:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:57,465:INFO:Initializing create_model()
2023-06-14 14:30:57,465:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:57,465:INFO:Checking exceptions
2023-06-14 14:30:57,466:INFO:Importing libraries
2023-06-14 14:30:57,466:INFO:Copying training dataset
2023-06-14 14:30:57,476:INFO:Defining folds
2023-06-14 14:30:57,476:INFO:Declaring metric variables
2023-06-14 14:30:57,486:INFO:Importing untrained model
2023-06-14 14:30:57,496:INFO:Huber Regressor Imported successfully
2023-06-14 14:30:57,508:INFO:Starting cross validation
2023-06-14 14:30:57,510:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:58,072:INFO:Calculating mean and std
2023-06-14 14:30:58,074:INFO:Creating metrics dataframe
2023-06-14 14:30:58,239:INFO:Uploading results into container
2023-06-14 14:30:58,240:INFO:Uploading model into container now
2023-06-14 14:30:58,240:INFO:_master_model_container: 10
2023-06-14 14:30:58,240:INFO:_display_container: 2
2023-06-14 14:30:58,241:INFO:HuberRegressor()
2023-06-14 14:30:58,241:INFO:create_model() successfully completed......................................
2023-06-14 14:30:58,324:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:58,325:INFO:Creating metrics dataframe
2023-06-14 14:30:58,343:INFO:Initializing K Neighbors Regressor
2023-06-14 14:30:58,344:INFO:Total runtime is 0.5683677991231282 minutes
2023-06-14 14:30:58,351:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:58,370:INFO:Initializing create_model()
2023-06-14 14:30:58,370:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:58,370:INFO:Checking exceptions
2023-06-14 14:30:58,370:INFO:Importing libraries
2023-06-14 14:30:58,370:INFO:Copying training dataset
2023-06-14 14:30:58,388:INFO:Defining folds
2023-06-14 14:30:58,388:INFO:Declaring metric variables
2023-06-14 14:30:58,395:INFO:Importing untrained model
2023-06-14 14:30:58,402:INFO:K Neighbors Regressor Imported successfully
2023-06-14 14:30:58,413:INFO:Starting cross validation
2023-06-14 14:30:58,415:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:58,991:INFO:Calculating mean and std
2023-06-14 14:30:58,993:INFO:Creating metrics dataframe
2023-06-14 14:30:59,161:INFO:Uploading results into container
2023-06-14 14:30:59,162:INFO:Uploading model into container now
2023-06-14 14:30:59,162:INFO:_master_model_container: 11
2023-06-14 14:30:59,163:INFO:_display_container: 2
2023-06-14 14:30:59,164:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-14 14:30:59,164:INFO:create_model() successfully completed......................................
2023-06-14 14:30:59,255:INFO:SubProcess create_model() end ==================================
2023-06-14 14:30:59,256:INFO:Creating metrics dataframe
2023-06-14 14:30:59,274:INFO:Initializing Decision Tree Regressor
2023-06-14 14:30:59,274:INFO:Total runtime is 0.5838679194450378 minutes
2023-06-14 14:30:59,279:INFO:SubProcess create_model() called ==================================
2023-06-14 14:30:59,280:INFO:Initializing create_model()
2023-06-14 14:30:59,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:30:59,281:INFO:Checking exceptions
2023-06-14 14:30:59,281:INFO:Importing libraries
2023-06-14 14:30:59,281:INFO:Copying training dataset
2023-06-14 14:30:59,290:INFO:Defining folds
2023-06-14 14:30:59,291:INFO:Declaring metric variables
2023-06-14 14:30:59,298:INFO:Importing untrained model
2023-06-14 14:30:59,307:INFO:Decision Tree Regressor Imported successfully
2023-06-14 14:30:59,324:INFO:Starting cross validation
2023-06-14 14:30:59,328:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:30:59,889:INFO:Calculating mean and std
2023-06-14 14:30:59,891:INFO:Creating metrics dataframe
2023-06-14 14:31:00,079:INFO:Uploading results into container
2023-06-14 14:31:00,080:INFO:Uploading model into container now
2023-06-14 14:31:00,080:INFO:_master_model_container: 12
2023-06-14 14:31:00,081:INFO:_display_container: 2
2023-06-14 14:31:00,081:INFO:DecisionTreeRegressor(random_state=123)
2023-06-14 14:31:00,081:INFO:create_model() successfully completed......................................
2023-06-14 14:31:00,170:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:00,171:INFO:Creating metrics dataframe
2023-06-14 14:31:00,187:INFO:Initializing Random Forest Regressor
2023-06-14 14:31:00,188:INFO:Total runtime is 0.5991014281908671 minutes
2023-06-14 14:31:00,193:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:00,194:INFO:Initializing create_model()
2023-06-14 14:31:00,194:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:00,195:INFO:Checking exceptions
2023-06-14 14:31:00,196:INFO:Importing libraries
2023-06-14 14:31:00,197:INFO:Copying training dataset
2023-06-14 14:31:00,207:INFO:Defining folds
2023-06-14 14:31:00,208:INFO:Declaring metric variables
2023-06-14 14:31:00,216:INFO:Importing untrained model
2023-06-14 14:31:00,224:INFO:Random Forest Regressor Imported successfully
2023-06-14 14:31:00,238:INFO:Starting cross validation
2023-06-14 14:31:00,240:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:01,110:INFO:Calculating mean and std
2023-06-14 14:31:01,113:INFO:Creating metrics dataframe
2023-06-14 14:31:01,389:INFO:Uploading results into container
2023-06-14 14:31:01,391:INFO:Uploading model into container now
2023-06-14 14:31:01,392:INFO:_master_model_container: 13
2023-06-14 14:31:01,392:INFO:_display_container: 2
2023-06-14 14:31:01,394:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 14:31:01,395:INFO:create_model() successfully completed......................................
2023-06-14 14:31:01,508:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:01,508:INFO:Creating metrics dataframe
2023-06-14 14:31:01,532:INFO:Initializing Extra Trees Regressor
2023-06-14 14:31:01,533:INFO:Total runtime is 0.6215181708335876 minutes
2023-06-14 14:31:01,541:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:01,542:INFO:Initializing create_model()
2023-06-14 14:31:01,542:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:01,543:INFO:Checking exceptions
2023-06-14 14:31:01,543:INFO:Importing libraries
2023-06-14 14:31:01,544:INFO:Copying training dataset
2023-06-14 14:31:01,560:INFO:Defining folds
2023-06-14 14:31:01,561:INFO:Declaring metric variables
2023-06-14 14:31:01,571:INFO:Importing untrained model
2023-06-14 14:31:01,584:INFO:Extra Trees Regressor Imported successfully
2023-06-14 14:31:01,616:INFO:Starting cross validation
2023-06-14 14:31:01,618:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:02,592:INFO:Calculating mean and std
2023-06-14 14:31:02,596:INFO:Creating metrics dataframe
2023-06-14 14:31:02,849:INFO:Uploading results into container
2023-06-14 14:31:02,850:INFO:Uploading model into container now
2023-06-14 14:31:02,851:INFO:_master_model_container: 14
2023-06-14 14:31:02,852:INFO:_display_container: 2
2023-06-14 14:31:02,852:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-14 14:31:02,853:INFO:create_model() successfully completed......................................
2023-06-14 14:31:02,975:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:02,975:INFO:Creating metrics dataframe
2023-06-14 14:31:03,006:INFO:Initializing AdaBoost Regressor
2023-06-14 14:31:03,006:INFO:Total runtime is 0.6460683266321818 minutes
2023-06-14 14:31:03,016:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:03,017:INFO:Initializing create_model()
2023-06-14 14:31:03,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:03,017:INFO:Checking exceptions
2023-06-14 14:31:03,018:INFO:Importing libraries
2023-06-14 14:31:03,018:INFO:Copying training dataset
2023-06-14 14:31:03,027:INFO:Defining folds
2023-06-14 14:31:03,027:INFO:Declaring metric variables
2023-06-14 14:31:03,038:INFO:Importing untrained model
2023-06-14 14:31:03,045:INFO:AdaBoost Regressor Imported successfully
2023-06-14 14:31:03,063:INFO:Starting cross validation
2023-06-14 14:31:03,064:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:03,785:INFO:Calculating mean and std
2023-06-14 14:31:03,787:INFO:Creating metrics dataframe
2023-06-14 14:31:03,997:INFO:Uploading results into container
2023-06-14 14:31:03,998:INFO:Uploading model into container now
2023-06-14 14:31:03,999:INFO:_master_model_container: 15
2023-06-14 14:31:03,999:INFO:_display_container: 2
2023-06-14 14:31:04,000:INFO:AdaBoostRegressor(random_state=123)
2023-06-14 14:31:04,000:INFO:create_model() successfully completed......................................
2023-06-14 14:31:04,099:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:04,099:INFO:Creating metrics dataframe
2023-06-14 14:31:04,120:INFO:Initializing Gradient Boosting Regressor
2023-06-14 14:31:04,120:INFO:Total runtime is 0.664635177453359 minutes
2023-06-14 14:31:04,128:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:04,129:INFO:Initializing create_model()
2023-06-14 14:31:04,129:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:04,129:INFO:Checking exceptions
2023-06-14 14:31:04,129:INFO:Importing libraries
2023-06-14 14:31:04,130:INFO:Copying training dataset
2023-06-14 14:31:04,143:INFO:Defining folds
2023-06-14 14:31:04,145:INFO:Declaring metric variables
2023-06-14 14:31:04,158:INFO:Importing untrained model
2023-06-14 14:31:04,165:INFO:Gradient Boosting Regressor Imported successfully
2023-06-14 14:31:04,182:INFO:Starting cross validation
2023-06-14 14:31:04,184:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:05,012:INFO:Calculating mean and std
2023-06-14 14:31:05,017:INFO:Creating metrics dataframe
2023-06-14 14:31:05,268:INFO:Uploading results into container
2023-06-14 14:31:05,269:INFO:Uploading model into container now
2023-06-14 14:31:05,270:INFO:_master_model_container: 16
2023-06-14 14:31:05,271:INFO:_display_container: 2
2023-06-14 14:31:05,272:INFO:GradientBoostingRegressor(random_state=123)
2023-06-14 14:31:05,272:INFO:create_model() successfully completed......................................
2023-06-14 14:31:05,390:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:05,391:INFO:Creating metrics dataframe
2023-06-14 14:31:05,413:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 14:31:05,414:INFO:Total runtime is 0.6862019260724386 minutes
2023-06-14 14:31:05,421:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:05,422:INFO:Initializing create_model()
2023-06-14 14:31:05,422:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:05,422:INFO:Checking exceptions
2023-06-14 14:31:05,423:INFO:Importing libraries
2023-06-14 14:31:05,423:INFO:Copying training dataset
2023-06-14 14:31:05,435:INFO:Defining folds
2023-06-14 14:31:05,436:INFO:Declaring metric variables
2023-06-14 14:31:05,451:INFO:Importing untrained model
2023-06-14 14:31:05,466:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 14:31:05,484:INFO:Starting cross validation
2023-06-14 14:31:05,489:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:09,017:INFO:Calculating mean and std
2023-06-14 14:31:09,019:INFO:Creating metrics dataframe
2023-06-14 14:31:09,209:INFO:Uploading results into container
2023-06-14 14:31:09,210:INFO:Uploading model into container now
2023-06-14 14:31:09,211:INFO:_master_model_container: 17
2023-06-14 14:31:09,211:INFO:_display_container: 2
2023-06-14 14:31:09,211:INFO:LGBMRegressor(random_state=123)
2023-06-14 14:31:09,212:INFO:create_model() successfully completed......................................
2023-06-14 14:31:09,303:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:09,303:INFO:Creating metrics dataframe
2023-06-14 14:31:09,318:INFO:Initializing Dummy Regressor
2023-06-14 14:31:09,319:INFO:Total runtime is 0.751285707950592 minutes
2023-06-14 14:31:09,323:INFO:SubProcess create_model() called ==================================
2023-06-14 14:31:09,324:INFO:Initializing create_model()
2023-06-14 14:31:09,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027C97F82F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:09,324:INFO:Checking exceptions
2023-06-14 14:31:09,324:INFO:Importing libraries
2023-06-14 14:31:09,324:INFO:Copying training dataset
2023-06-14 14:31:09,332:INFO:Defining folds
2023-06-14 14:31:09,333:INFO:Declaring metric variables
2023-06-14 14:31:09,341:INFO:Importing untrained model
2023-06-14 14:31:09,352:INFO:Dummy Regressor Imported successfully
2023-06-14 14:31:09,372:INFO:Starting cross validation
2023-06-14 14:31:09,374:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 14:31:09,944:INFO:Calculating mean and std
2023-06-14 14:31:09,946:INFO:Creating metrics dataframe
2023-06-14 14:31:10,137:INFO:Uploading results into container
2023-06-14 14:31:10,138:INFO:Uploading model into container now
2023-06-14 14:31:10,138:INFO:_master_model_container: 18
2023-06-14 14:31:10,138:INFO:_display_container: 2
2023-06-14 14:31:10,139:INFO:DummyRegressor()
2023-06-14 14:31:10,139:INFO:create_model() successfully completed......................................
2023-06-14 14:31:10,233:INFO:SubProcess create_model() end ==================================
2023-06-14 14:31:10,234:INFO:Creating metrics dataframe
2023-06-14 14:31:10,270:INFO:Initializing create_model()
2023-06-14 14:31:10,270:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 14:31:10,270:INFO:Checking exceptions
2023-06-14 14:31:10,273:INFO:Importing libraries
2023-06-14 14:31:10,273:INFO:Copying training dataset
2023-06-14 14:31:10,281:INFO:Defining folds
2023-06-14 14:31:10,281:INFO:Declaring metric variables
2023-06-14 14:31:10,282:INFO:Importing untrained model
2023-06-14 14:31:10,282:INFO:Declaring custom model
2023-06-14 14:31:10,283:INFO:Random Forest Regressor Imported successfully
2023-06-14 14:31:10,284:INFO:Cross validation set to False
2023-06-14 14:31:10,284:INFO:Fitting Model
2023-06-14 14:31:10,550:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 14:31:10,550:INFO:create_model() successfully completed......................................
2023-06-14 14:31:10,703:INFO:_master_model_container: 18
2023-06-14 14:31:10,704:INFO:_display_container: 2
2023-06-14 14:31:10,704:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 14:31:10,704:INFO:compare_models() successfully completed......................................
2023-06-14 14:31:10,816:INFO:Initializing predict_model()
2023-06-14 14:31:10,816:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027C988CE040>)
2023-06-14 14:31:10,817:INFO:Checking exceptions
2023-06-14 14:31:10,817:INFO:Preloading libraries
2023-06-14 14:31:10,821:INFO:Set up data.
2023-06-14 14:31:10,824:INFO:Set up index.
2023-06-14 14:33:17,099:INFO:Initializing predict_model()
2023-06-14 14:33:17,099:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027C91C57670>)
2023-06-14 14:33:17,099:INFO:Checking exceptions
2023-06-14 14:33:17,099:INFO:Preloading libraries
2023-06-14 14:33:17,102:INFO:Set up data.
2023-06-14 14:33:17,107:INFO:Set up index.
2023-06-14 14:39:24,160:INFO:Initializing predict_model()
2023-06-14 14:39:24,160:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000027C922EF700>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027C8AA91DC0>)
2023-06-14 14:39:24,161:INFO:Checking exceptions
2023-06-14 14:39:24,161:INFO:Preloading libraries
2023-06-14 14:39:24,165:INFO:Set up data.
2023-06-14 14:39:24,169:INFO:Set up index.
2023-06-14 14:56:14,064:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\2586353074.py:17: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  mean_fill = concat_df.mean()

2023-06-14 14:57:42,352:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\385135114.py:17: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:03:44,826:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\49140170.py:17: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:04:17,437:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\3272960674.py:17: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:04:29,857:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\3272960674.py:17: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:07:18,123:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\382635516.py:18: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:07:31,069:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_45164\2843885069.py:18: FutureWarning: DataFrame.mean and DataFrame.median with numeric_only=None will include datetime64 and datetime64tz columns in a future version.
  median_fill = concat_df.median()

2023-06-14 15:07:47,803:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_476f8af51ee34b0288da53a151395b29
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,805:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_3feab5b20f854ce599e288873a61c8db_e52030c285ee433dae69f5f169531a54
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,805:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_165ec997024a447db11c59209e77b520
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,806:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_a50ed6d808204f29beb3b20244c48039_941eafe4c29d4d718201466d788e2ba6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,806:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_e815e2d5dd2244a5a43a533efa6b413c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,806:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_76d3f76ed9c94354a87ae86312a7cd6b_0549c92d062d4df79177f7dbac534c12
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,807:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_5c13648f53d74fccb8baaca02f24bd70
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,807:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_37f82714b67b4683b5649b4a8ea59990_e58d51b7e6f4409ea2aba5ba6577708f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,807:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_fe2633880e1c45aca23104468ba044e5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,807:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_0dbb9e60a07642c882ee1ccff6e60bff_8b0d972974a04b66a16191baaf042e40
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,808:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_92d8ec59e2e14ef3868168cbe373f0f3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,808:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_7ce6445ef30a4332a0f3378d0c4f2617_0fb6b92d8cf9425ba4d7e7b093f42902
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,808:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_8a16ff66127649b59407a6e0447a2948
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,809:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_9c2ce80185ce4e62a55fdd36d97f21fe_6df0ac02d3a04619a2e480442dd06c36
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,809:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_957151b87eaa477a9c9030d74ffae67b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,809:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_124cde744a29422083b4f14512a3f09d_36797493345144178c207603075c2ac7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,809:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_9221ea106b334c68a77e6604fa4b027b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,810:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_d1a49182e2fb42d9bd4f4a8b5346fc01_bde157c2b4f04127b7b512db1ec2ba91
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,810:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_822d8b32ab7140d08c89aecd17e773a3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,810:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4a2b36b40c6941789426530488002db4_8c69f395a68a46ba8bb8d46b1f2028b1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,811:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_3698f4cae4e844b88a690d1d9d66d3fb
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,811:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_3faee1c5c496483e9363ee63716f0881_1c15968ed8d740ad9eb65236934ee1b3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,811:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_d4d755fcf14d4b0b9dc89307ea1cfb23
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,811:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_397ce110efea49828e09b53553ee3ffb_fabc9c25c6ff47c396875d8a23b4d787
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,812:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_cff4c55a953041a796bc856fbebdbf8f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,812:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_cd8dac65e95e43a484561f468ba47095_7d73a778007d45899e5d09dff9b62e8b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,812:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_a29469b8f42b4fe381fcd2ae10499a18
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,813:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_9ffe4d7a8fe94fc492268d2d350c70b0_e0c55fe694274646834c70fe8494c6de
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,813:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_1f14d7e700e84f90b6071b7bf6e5d3b8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,813:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_e84c8e8f6c2c4a93904d48f75129587e_460371d99cb64b2681945b621ee05f98
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,813:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_e2bf19a5b121494e9efba8c3f2bde524
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,814:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_92ec20ea049043f482d8fd5d77d6a1d2_81897cd06a5847139a948d4b4fdbe7d8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,814:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_6f6ff54572fa4c618dc7f5af2335f8ad
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,814:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_8e42bd43c57745e788a8d1ba9eedef70_032bcb3c2f804f1c826347e539fa4ecf
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,814:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_e6fa4c942a774b25a5ccac55749420e0
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:07:47,815:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_45164_4448d9d9e3564446a56490d788854c6a_0af84b1616214d3dae5f5f0e3becc2ae
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 15:08:17,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:08:17,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:08:17,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:08:17,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 15:08:20,144:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 15:08:20,897:INFO:PyCaret RegressionExperiment
2023-06-14 15:08:20,898:INFO:Logging name: reg-default-name
2023-06-14 15:08:20,898:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 15:08:20,898:INFO:version 3.0.2
2023-06-14 15:08:20,898:INFO:Initializing setup()
2023-06-14 15:08:20,898:INFO:self.USI: e916
2023-06-14 15:08:20,898:INFO:self._variable_keys: {'X_test', 'y_test', 'y', 'X_train', 'transform_target_param', 'X', '_available_plots', 'target_param', 'gpu_param', 'logging_param', 'seed', 'exp_id', 'data', 'USI', '_ml_usecase', 'fold_generator', 'memory', 'gpu_n_jobs_param', 'n_jobs_param', 'fold_groups_param', 'exp_name_log', 'pipeline', 'fold_shuffle_param', 'html_param', 'y_train', 'log_plots_param', 'idx'}
2023-06-14 15:08:20,898:INFO:Checking environment
2023-06-14 15:08:20,898:INFO:python_version: 3.9.13
2023-06-14 15:08:20,898:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-14 15:08:20,898:INFO:machine: AMD64
2023-06-14 15:08:20,898:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 15:08:20,898:INFO:Memory: svmem(total=8285085696, available=1408614400, percent=83.0, used=6876471296, free=1408614400)
2023-06-14 15:08:20,898:INFO:Physical Core: 2
2023-06-14 15:08:20,898:INFO:Logical Core: 4
2023-06-14 15:08:20,899:INFO:Checking libraries
2023-06-14 15:08:20,899:INFO:System:
2023-06-14 15:08:20,899:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-14 15:08:20,899:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-14 15:08:20,899:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 15:08:20,899:INFO:PyCaret required dependencies:
2023-06-14 15:08:20,899:INFO:                 pip: 22.2.2
2023-06-14 15:08:20,899:INFO:          setuptools: 63.4.1
2023-06-14 15:08:20,899:INFO:             pycaret: 3.0.2
2023-06-14 15:08:20,899:INFO:             IPython: 7.31.1
2023-06-14 15:08:20,899:INFO:          ipywidgets: 7.6.5
2023-06-14 15:08:20,899:INFO:                tqdm: 4.64.1
2023-06-14 15:08:20,899:INFO:               numpy: 1.21.5
2023-06-14 15:08:20,899:INFO:              pandas: 1.4.4
2023-06-14 15:08:20,900:INFO:              jinja2: 2.11.3
2023-06-14 15:08:20,900:INFO:               scipy: 1.9.1
2023-06-14 15:08:20,900:INFO:              joblib: 1.1.0
2023-06-14 15:08:20,900:INFO:             sklearn: 1.0.2
2023-06-14 15:08:20,900:INFO:                pyod: 1.0.9
2023-06-14 15:08:20,900:INFO:            imblearn: 0.10.1
2023-06-14 15:08:20,900:INFO:   category_encoders: 2.6.1
2023-06-14 15:08:20,900:INFO:            lightgbm: 3.3.5
2023-06-14 15:08:20,900:INFO:               numba: 0.55.1
2023-06-14 15:08:20,900:INFO:            requests: 2.28.1
2023-06-14 15:08:20,900:INFO:          matplotlib: 3.5.2
2023-06-14 15:08:20,900:INFO:          scikitplot: 0.3.7
2023-06-14 15:08:20,900:INFO:         yellowbrick: 1.5
2023-06-14 15:08:20,900:INFO:              plotly: 5.9.0
2023-06-14 15:08:20,900:INFO:             kaleido: 0.2.1
2023-06-14 15:08:20,900:INFO:         statsmodels: 0.13.2
2023-06-14 15:08:20,900:INFO:              sktime: 0.17.0
2023-06-14 15:08:20,901:INFO:               tbats: 1.1.3
2023-06-14 15:08:20,901:INFO:            pmdarima: 2.0.3
2023-06-14 15:08:20,901:INFO:              psutil: 5.9.0
2023-06-14 15:08:20,901:INFO:PyCaret optional dependencies:
2023-06-14 15:08:20,945:INFO:                shap: Not installed
2023-06-14 15:08:20,945:INFO:           interpret: Not installed
2023-06-14 15:08:20,945:INFO:                umap: Not installed
2023-06-14 15:08:20,945:INFO:    pandas_profiling: Not installed
2023-06-14 15:08:20,945:INFO:  explainerdashboard: Not installed
2023-06-14 15:08:20,945:INFO:             autoviz: Not installed
2023-06-14 15:08:20,945:INFO:           fairlearn: Not installed
2023-06-14 15:08:20,945:INFO:             xgboost: Not installed
2023-06-14 15:08:20,945:INFO:            catboost: Not installed
2023-06-14 15:08:20,945:INFO:              kmodes: Not installed
2023-06-14 15:08:20,945:INFO:             mlxtend: Not installed
2023-06-14 15:08:20,945:INFO:       statsforecast: Not installed
2023-06-14 15:08:20,945:INFO:        tune_sklearn: Not installed
2023-06-14 15:08:20,946:INFO:                 ray: Not installed
2023-06-14 15:08:20,946:INFO:            hyperopt: Not installed
2023-06-14 15:08:20,946:INFO:              optuna: Not installed
2023-06-14 15:08:20,946:INFO:               skopt: Not installed
2023-06-14 15:08:20,946:INFO:              mlflow: Not installed
2023-06-14 15:08:20,946:INFO:              gradio: Not installed
2023-06-14 15:08:20,946:INFO:             fastapi: Not installed
2023-06-14 15:08:20,946:INFO:             uvicorn: Not installed
2023-06-14 15:08:20,946:INFO:              m2cgen: Not installed
2023-06-14 15:08:20,946:INFO:           evidently: Not installed
2023-06-14 15:08:20,946:INFO:               fugue: Not installed
2023-06-14 15:08:20,946:INFO:           streamlit: 1.22.0
2023-06-14 15:08:20,946:INFO:             prophet: Not installed
2023-06-14 15:08:20,946:INFO:None
2023-06-14 15:08:20,946:INFO:Set up data.
2023-06-14 15:08:20,955:INFO:Set up train/test split.
2023-06-14 15:08:20,955:INFO:Set up data.
2023-06-14 15:08:20,959:INFO:Set up index.
2023-06-14 15:08:20,959:INFO:Set up folding strategy.
2023-06-14 15:08:20,960:INFO:Assigning column types.
2023-06-14 15:08:20,963:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 15:08:20,964:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:08:20,969:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:08:20,975:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,144:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,220:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,226:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,237:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,383:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,489:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,489:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 15:08:21,499:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,508:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,613:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,702:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,710:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,720:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,823:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,887:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:21,889:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 15:08:21,911:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:21,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,066:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,094:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,214:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,281:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 15:08:22,359:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,411:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,498:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,553:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 15:08:22,633:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,686:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,769:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 15:08:22,822:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,822:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,823:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 15:08:22,984:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:22,984:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:23,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:23,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:23,271:INFO:Preparing preprocessing pipeline...
2023-06-14 15:08:23,272:INFO:Set up target transformation.
2023-06-14 15:08:23,272:INFO:Set up date feature engineering.
2023-06-14 15:08:23,272:INFO:Set up simple imputation.
2023-06-14 15:08:23,376:INFO:Finished creating preprocessing pipeline.
2023-06-14 15:08:23,392:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-14 15:08:23,392:INFO:Creating final display dataframe.
2023-06-14 15:08:23,680:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (89, 4)
4        Transformed data shape                    (89, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (13, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       e916
2023-06-14 15:08:23,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:23,954:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:24,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:24,212:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 15:08:24,212:INFO:setup() successfully completed in 3.49s...............
2023-06-14 15:08:24,229:INFO:Initializing compare_models()
2023-06-14 15:08:24,229:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-14 15:08:24,230:INFO:Checking exceptions
2023-06-14 15:08:24,235:INFO:Preparing display monitor
2023-06-14 15:08:24,352:INFO:Initializing Linear Regression
2023-06-14 15:08:24,352:INFO:Total runtime is 0.0 minutes
2023-06-14 15:08:24,363:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:24,365:INFO:Initializing create_model()
2023-06-14 15:08:24,365:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:24,365:INFO:Checking exceptions
2023-06-14 15:08:24,366:INFO:Importing libraries
2023-06-14 15:08:24,366:INFO:Copying training dataset
2023-06-14 15:08:24,377:INFO:Defining folds
2023-06-14 15:08:24,377:INFO:Declaring metric variables
2023-06-14 15:08:24,390:INFO:Importing untrained model
2023-06-14 15:08:24,403:INFO:Linear Regression Imported successfully
2023-06-14 15:08:24,426:INFO:Starting cross validation
2023-06-14 15:08:24,615:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:42,345:INFO:Calculating mean and std
2023-06-14 15:08:42,349:INFO:Creating metrics dataframe
2023-06-14 15:08:42,568:INFO:Uploading results into container
2023-06-14 15:08:42,569:INFO:Uploading model into container now
2023-06-14 15:08:42,570:INFO:_master_model_container: 1
2023-06-14 15:08:42,570:INFO:_display_container: 2
2023-06-14 15:08:42,571:INFO:LinearRegression(n_jobs=-1)
2023-06-14 15:08:42,572:INFO:create_model() successfully completed......................................
2023-06-14 15:08:42,670:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:42,670:INFO:Creating metrics dataframe
2023-06-14 15:08:42,681:INFO:Initializing Lasso Regression
2023-06-14 15:08:42,682:INFO:Total runtime is 0.3055045008659363 minutes
2023-06-14 15:08:42,688:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:42,689:INFO:Initializing create_model()
2023-06-14 15:08:42,689:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:42,690:INFO:Checking exceptions
2023-06-14 15:08:42,690:INFO:Importing libraries
2023-06-14 15:08:42,690:INFO:Copying training dataset
2023-06-14 15:08:42,705:INFO:Defining folds
2023-06-14 15:08:42,706:INFO:Declaring metric variables
2023-06-14 15:08:42,717:INFO:Importing untrained model
2023-06-14 15:08:42,723:INFO:Lasso Regression Imported successfully
2023-06-14 15:08:42,737:INFO:Starting cross validation
2023-06-14 15:08:42,740:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:48,245:INFO:Calculating mean and std
2023-06-14 15:08:48,247:INFO:Creating metrics dataframe
2023-06-14 15:08:48,465:INFO:Uploading results into container
2023-06-14 15:08:48,466:INFO:Uploading model into container now
2023-06-14 15:08:48,467:INFO:_master_model_container: 2
2023-06-14 15:08:48,467:INFO:_display_container: 2
2023-06-14 15:08:48,467:INFO:Lasso(random_state=123)
2023-06-14 15:08:48,468:INFO:create_model() successfully completed......................................
2023-06-14 15:08:48,555:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:48,555:INFO:Creating metrics dataframe
2023-06-14 15:08:48,571:INFO:Initializing Ridge Regression
2023-06-14 15:08:48,572:INFO:Total runtime is 0.40367216666539507 minutes
2023-06-14 15:08:48,577:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:48,578:INFO:Initializing create_model()
2023-06-14 15:08:48,578:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:48,578:INFO:Checking exceptions
2023-06-14 15:08:48,579:INFO:Importing libraries
2023-06-14 15:08:48,579:INFO:Copying training dataset
2023-06-14 15:08:48,586:INFO:Defining folds
2023-06-14 15:08:48,586:INFO:Declaring metric variables
2023-06-14 15:08:48,598:INFO:Importing untrained model
2023-06-14 15:08:48,605:INFO:Ridge Regression Imported successfully
2023-06-14 15:08:48,617:INFO:Starting cross validation
2023-06-14 15:08:48,619:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:49,169:INFO:Calculating mean and std
2023-06-14 15:08:49,172:INFO:Creating metrics dataframe
2023-06-14 15:08:49,350:INFO:Uploading results into container
2023-06-14 15:08:49,351:INFO:Uploading model into container now
2023-06-14 15:08:49,352:INFO:_master_model_container: 3
2023-06-14 15:08:49,352:INFO:_display_container: 2
2023-06-14 15:08:49,352:INFO:Ridge(random_state=123)
2023-06-14 15:08:49,353:INFO:create_model() successfully completed......................................
2023-06-14 15:08:49,458:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:49,458:INFO:Creating metrics dataframe
2023-06-14 15:08:49,479:INFO:Initializing Elastic Net
2023-06-14 15:08:49,479:INFO:Total runtime is 0.4187890569368998 minutes
2023-06-14 15:08:49,493:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:49,494:INFO:Initializing create_model()
2023-06-14 15:08:49,494:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:49,494:INFO:Checking exceptions
2023-06-14 15:08:49,494:INFO:Importing libraries
2023-06-14 15:08:49,495:INFO:Copying training dataset
2023-06-14 15:08:49,505:INFO:Defining folds
2023-06-14 15:08:49,511:INFO:Declaring metric variables
2023-06-14 15:08:49,518:INFO:Importing untrained model
2023-06-14 15:08:49,530:INFO:Elastic Net Imported successfully
2023-06-14 15:08:49,547:INFO:Starting cross validation
2023-06-14 15:08:49,549:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:50,094:INFO:Calculating mean and std
2023-06-14 15:08:50,096:INFO:Creating metrics dataframe
2023-06-14 15:08:50,264:INFO:Uploading results into container
2023-06-14 15:08:50,265:INFO:Uploading model into container now
2023-06-14 15:08:50,266:INFO:_master_model_container: 4
2023-06-14 15:08:50,267:INFO:_display_container: 2
2023-06-14 15:08:50,267:INFO:ElasticNet(random_state=123)
2023-06-14 15:08:50,268:INFO:create_model() successfully completed......................................
2023-06-14 15:08:50,352:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:50,352:INFO:Creating metrics dataframe
2023-06-14 15:08:50,363:INFO:Initializing Least Angle Regression
2023-06-14 15:08:50,363:INFO:Total runtime is 0.433522617816925 minutes
2023-06-14 15:08:50,368:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:50,369:INFO:Initializing create_model()
2023-06-14 15:08:50,369:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:50,369:INFO:Checking exceptions
2023-06-14 15:08:50,370:INFO:Importing libraries
2023-06-14 15:08:50,370:INFO:Copying training dataset
2023-06-14 15:08:50,384:INFO:Defining folds
2023-06-14 15:08:50,384:INFO:Declaring metric variables
2023-06-14 15:08:50,390:INFO:Importing untrained model
2023-06-14 15:08:50,398:INFO:Least Angle Regression Imported successfully
2023-06-14 15:08:50,408:INFO:Starting cross validation
2023-06-14 15:08:50,411:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:50,522:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:50,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=1.203e-03, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 15:08:50,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=6.013e-04, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 15:08:50,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:50,547:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:50,595:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.196e-07, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 15:08:50,596:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.598e-07, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 15:08:50,965:INFO:Calculating mean and std
2023-06-14 15:08:50,967:INFO:Creating metrics dataframe
2023-06-14 15:08:51,136:INFO:Uploading results into container
2023-06-14 15:08:51,137:INFO:Uploading model into container now
2023-06-14 15:08:51,138:INFO:_master_model_container: 5
2023-06-14 15:08:51,138:INFO:_display_container: 2
2023-06-14 15:08:51,139:INFO:Lars(random_state=123)
2023-06-14 15:08:51,139:INFO:create_model() successfully completed......................................
2023-06-14 15:08:51,228:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:51,228:INFO:Creating metrics dataframe
2023-06-14 15:08:51,241:INFO:Initializing Lasso Least Angle Regression
2023-06-14 15:08:51,241:INFO:Total runtime is 0.44815409580866494 minutes
2023-06-14 15:08:51,246:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:51,247:INFO:Initializing create_model()
2023-06-14 15:08:51,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:51,247:INFO:Checking exceptions
2023-06-14 15:08:51,247:INFO:Importing libraries
2023-06-14 15:08:51,247:INFO:Copying training dataset
2023-06-14 15:08:51,256:INFO:Defining folds
2023-06-14 15:08:51,256:INFO:Declaring metric variables
2023-06-14 15:08:51,266:INFO:Importing untrained model
2023-06-14 15:08:51,274:INFO:Lasso Least Angle Regression Imported successfully
2023-06-14 15:08:51,286:INFO:Starting cross validation
2023-06-14 15:08:51,288:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:51,401:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 15:08:51,403:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 15:08:51,421:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 15:08:51,836:INFO:Calculating mean and std
2023-06-14 15:08:51,837:INFO:Creating metrics dataframe
2023-06-14 15:08:52,005:INFO:Uploading results into container
2023-06-14 15:08:52,006:INFO:Uploading model into container now
2023-06-14 15:08:52,007:INFO:_master_model_container: 6
2023-06-14 15:08:52,007:INFO:_display_container: 2
2023-06-14 15:08:52,008:INFO:LassoLars(random_state=123)
2023-06-14 15:08:52,008:INFO:create_model() successfully completed......................................
2023-06-14 15:08:52,094:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:52,094:INFO:Creating metrics dataframe
2023-06-14 15:08:52,106:INFO:Initializing Orthogonal Matching Pursuit
2023-06-14 15:08:52,107:INFO:Total runtime is 0.46258758306503295 minutes
2023-06-14 15:08:52,114:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:52,115:INFO:Initializing create_model()
2023-06-14 15:08:52,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:52,116:INFO:Checking exceptions
2023-06-14 15:08:52,116:INFO:Importing libraries
2023-06-14 15:08:52,116:INFO:Copying training dataset
2023-06-14 15:08:52,128:INFO:Defining folds
2023-06-14 15:08:52,128:INFO:Declaring metric variables
2023-06-14 15:08:52,136:INFO:Importing untrained model
2023-06-14 15:08:52,146:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-14 15:08:52,157:INFO:Starting cross validation
2023-06-14 15:08:52,159:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:52,262:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:52,284:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:52,291:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 15:08:52,702:INFO:Calculating mean and std
2023-06-14 15:08:52,704:INFO:Creating metrics dataframe
2023-06-14 15:08:52,871:INFO:Uploading results into container
2023-06-14 15:08:52,872:INFO:Uploading model into container now
2023-06-14 15:08:52,873:INFO:_master_model_container: 7
2023-06-14 15:08:52,874:INFO:_display_container: 2
2023-06-14 15:08:52,874:INFO:OrthogonalMatchingPursuit()
2023-06-14 15:08:52,874:INFO:create_model() successfully completed......................................
2023-06-14 15:08:52,960:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:52,961:INFO:Creating metrics dataframe
2023-06-14 15:08:52,972:INFO:Initializing Bayesian Ridge
2023-06-14 15:08:52,972:INFO:Total runtime is 0.47700453201929727 minutes
2023-06-14 15:08:52,977:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:52,978:INFO:Initializing create_model()
2023-06-14 15:08:52,978:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:52,978:INFO:Checking exceptions
2023-06-14 15:08:52,979:INFO:Importing libraries
2023-06-14 15:08:52,979:INFO:Copying training dataset
2023-06-14 15:08:52,988:INFO:Defining folds
2023-06-14 15:08:52,988:INFO:Declaring metric variables
2023-06-14 15:08:53,001:INFO:Importing untrained model
2023-06-14 15:08:53,010:INFO:Bayesian Ridge Imported successfully
2023-06-14 15:08:53,022:INFO:Starting cross validation
2023-06-14 15:08:53,024:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:53,713:INFO:Calculating mean and std
2023-06-14 15:08:53,715:INFO:Creating metrics dataframe
2023-06-14 15:08:53,936:INFO:Uploading results into container
2023-06-14 15:08:53,941:INFO:Uploading model into container now
2023-06-14 15:08:53,943:INFO:_master_model_container: 8
2023-06-14 15:08:53,943:INFO:_display_container: 2
2023-06-14 15:08:53,944:INFO:BayesianRidge()
2023-06-14 15:08:53,944:INFO:create_model() successfully completed......................................
2023-06-14 15:08:54,048:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:54,048:INFO:Creating metrics dataframe
2023-06-14 15:08:54,063:INFO:Initializing Passive Aggressive Regressor
2023-06-14 15:08:54,064:INFO:Total runtime is 0.4952048301696777 minutes
2023-06-14 15:08:54,078:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:54,078:INFO:Initializing create_model()
2023-06-14 15:08:54,079:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:54,079:INFO:Checking exceptions
2023-06-14 15:08:54,079:INFO:Importing libraries
2023-06-14 15:08:54,079:INFO:Copying training dataset
2023-06-14 15:08:54,094:INFO:Defining folds
2023-06-14 15:08:54,096:INFO:Declaring metric variables
2023-06-14 15:08:54,105:INFO:Importing untrained model
2023-06-14 15:08:54,117:INFO:Passive Aggressive Regressor Imported successfully
2023-06-14 15:08:54,135:INFO:Starting cross validation
2023-06-14 15:08:54,138:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:54,800:INFO:Calculating mean and std
2023-06-14 15:08:54,803:INFO:Creating metrics dataframe
2023-06-14 15:08:55,016:INFO:Uploading results into container
2023-06-14 15:08:55,018:INFO:Uploading model into container now
2023-06-14 15:08:55,019:INFO:_master_model_container: 9
2023-06-14 15:08:55,019:INFO:_display_container: 2
2023-06-14 15:08:55,020:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-14 15:08:55,020:INFO:create_model() successfully completed......................................
2023-06-14 15:08:55,120:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:55,120:INFO:Creating metrics dataframe
2023-06-14 15:08:55,134:INFO:Initializing Huber Regressor
2023-06-14 15:08:55,135:INFO:Total runtime is 0.5130550861358643 minutes
2023-06-14 15:08:55,142:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:55,143:INFO:Initializing create_model()
2023-06-14 15:08:55,143:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:55,143:INFO:Checking exceptions
2023-06-14 15:08:55,143:INFO:Importing libraries
2023-06-14 15:08:55,143:INFO:Copying training dataset
2023-06-14 15:08:55,156:INFO:Defining folds
2023-06-14 15:08:55,157:INFO:Declaring metric variables
2023-06-14 15:08:55,167:INFO:Importing untrained model
2023-06-14 15:08:55,175:INFO:Huber Regressor Imported successfully
2023-06-14 15:08:55,191:INFO:Starting cross validation
2023-06-14 15:08:55,194:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:55,832:INFO:Calculating mean and std
2023-06-14 15:08:55,836:INFO:Creating metrics dataframe
2023-06-14 15:08:56,041:INFO:Uploading results into container
2023-06-14 15:08:56,042:INFO:Uploading model into container now
2023-06-14 15:08:56,043:INFO:_master_model_container: 10
2023-06-14 15:08:56,043:INFO:_display_container: 2
2023-06-14 15:08:56,044:INFO:HuberRegressor()
2023-06-14 15:08:56,044:INFO:create_model() successfully completed......................................
2023-06-14 15:08:56,141:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:56,141:INFO:Creating metrics dataframe
2023-06-14 15:08:56,155:INFO:Initializing K Neighbors Regressor
2023-06-14 15:08:56,156:INFO:Total runtime is 0.5300719261169433 minutes
2023-06-14 15:08:56,162:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:56,162:INFO:Initializing create_model()
2023-06-14 15:08:56,163:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:56,163:INFO:Checking exceptions
2023-06-14 15:08:56,163:INFO:Importing libraries
2023-06-14 15:08:56,164:INFO:Copying training dataset
2023-06-14 15:08:56,181:INFO:Defining folds
2023-06-14 15:08:56,182:INFO:Declaring metric variables
2023-06-14 15:08:56,191:INFO:Importing untrained model
2023-06-14 15:08:56,200:INFO:K Neighbors Regressor Imported successfully
2023-06-14 15:08:56,216:INFO:Starting cross validation
2023-06-14 15:08:56,218:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:56,907:INFO:Calculating mean and std
2023-06-14 15:08:56,909:INFO:Creating metrics dataframe
2023-06-14 15:08:57,112:INFO:Uploading results into container
2023-06-14 15:08:57,113:INFO:Uploading model into container now
2023-06-14 15:08:57,114:INFO:_master_model_container: 11
2023-06-14 15:08:57,114:INFO:_display_container: 2
2023-06-14 15:08:57,115:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-14 15:08:57,116:INFO:create_model() successfully completed......................................
2023-06-14 15:08:57,216:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:57,216:INFO:Creating metrics dataframe
2023-06-14 15:08:57,244:INFO:Initializing Decision Tree Regressor
2023-06-14 15:08:57,244:INFO:Total runtime is 0.548205562432607 minutes
2023-06-14 15:08:57,252:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:57,253:INFO:Initializing create_model()
2023-06-14 15:08:57,253:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:57,253:INFO:Checking exceptions
2023-06-14 15:08:57,253:INFO:Importing libraries
2023-06-14 15:08:57,253:INFO:Copying training dataset
2023-06-14 15:08:57,265:INFO:Defining folds
2023-06-14 15:08:57,266:INFO:Declaring metric variables
2023-06-14 15:08:57,276:INFO:Importing untrained model
2023-06-14 15:08:57,284:INFO:Decision Tree Regressor Imported successfully
2023-06-14 15:08:57,301:INFO:Starting cross validation
2023-06-14 15:08:57,303:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:57,966:INFO:Calculating mean and std
2023-06-14 15:08:57,968:INFO:Creating metrics dataframe
2023-06-14 15:08:58,202:INFO:Uploading results into container
2023-06-14 15:08:58,203:INFO:Uploading model into container now
2023-06-14 15:08:58,204:INFO:_master_model_container: 12
2023-06-14 15:08:58,204:INFO:_display_container: 2
2023-06-14 15:08:58,205:INFO:DecisionTreeRegressor(random_state=123)
2023-06-14 15:08:58,205:INFO:create_model() successfully completed......................................
2023-06-14 15:08:58,313:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:58,313:INFO:Creating metrics dataframe
2023-06-14 15:08:58,332:INFO:Initializing Random Forest Regressor
2023-06-14 15:08:58,332:INFO:Total runtime is 0.5663391788800557 minutes
2023-06-14 15:08:58,339:INFO:SubProcess create_model() called ==================================
2023-06-14 15:08:58,340:INFO:Initializing create_model()
2023-06-14 15:08:58,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:08:58,340:INFO:Checking exceptions
2023-06-14 15:08:58,341:INFO:Importing libraries
2023-06-14 15:08:58,341:INFO:Copying training dataset
2023-06-14 15:08:58,352:INFO:Defining folds
2023-06-14 15:08:58,353:INFO:Declaring metric variables
2023-06-14 15:08:58,367:INFO:Importing untrained model
2023-06-14 15:08:58,378:INFO:Random Forest Regressor Imported successfully
2023-06-14 15:08:58,390:INFO:Starting cross validation
2023-06-14 15:08:58,392:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:08:59,742:INFO:Calculating mean and std
2023-06-14 15:08:59,744:INFO:Creating metrics dataframe
2023-06-14 15:08:59,907:INFO:Uploading results into container
2023-06-14 15:08:59,908:INFO:Uploading model into container now
2023-06-14 15:08:59,909:INFO:_master_model_container: 13
2023-06-14 15:08:59,909:INFO:_display_container: 2
2023-06-14 15:08:59,909:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 15:08:59,910:INFO:create_model() successfully completed......................................
2023-06-14 15:08:59,995:INFO:SubProcess create_model() end ==================================
2023-06-14 15:08:59,995:INFO:Creating metrics dataframe
2023-06-14 15:09:00,009:INFO:Initializing Extra Trees Regressor
2023-06-14 15:09:00,010:INFO:Total runtime is 0.5942968328793843 minutes
2023-06-14 15:09:00,016:INFO:SubProcess create_model() called ==================================
2023-06-14 15:09:00,017:INFO:Initializing create_model()
2023-06-14 15:09:00,017:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:00,017:INFO:Checking exceptions
2023-06-14 15:09:00,017:INFO:Importing libraries
2023-06-14 15:09:00,017:INFO:Copying training dataset
2023-06-14 15:09:00,036:INFO:Defining folds
2023-06-14 15:09:00,036:INFO:Declaring metric variables
2023-06-14 15:09:00,049:INFO:Importing untrained model
2023-06-14 15:09:00,056:INFO:Extra Trees Regressor Imported successfully
2023-06-14 15:09:00,071:INFO:Starting cross validation
2023-06-14 15:09:00,073:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:09:01,021:INFO:Calculating mean and std
2023-06-14 15:09:01,023:INFO:Creating metrics dataframe
2023-06-14 15:09:01,211:INFO:Uploading results into container
2023-06-14 15:09:01,212:INFO:Uploading model into container now
2023-06-14 15:09:01,212:INFO:_master_model_container: 14
2023-06-14 15:09:01,212:INFO:_display_container: 2
2023-06-14 15:09:01,213:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-14 15:09:01,213:INFO:create_model() successfully completed......................................
2023-06-14 15:09:01,299:INFO:SubProcess create_model() end ==================================
2023-06-14 15:09:01,299:INFO:Creating metrics dataframe
2023-06-14 15:09:01,313:INFO:Initializing AdaBoost Regressor
2023-06-14 15:09:01,313:INFO:Total runtime is 0.6160139004389444 minutes
2023-06-14 15:09:01,321:INFO:SubProcess create_model() called ==================================
2023-06-14 15:09:01,321:INFO:Initializing create_model()
2023-06-14 15:09:01,321:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:01,321:INFO:Checking exceptions
2023-06-14 15:09:01,321:INFO:Importing libraries
2023-06-14 15:09:01,322:INFO:Copying training dataset
2023-06-14 15:09:01,331:INFO:Defining folds
2023-06-14 15:09:01,331:INFO:Declaring metric variables
2023-06-14 15:09:01,339:INFO:Importing untrained model
2023-06-14 15:09:01,350:INFO:AdaBoost Regressor Imported successfully
2023-06-14 15:09:01,360:INFO:Starting cross validation
2023-06-14 15:09:01,363:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:09:02,054:INFO:Calculating mean and std
2023-06-14 15:09:02,056:INFO:Creating metrics dataframe
2023-06-14 15:09:02,237:INFO:Uploading results into container
2023-06-14 15:09:02,238:INFO:Uploading model into container now
2023-06-14 15:09:02,239:INFO:_master_model_container: 15
2023-06-14 15:09:02,239:INFO:_display_container: 2
2023-06-14 15:09:02,239:INFO:AdaBoostRegressor(random_state=123)
2023-06-14 15:09:02,239:INFO:create_model() successfully completed......................................
2023-06-14 15:09:02,329:INFO:SubProcess create_model() end ==================================
2023-06-14 15:09:02,329:INFO:Creating metrics dataframe
2023-06-14 15:09:02,343:INFO:Initializing Gradient Boosting Regressor
2023-06-14 15:09:02,343:INFO:Total runtime is 0.6331940174102783 minutes
2023-06-14 15:09:02,347:INFO:SubProcess create_model() called ==================================
2023-06-14 15:09:02,348:INFO:Initializing create_model()
2023-06-14 15:09:02,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:02,349:INFO:Checking exceptions
2023-06-14 15:09:02,349:INFO:Importing libraries
2023-06-14 15:09:02,349:INFO:Copying training dataset
2023-06-14 15:09:02,356:INFO:Defining folds
2023-06-14 15:09:02,356:INFO:Declaring metric variables
2023-06-14 15:09:02,363:INFO:Importing untrained model
2023-06-14 15:09:02,373:INFO:Gradient Boosting Regressor Imported successfully
2023-06-14 15:09:02,388:INFO:Starting cross validation
2023-06-14 15:09:02,390:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:09:03,057:INFO:Calculating mean and std
2023-06-14 15:09:03,059:INFO:Creating metrics dataframe
2023-06-14 15:09:03,235:INFO:Uploading results into container
2023-06-14 15:09:03,236:INFO:Uploading model into container now
2023-06-14 15:09:03,237:INFO:_master_model_container: 16
2023-06-14 15:09:03,237:INFO:_display_container: 2
2023-06-14 15:09:03,238:INFO:GradientBoostingRegressor(random_state=123)
2023-06-14 15:09:03,239:INFO:create_model() successfully completed......................................
2023-06-14 15:09:03,326:INFO:SubProcess create_model() end ==================================
2023-06-14 15:09:03,326:INFO:Creating metrics dataframe
2023-06-14 15:09:03,344:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 15:09:03,344:INFO:Total runtime is 0.6498769958813985 minutes
2023-06-14 15:09:03,351:INFO:SubProcess create_model() called ==================================
2023-06-14 15:09:03,351:INFO:Initializing create_model()
2023-06-14 15:09:03,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:03,352:INFO:Checking exceptions
2023-06-14 15:09:03,352:INFO:Importing libraries
2023-06-14 15:09:03,353:INFO:Copying training dataset
2023-06-14 15:09:03,364:INFO:Defining folds
2023-06-14 15:09:03,364:INFO:Declaring metric variables
2023-06-14 15:09:03,376:INFO:Importing untrained model
2023-06-14 15:09:03,384:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 15:09:03,399:INFO:Starting cross validation
2023-06-14 15:09:03,401:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:09:06,244:INFO:Calculating mean and std
2023-06-14 15:09:06,246:INFO:Creating metrics dataframe
2023-06-14 15:09:06,416:INFO:Uploading results into container
2023-06-14 15:09:06,417:INFO:Uploading model into container now
2023-06-14 15:09:06,417:INFO:_master_model_container: 17
2023-06-14 15:09:06,418:INFO:_display_container: 2
2023-06-14 15:09:06,418:INFO:LGBMRegressor(random_state=123)
2023-06-14 15:09:06,419:INFO:create_model() successfully completed......................................
2023-06-14 15:09:06,504:INFO:SubProcess create_model() end ==================================
2023-06-14 15:09:06,504:INFO:Creating metrics dataframe
2023-06-14 15:09:06,518:INFO:Initializing Dummy Regressor
2023-06-14 15:09:06,518:INFO:Total runtime is 0.7027765989303588 minutes
2023-06-14 15:09:06,525:INFO:SubProcess create_model() called ==================================
2023-06-14 15:09:06,526:INFO:Initializing create_model()
2023-06-14 15:09:06,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD9FB430>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:06,526:INFO:Checking exceptions
2023-06-14 15:09:06,526:INFO:Importing libraries
2023-06-14 15:09:06,526:INFO:Copying training dataset
2023-06-14 15:09:06,533:INFO:Defining folds
2023-06-14 15:09:06,535:INFO:Declaring metric variables
2023-06-14 15:09:06,546:INFO:Importing untrained model
2023-06-14 15:09:06,555:INFO:Dummy Regressor Imported successfully
2023-06-14 15:09:06,568:INFO:Starting cross validation
2023-06-14 15:09:06,569:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 15:09:07,092:INFO:Calculating mean and std
2023-06-14 15:09:07,095:INFO:Creating metrics dataframe
2023-06-14 15:09:07,265:INFO:Uploading results into container
2023-06-14 15:09:07,266:INFO:Uploading model into container now
2023-06-14 15:09:07,267:INFO:_master_model_container: 18
2023-06-14 15:09:07,267:INFO:_display_container: 2
2023-06-14 15:09:07,267:INFO:DummyRegressor()
2023-06-14 15:09:07,267:INFO:create_model() successfully completed......................................
2023-06-14 15:09:07,353:INFO:SubProcess create_model() end ==================================
2023-06-14 15:09:07,353:INFO:Creating metrics dataframe
2023-06-14 15:09:07,385:INFO:Initializing create_model()
2023-06-14 15:09:07,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 15:09:07,385:INFO:Checking exceptions
2023-06-14 15:09:07,388:INFO:Importing libraries
2023-06-14 15:09:07,389:INFO:Copying training dataset
2023-06-14 15:09:07,399:INFO:Defining folds
2023-06-14 15:09:07,399:INFO:Declaring metric variables
2023-06-14 15:09:07,399:INFO:Importing untrained model
2023-06-14 15:09:07,399:INFO:Declaring custom model
2023-06-14 15:09:07,409:INFO:Random Forest Regressor Imported successfully
2023-06-14 15:09:07,411:INFO:Cross validation set to False
2023-06-14 15:09:07,412:INFO:Fitting Model
2023-06-14 15:09:07,840:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 15:09:07,840:INFO:create_model() successfully completed......................................
2023-06-14 15:09:07,978:INFO:_master_model_container: 18
2023-06-14 15:09:07,978:INFO:_display_container: 2
2023-06-14 15:09:07,979:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 15:09:07,979:INFO:compare_models() successfully completed......................................
2023-06-14 15:09:08,031:INFO:Initializing predict_model()
2023-06-14 15:09:08,031:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F83728160>)
2023-06-14 15:09:08,031:INFO:Checking exceptions
2023-06-14 15:09:08,031:INFO:Preloading libraries
2023-06-14 15:09:08,036:INFO:Set up data.
2023-06-14 15:09:08,042:INFO:Set up index.
2023-06-14 16:02:53,513:INFO:Initializing compare_models()
2023-06-14 16:02:53,515:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-14 16:02:53,516:INFO:Checking exceptions
2023-06-14 16:02:53,520:INFO:Preparing display monitor
2023-06-14 16:02:53,609:INFO:Initializing Linear Regression
2023-06-14 16:02:53,609:INFO:Total runtime is 0.0 minutes
2023-06-14 16:02:53,616:INFO:SubProcess create_model() called ==================================
2023-06-14 16:02:53,618:INFO:Initializing create_model()
2023-06-14 16:02:53,618:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:02:53,618:INFO:Checking exceptions
2023-06-14 16:02:53,619:INFO:Importing libraries
2023-06-14 16:02:53,619:INFO:Copying training dataset
2023-06-14 16:02:53,626:INFO:Defining folds
2023-06-14 16:02:53,626:INFO:Declaring metric variables
2023-06-14 16:02:53,630:INFO:Importing untrained model
2023-06-14 16:02:53,637:INFO:Linear Regression Imported successfully
2023-06-14 16:02:53,653:INFO:Starting cross validation
2023-06-14 16:02:53,662:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:13,314:INFO:Calculating mean and std
2023-06-14 16:03:13,317:INFO:Creating metrics dataframe
2023-06-14 16:03:13,546:INFO:Uploading results into container
2023-06-14 16:03:13,547:INFO:Uploading model into container now
2023-06-14 16:03:13,549:INFO:_master_model_container: 19
2023-06-14 16:03:13,550:INFO:_display_container: 3
2023-06-14 16:03:13,551:INFO:LinearRegression(n_jobs=-1)
2023-06-14 16:03:13,552:INFO:create_model() successfully completed......................................
2023-06-14 16:03:14,041:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:14,041:INFO:Creating metrics dataframe
2023-06-14 16:03:14,052:INFO:Initializing Lasso Regression
2023-06-14 16:03:14,053:INFO:Total runtime is 0.3407342791557312 minutes
2023-06-14 16:03:14,061:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:14,061:INFO:Initializing create_model()
2023-06-14 16:03:14,062:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:14,063:INFO:Checking exceptions
2023-06-14 16:03:14,063:INFO:Importing libraries
2023-06-14 16:03:14,063:INFO:Copying training dataset
2023-06-14 16:03:14,083:INFO:Defining folds
2023-06-14 16:03:14,083:INFO:Declaring metric variables
2023-06-14 16:03:14,091:INFO:Importing untrained model
2023-06-14 16:03:14,102:INFO:Lasso Regression Imported successfully
2023-06-14 16:03:14,117:INFO:Starting cross validation
2023-06-14 16:03:14,120:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:19,367:INFO:Calculating mean and std
2023-06-14 16:03:19,370:INFO:Creating metrics dataframe
2023-06-14 16:03:19,639:INFO:Uploading results into container
2023-06-14 16:03:19,641:INFO:Uploading model into container now
2023-06-14 16:03:19,642:INFO:_master_model_container: 20
2023-06-14 16:03:19,643:INFO:_display_container: 3
2023-06-14 16:03:19,643:INFO:Lasso(random_state=123)
2023-06-14 16:03:19,644:INFO:create_model() successfully completed......................................
2023-06-14 16:03:19,763:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:19,763:INFO:Creating metrics dataframe
2023-06-14 16:03:19,776:INFO:Initializing Ridge Regression
2023-06-14 16:03:19,776:INFO:Total runtime is 0.43611592054367065 minutes
2023-06-14 16:03:19,783:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:19,784:INFO:Initializing create_model()
2023-06-14 16:03:19,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:19,784:INFO:Checking exceptions
2023-06-14 16:03:19,785:INFO:Importing libraries
2023-06-14 16:03:19,785:INFO:Copying training dataset
2023-06-14 16:03:19,796:INFO:Defining folds
2023-06-14 16:03:19,796:INFO:Declaring metric variables
2023-06-14 16:03:19,824:INFO:Importing untrained model
2023-06-14 16:03:19,836:INFO:Ridge Regression Imported successfully
2023-06-14 16:03:19,853:INFO:Starting cross validation
2023-06-14 16:03:19,854:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:20,579:INFO:Calculating mean and std
2023-06-14 16:03:20,584:INFO:Creating metrics dataframe
2023-06-14 16:03:20,865:INFO:Uploading results into container
2023-06-14 16:03:20,867:INFO:Uploading model into container now
2023-06-14 16:03:20,868:INFO:_master_model_container: 21
2023-06-14 16:03:20,868:INFO:_display_container: 3
2023-06-14 16:03:20,869:INFO:Ridge(random_state=123)
2023-06-14 16:03:20,869:INFO:create_model() successfully completed......................................
2023-06-14 16:03:20,979:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:20,980:INFO:Creating metrics dataframe
2023-06-14 16:03:20,991:INFO:Initializing Elastic Net
2023-06-14 16:03:20,991:INFO:Total runtime is 0.45636605421702064 minutes
2023-06-14 16:03:20,998:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:20,998:INFO:Initializing create_model()
2023-06-14 16:03:20,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:20,999:INFO:Checking exceptions
2023-06-14 16:03:20,999:INFO:Importing libraries
2023-06-14 16:03:20,999:INFO:Copying training dataset
2023-06-14 16:03:21,013:INFO:Defining folds
2023-06-14 16:03:21,014:INFO:Declaring metric variables
2023-06-14 16:03:21,023:INFO:Importing untrained model
2023-06-14 16:03:21,031:INFO:Elastic Net Imported successfully
2023-06-14 16:03:21,049:INFO:Starting cross validation
2023-06-14 16:03:21,052:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:21,791:INFO:Calculating mean and std
2023-06-14 16:03:21,794:INFO:Creating metrics dataframe
2023-06-14 16:03:22,028:INFO:Uploading results into container
2023-06-14 16:03:22,030:INFO:Uploading model into container now
2023-06-14 16:03:22,030:INFO:_master_model_container: 22
2023-06-14 16:03:22,031:INFO:_display_container: 3
2023-06-14 16:03:22,031:INFO:ElasticNet(random_state=123)
2023-06-14 16:03:22,032:INFO:create_model() successfully completed......................................
2023-06-14 16:03:22,130:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:22,130:INFO:Creating metrics dataframe
2023-06-14 16:03:22,143:INFO:Initializing Least Angle Regression
2023-06-14 16:03:22,143:INFO:Total runtime is 0.47556612094243367 minutes
2023-06-14 16:03:22,154:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:22,154:INFO:Initializing create_model()
2023-06-14 16:03:22,155:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:22,155:INFO:Checking exceptions
2023-06-14 16:03:22,155:INFO:Importing libraries
2023-06-14 16:03:22,156:INFO:Copying training dataset
2023-06-14 16:03:22,165:INFO:Defining folds
2023-06-14 16:03:22,165:INFO:Declaring metric variables
2023-06-14 16:03:22,177:INFO:Importing untrained model
2023-06-14 16:03:22,189:INFO:Least Angle Regression Imported successfully
2023-06-14 16:03:22,207:INFO:Starting cross validation
2023-06-14 16:03:22,210:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:22,382:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:22,386:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=1.203e-03, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 16:03:22,386:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=6.013e-04, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 16:03:22,417:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:22,422:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:22,545:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.196e-07, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 16:03:22,546:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.598e-07, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-14 16:03:23,008:INFO:Calculating mean and std
2023-06-14 16:03:23,017:INFO:Creating metrics dataframe
2023-06-14 16:03:23,307:INFO:Uploading results into container
2023-06-14 16:03:23,310:INFO:Uploading model into container now
2023-06-14 16:03:23,311:INFO:_master_model_container: 23
2023-06-14 16:03:23,311:INFO:_display_container: 3
2023-06-14 16:03:23,312:INFO:Lars(random_state=123)
2023-06-14 16:03:23,312:INFO:create_model() successfully completed......................................
2023-06-14 16:03:23,444:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:23,445:INFO:Creating metrics dataframe
2023-06-14 16:03:23,479:INFO:Initializing Lasso Least Angle Regression
2023-06-14 16:03:23,480:INFO:Total runtime is 0.49784955581029255 minutes
2023-06-14 16:03:23,487:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:23,488:INFO:Initializing create_model()
2023-06-14 16:03:23,488:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:23,489:INFO:Checking exceptions
2023-06-14 16:03:23,489:INFO:Importing libraries
2023-06-14 16:03:23,489:INFO:Copying training dataset
2023-06-14 16:03:23,501:INFO:Defining folds
2023-06-14 16:03:23,501:INFO:Declaring metric variables
2023-06-14 16:03:23,514:INFO:Importing untrained model
2023-06-14 16:03:23,521:INFO:Lasso Least Angle Regression Imported successfully
2023-06-14 16:03:23,536:INFO:Starting cross validation
2023-06-14 16:03:23,540:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:23,703:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:03:23,729:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:03:23,732:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:03:24,320:INFO:Calculating mean and std
2023-06-14 16:03:24,322:INFO:Creating metrics dataframe
2023-06-14 16:03:24,594:INFO:Uploading results into container
2023-06-14 16:03:24,595:INFO:Uploading model into container now
2023-06-14 16:03:24,596:INFO:_master_model_container: 24
2023-06-14 16:03:24,597:INFO:_display_container: 3
2023-06-14 16:03:24,597:INFO:LassoLars(random_state=123)
2023-06-14 16:03:24,598:INFO:create_model() successfully completed......................................
2023-06-14 16:03:24,714:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:24,714:INFO:Creating metrics dataframe
2023-06-14 16:03:24,735:INFO:Initializing Orthogonal Matching Pursuit
2023-06-14 16:03:24,735:INFO:Total runtime is 0.5187681317329407 minutes
2023-06-14 16:03:24,747:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:24,747:INFO:Initializing create_model()
2023-06-14 16:03:24,757:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:24,757:INFO:Checking exceptions
2023-06-14 16:03:24,758:INFO:Importing libraries
2023-06-14 16:03:24,758:INFO:Copying training dataset
2023-06-14 16:03:24,774:INFO:Defining folds
2023-06-14 16:03:24,774:INFO:Declaring metric variables
2023-06-14 16:03:24,786:INFO:Importing untrained model
2023-06-14 16:03:24,796:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-14 16:03:24,813:INFO:Starting cross validation
2023-06-14 16:03:24,815:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:24,966:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:24,998:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:24,998:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:03:25,550:INFO:Calculating mean and std
2023-06-14 16:03:25,552:INFO:Creating metrics dataframe
2023-06-14 16:03:25,768:INFO:Uploading results into container
2023-06-14 16:03:25,769:INFO:Uploading model into container now
2023-06-14 16:03:25,770:INFO:_master_model_container: 25
2023-06-14 16:03:25,770:INFO:_display_container: 3
2023-06-14 16:03:25,770:INFO:OrthogonalMatchingPursuit()
2023-06-14 16:03:25,773:INFO:create_model() successfully completed......................................
2023-06-14 16:03:25,860:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:25,860:INFO:Creating metrics dataframe
2023-06-14 16:03:25,872:INFO:Initializing Bayesian Ridge
2023-06-14 16:03:25,872:INFO:Total runtime is 0.5377181967099508 minutes
2023-06-14 16:03:25,876:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:25,877:INFO:Initializing create_model()
2023-06-14 16:03:25,877:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:25,878:INFO:Checking exceptions
2023-06-14 16:03:25,878:INFO:Importing libraries
2023-06-14 16:03:25,878:INFO:Copying training dataset
2023-06-14 16:03:25,886:INFO:Defining folds
2023-06-14 16:03:25,886:INFO:Declaring metric variables
2023-06-14 16:03:25,895:INFO:Importing untrained model
2023-06-14 16:03:25,902:INFO:Bayesian Ridge Imported successfully
2023-06-14 16:03:25,919:INFO:Starting cross validation
2023-06-14 16:03:25,921:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:26,638:INFO:Calculating mean and std
2023-06-14 16:03:26,640:INFO:Creating metrics dataframe
2023-06-14 16:03:26,866:INFO:Uploading results into container
2023-06-14 16:03:26,867:INFO:Uploading model into container now
2023-06-14 16:03:26,868:INFO:_master_model_container: 26
2023-06-14 16:03:26,868:INFO:_display_container: 3
2023-06-14 16:03:26,869:INFO:BayesianRidge()
2023-06-14 16:03:26,869:INFO:create_model() successfully completed......................................
2023-06-14 16:03:26,964:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:26,964:INFO:Creating metrics dataframe
2023-06-14 16:03:26,978:INFO:Initializing Passive Aggressive Regressor
2023-06-14 16:03:26,978:INFO:Total runtime is 0.5561516642570496 minutes
2023-06-14 16:03:26,983:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:26,983:INFO:Initializing create_model()
2023-06-14 16:03:26,983:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:26,984:INFO:Checking exceptions
2023-06-14 16:03:26,984:INFO:Importing libraries
2023-06-14 16:03:26,984:INFO:Copying training dataset
2023-06-14 16:03:26,991:INFO:Defining folds
2023-06-14 16:03:26,991:INFO:Declaring metric variables
2023-06-14 16:03:27,002:INFO:Importing untrained model
2023-06-14 16:03:27,012:INFO:Passive Aggressive Regressor Imported successfully
2023-06-14 16:03:27,023:INFO:Starting cross validation
2023-06-14 16:03:27,025:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:27,719:INFO:Calculating mean and std
2023-06-14 16:03:27,721:INFO:Creating metrics dataframe
2023-06-14 16:03:27,930:INFO:Uploading results into container
2023-06-14 16:03:27,931:INFO:Uploading model into container now
2023-06-14 16:03:27,931:INFO:_master_model_container: 27
2023-06-14 16:03:27,931:INFO:_display_container: 3
2023-06-14 16:03:27,932:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-14 16:03:27,937:INFO:create_model() successfully completed......................................
2023-06-14 16:03:28,022:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:28,023:INFO:Creating metrics dataframe
2023-06-14 16:03:28,035:INFO:Initializing Huber Regressor
2023-06-14 16:03:28,035:INFO:Total runtime is 0.5737683812777202 minutes
2023-06-14 16:03:28,044:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:28,045:INFO:Initializing create_model()
2023-06-14 16:03:28,045:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:28,046:INFO:Checking exceptions
2023-06-14 16:03:28,046:INFO:Importing libraries
2023-06-14 16:03:28,046:INFO:Copying training dataset
2023-06-14 16:03:28,070:INFO:Defining folds
2023-06-14 16:03:28,071:INFO:Declaring metric variables
2023-06-14 16:03:28,081:INFO:Importing untrained model
2023-06-14 16:03:28,088:INFO:Huber Regressor Imported successfully
2023-06-14 16:03:28,103:INFO:Starting cross validation
2023-06-14 16:03:28,107:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:28,753:INFO:Calculating mean and std
2023-06-14 16:03:28,755:INFO:Creating metrics dataframe
2023-06-14 16:03:28,964:INFO:Uploading results into container
2023-06-14 16:03:28,965:INFO:Uploading model into container now
2023-06-14 16:03:28,965:INFO:_master_model_container: 28
2023-06-14 16:03:28,965:INFO:_display_container: 3
2023-06-14 16:03:28,966:INFO:HuberRegressor()
2023-06-14 16:03:28,966:INFO:create_model() successfully completed......................................
2023-06-14 16:03:29,055:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:29,055:INFO:Creating metrics dataframe
2023-06-14 16:03:29,070:INFO:Initializing K Neighbors Regressor
2023-06-14 16:03:29,071:INFO:Total runtime is 0.591039792696635 minutes
2023-06-14 16:03:29,078:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:29,079:INFO:Initializing create_model()
2023-06-14 16:03:29,079:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:29,079:INFO:Checking exceptions
2023-06-14 16:03:29,080:INFO:Importing libraries
2023-06-14 16:03:29,080:INFO:Copying training dataset
2023-06-14 16:03:29,090:INFO:Defining folds
2023-06-14 16:03:29,091:INFO:Declaring metric variables
2023-06-14 16:03:29,100:INFO:Importing untrained model
2023-06-14 16:03:29,105:INFO:K Neighbors Regressor Imported successfully
2023-06-14 16:03:29,120:INFO:Starting cross validation
2023-06-14 16:03:29,121:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:29,709:INFO:Calculating mean and std
2023-06-14 16:03:29,711:INFO:Creating metrics dataframe
2023-06-14 16:03:29,914:INFO:Uploading results into container
2023-06-14 16:03:29,914:INFO:Uploading model into container now
2023-06-14 16:03:29,915:INFO:_master_model_container: 29
2023-06-14 16:03:29,915:INFO:_display_container: 3
2023-06-14 16:03:29,916:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-14 16:03:29,916:INFO:create_model() successfully completed......................................
2023-06-14 16:03:30,016:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:30,016:INFO:Creating metrics dataframe
2023-06-14 16:03:30,033:INFO:Initializing Decision Tree Regressor
2023-06-14 16:03:30,033:INFO:Total runtime is 0.6070734779040019 minutes
2023-06-14 16:03:30,039:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:30,040:INFO:Initializing create_model()
2023-06-14 16:03:30,040:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:30,040:INFO:Checking exceptions
2023-06-14 16:03:30,041:INFO:Importing libraries
2023-06-14 16:03:30,041:INFO:Copying training dataset
2023-06-14 16:03:30,051:INFO:Defining folds
2023-06-14 16:03:30,051:INFO:Declaring metric variables
2023-06-14 16:03:30,058:INFO:Importing untrained model
2023-06-14 16:03:30,064:INFO:Decision Tree Regressor Imported successfully
2023-06-14 16:03:30,080:INFO:Starting cross validation
2023-06-14 16:03:30,082:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:30,691:INFO:Calculating mean and std
2023-06-14 16:03:30,693:INFO:Creating metrics dataframe
2023-06-14 16:03:30,870:INFO:Uploading results into container
2023-06-14 16:03:30,871:INFO:Uploading model into container now
2023-06-14 16:03:30,872:INFO:_master_model_container: 30
2023-06-14 16:03:30,872:INFO:_display_container: 3
2023-06-14 16:03:30,872:INFO:DecisionTreeRegressor(random_state=123)
2023-06-14 16:03:30,873:INFO:create_model() successfully completed......................................
2023-06-14 16:03:30,960:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:30,960:INFO:Creating metrics dataframe
2023-06-14 16:03:30,973:INFO:Initializing Random Forest Regressor
2023-06-14 16:03:30,973:INFO:Total runtime is 0.6227333943049114 minutes
2023-06-14 16:03:30,979:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:30,980:INFO:Initializing create_model()
2023-06-14 16:03:30,980:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:30,980:INFO:Checking exceptions
2023-06-14 16:03:30,981:INFO:Importing libraries
2023-06-14 16:03:30,981:INFO:Copying training dataset
2023-06-14 16:03:30,987:INFO:Defining folds
2023-06-14 16:03:30,999:INFO:Declaring metric variables
2023-06-14 16:03:31,014:INFO:Importing untrained model
2023-06-14 16:03:31,020:INFO:Random Forest Regressor Imported successfully
2023-06-14 16:03:31,035:INFO:Starting cross validation
2023-06-14 16:03:31,037:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:31,811:INFO:Calculating mean and std
2023-06-14 16:03:31,812:INFO:Creating metrics dataframe
2023-06-14 16:03:32,021:INFO:Uploading results into container
2023-06-14 16:03:32,022:INFO:Uploading model into container now
2023-06-14 16:03:32,022:INFO:_master_model_container: 31
2023-06-14 16:03:32,022:INFO:_display_container: 3
2023-06-14 16:03:32,023:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:03:32,023:INFO:create_model() successfully completed......................................
2023-06-14 16:03:32,110:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:32,110:INFO:Creating metrics dataframe
2023-06-14 16:03:32,124:INFO:Initializing Extra Trees Regressor
2023-06-14 16:03:32,124:INFO:Total runtime is 0.6419168631235759 minutes
2023-06-14 16:03:32,129:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:32,129:INFO:Initializing create_model()
2023-06-14 16:03:32,130:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:32,130:INFO:Checking exceptions
2023-06-14 16:03:32,130:INFO:Importing libraries
2023-06-14 16:03:32,130:INFO:Copying training dataset
2023-06-14 16:03:32,139:INFO:Defining folds
2023-06-14 16:03:32,139:INFO:Declaring metric variables
2023-06-14 16:03:32,147:INFO:Importing untrained model
2023-06-14 16:03:32,157:INFO:Extra Trees Regressor Imported successfully
2023-06-14 16:03:32,172:INFO:Starting cross validation
2023-06-14 16:03:32,173:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:32,899:INFO:Calculating mean and std
2023-06-14 16:03:32,902:INFO:Creating metrics dataframe
2023-06-14 16:03:33,091:INFO:Uploading results into container
2023-06-14 16:03:33,092:INFO:Uploading model into container now
2023-06-14 16:03:33,093:INFO:_master_model_container: 32
2023-06-14 16:03:33,093:INFO:_display_container: 3
2023-06-14 16:03:33,094:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:03:33,094:INFO:create_model() successfully completed......................................
2023-06-14 16:03:33,182:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:33,182:INFO:Creating metrics dataframe
2023-06-14 16:03:33,196:INFO:Initializing AdaBoost Regressor
2023-06-14 16:03:33,196:INFO:Total runtime is 0.6597805221875509 minutes
2023-06-14 16:03:33,200:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:33,201:INFO:Initializing create_model()
2023-06-14 16:03:33,201:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:33,201:INFO:Checking exceptions
2023-06-14 16:03:33,201:INFO:Importing libraries
2023-06-14 16:03:33,202:INFO:Copying training dataset
2023-06-14 16:03:33,210:INFO:Defining folds
2023-06-14 16:03:33,210:INFO:Declaring metric variables
2023-06-14 16:03:33,219:INFO:Importing untrained model
2023-06-14 16:03:33,229:INFO:AdaBoost Regressor Imported successfully
2023-06-14 16:03:33,243:INFO:Starting cross validation
2023-06-14 16:03:33,244:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:33,928:INFO:Calculating mean and std
2023-06-14 16:03:33,930:INFO:Creating metrics dataframe
2023-06-14 16:03:34,097:INFO:Uploading results into container
2023-06-14 16:03:34,098:INFO:Uploading model into container now
2023-06-14 16:03:34,099:INFO:_master_model_container: 33
2023-06-14 16:03:34,099:INFO:_display_container: 3
2023-06-14 16:03:34,099:INFO:AdaBoostRegressor(random_state=123)
2023-06-14 16:03:34,100:INFO:create_model() successfully completed......................................
2023-06-14 16:03:34,187:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:34,188:INFO:Creating metrics dataframe
2023-06-14 16:03:34,203:INFO:Initializing Gradient Boosting Regressor
2023-06-14 16:03:34,203:INFO:Total runtime is 0.6765768170356751 minutes
2023-06-14 16:03:34,208:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:34,208:INFO:Initializing create_model()
2023-06-14 16:03:34,209:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:34,209:INFO:Checking exceptions
2023-06-14 16:03:34,209:INFO:Importing libraries
2023-06-14 16:03:34,210:INFO:Copying training dataset
2023-06-14 16:03:34,217:INFO:Defining folds
2023-06-14 16:03:34,217:INFO:Declaring metric variables
2023-06-14 16:03:34,227:INFO:Importing untrained model
2023-06-14 16:03:34,235:INFO:Gradient Boosting Regressor Imported successfully
2023-06-14 16:03:34,250:INFO:Starting cross validation
2023-06-14 16:03:34,252:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:35,169:INFO:Calculating mean and std
2023-06-14 16:03:35,172:INFO:Creating metrics dataframe
2023-06-14 16:03:35,442:INFO:Uploading results into container
2023-06-14 16:03:35,443:INFO:Uploading model into container now
2023-06-14 16:03:35,443:INFO:_master_model_container: 34
2023-06-14 16:03:35,443:INFO:_display_container: 3
2023-06-14 16:03:35,445:INFO:GradientBoostingRegressor(random_state=123)
2023-06-14 16:03:35,445:INFO:create_model() successfully completed......................................
2023-06-14 16:03:35,616:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:35,616:INFO:Creating metrics dataframe
2023-06-14 16:03:35,650:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 16:03:35,650:INFO:Total runtime is 0.7006938139597575 minutes
2023-06-14 16:03:35,658:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:35,659:INFO:Initializing create_model()
2023-06-14 16:03:35,659:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:35,660:INFO:Checking exceptions
2023-06-14 16:03:35,660:INFO:Importing libraries
2023-06-14 16:03:35,660:INFO:Copying training dataset
2023-06-14 16:03:35,676:INFO:Defining folds
2023-06-14 16:03:35,676:INFO:Declaring metric variables
2023-06-14 16:03:35,687:INFO:Importing untrained model
2023-06-14 16:03:35,697:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 16:03:35,718:INFO:Starting cross validation
2023-06-14 16:03:35,721:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:40,328:INFO:Calculating mean and std
2023-06-14 16:03:40,332:INFO:Creating metrics dataframe
2023-06-14 16:03:40,577:INFO:Uploading results into container
2023-06-14 16:03:40,579:INFO:Uploading model into container now
2023-06-14 16:03:40,580:INFO:_master_model_container: 35
2023-06-14 16:03:40,580:INFO:_display_container: 3
2023-06-14 16:03:40,581:INFO:LGBMRegressor(random_state=123)
2023-06-14 16:03:40,581:INFO:create_model() successfully completed......................................
2023-06-14 16:03:40,694:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:40,695:INFO:Creating metrics dataframe
2023-06-14 16:03:40,728:INFO:Initializing Dummy Regressor
2023-06-14 16:03:40,728:INFO:Total runtime is 0.7853276530901591 minutes
2023-06-14 16:03:40,735:INFO:SubProcess create_model() called ==================================
2023-06-14 16:03:40,735:INFO:Initializing create_model()
2023-06-14 16:03:40,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021FFD7529D0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:40,736:INFO:Checking exceptions
2023-06-14 16:03:40,736:INFO:Importing libraries
2023-06-14 16:03:40,737:INFO:Copying training dataset
2023-06-14 16:03:40,748:INFO:Defining folds
2023-06-14 16:03:40,748:INFO:Declaring metric variables
2023-06-14 16:03:40,754:INFO:Importing untrained model
2023-06-14 16:03:40,768:INFO:Dummy Regressor Imported successfully
2023-06-14 16:03:40,785:INFO:Starting cross validation
2023-06-14 16:03:40,787:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:03:41,523:INFO:Calculating mean and std
2023-06-14 16:03:41,524:INFO:Creating metrics dataframe
2023-06-14 16:03:41,730:INFO:Uploading results into container
2023-06-14 16:03:41,731:INFO:Uploading model into container now
2023-06-14 16:03:41,731:INFO:_master_model_container: 36
2023-06-14 16:03:41,731:INFO:_display_container: 3
2023-06-14 16:03:41,731:INFO:DummyRegressor()
2023-06-14 16:03:41,732:INFO:create_model() successfully completed......................................
2023-06-14 16:03:41,819:INFO:SubProcess create_model() end ==================================
2023-06-14 16:03:41,819:INFO:Creating metrics dataframe
2023-06-14 16:03:41,850:INFO:Initializing create_model()
2023-06-14 16:03:41,851:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:03:41,851:INFO:Checking exceptions
2023-06-14 16:03:41,854:INFO:Importing libraries
2023-06-14 16:03:41,855:INFO:Copying training dataset
2023-06-14 16:03:41,861:INFO:Defining folds
2023-06-14 16:03:41,861:INFO:Declaring metric variables
2023-06-14 16:03:41,861:INFO:Importing untrained model
2023-06-14 16:03:41,861:INFO:Declaring custom model
2023-06-14 16:03:41,864:INFO:Random Forest Regressor Imported successfully
2023-06-14 16:03:41,866:INFO:Cross validation set to False
2023-06-14 16:03:41,866:INFO:Fitting Model
2023-06-14 16:03:42,115:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:03:42,116:INFO:create_model() successfully completed......................................
2023-06-14 16:03:42,252:INFO:_master_model_container: 36
2023-06-14 16:03:42,253:INFO:_display_container: 3
2023-06-14 16:03:42,253:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:03:42,254:INFO:compare_models() successfully completed......................................
2023-06-14 16:23:46,691:INFO:Initializing predict_model()
2023-06-14 16:23:46,691:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F83D0D0D0>)
2023-06-14 16:23:46,692:INFO:Checking exceptions
2023-06-14 16:23:46,692:INFO:Preloading libraries
2023-06-14 16:23:46,695:INFO:Set up data.
2023-06-14 16:23:46,700:INFO:Set up index.
2023-06-14 16:24:59,203:INFO:Initializing predict_model()
2023-06-14 16:24:59,203:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021FFDC36190>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021F83D06E50>)
2023-06-14 16:24:59,203:INFO:Checking exceptions
2023-06-14 16:24:59,203:INFO:Preloading libraries
2023-06-14 16:24:59,207:INFO:Set up data.
2023-06-14 16:24:59,212:INFO:Set up index.
2023-06-14 16:27:25,239:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_ba20ab4d3d76448ba7aabc20a0c2411d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,240:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_6bfe08b065c04a098cac2a2e54261352_affc95f091af482fa7f439184df8c116
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,240:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_d8a3ae302278414482619e6d15e02e23
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,240:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_b9aa7d242ef240048a25203421308bd2_528332eeb841424e8f1c3a141784180f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,240:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_fba332a704ea4e068ceea844eae6571e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,241:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_9b331eb5aa78487b984a6715ac494bb4_258445446d4f476eaeb81fff2a409def
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,241:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_a0ed106b63e6477387d1fcddef015843
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,241:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_0e83f10d73c94582a704c5846086d92a_67ba490034f74a88a59bca6f8ca8f8d3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,241:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_a2cfd1a09f7b459ca428fb561de045ac
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,242:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_bdca768373c8405f86c6e55fc9bb0343_fd9f20c6251143cd84d4b0cadfb5e4a1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,242:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_5f0f4f4cd8b740dd804de25b5daa0181
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,242:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_c3ca8530e8f745b3a0624c6cdf425ecf_51aa21baa29343f582688e641ac4790e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,242:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_6d24b2db218e4abbbaccb24f04bbb95c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,243:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_2be4f29c4fb44508a80218d98fa2323e_32400a6bd8874da287ae1eef89fc7d94
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,243:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_ac1f15ec906d475d9ecafa1640cff93b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,243:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_c7f44e45149242348cfedeedaae8ca1b_d5625bbb00754c9daefa6d8f78501dfb
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,243:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_69a8a18163a045bfbeb1e83fae9eae01
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,244:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_de43eca9b9ec441388e0592089bfec92_377617c5da3548299465555dc9289a61
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,244:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_00ef4bade10d4c42ad3abf4383551ed7
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,244:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_d910761a2c87465b9965cb4094d97905_7ea410e9afd3474b909d8b6d4501074b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,244:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_3b8434df06cc4c09b70ba8578a146395
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,245:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_30c916abc13044e5874056242b5fdf5b_dc0c37c5d8964af5bcdad832060dbb8e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,245:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_bd60870565e741baac0250b12009b68b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,245:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_7c59ef18e29b4bcf8cf80f9e2f89c0bd_b7ef2f2a42ce4a219b410aeecec7a64f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,245:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_dc49df41aeee4547b44590172008871c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,246:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_a0d38f55cdb24e02b822aa3a3482c3ab_c2e9e5a4d55b452b8544c87ac6082468
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,246:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_6cb011404b804f25bef6272280d9d6ed
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,246:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_6c32737eae834a16835caede98fc8960_67d47835fedf40e8b24cb95b042eba89
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,246:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_6efb666e413943edb1a2288d848612c1
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,247:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_5514e549b5c24198a4e67c5d2d98ebc4_b509e9749ad84d16b490e330444f40a8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,248:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_f33aedf2c8bc4d57abd948d0037fda24
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,249:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_5c563ab5328a43448aa0b70a1ac21692_11f116e2ae8f445d9ea37241d4356bce
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,250:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_f2bb8b563d0a4a89af4a342f34be327a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,250:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_9bd11a6b48a740608ead5792515d1e52_33f463f1261043b199a2a9cb6b169d0c
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,251:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_4709dbed762046b5bd1a2e9446f6f62f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,251:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_6807b29505244f7eabdcb71ce0e46a41_9fa8cb4c953845b9bc34c469e8568f1a
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,251:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_5d5d3425a6da4ab187b1ffa3aecca7c5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,252:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_c81aaea635204c38a65109cd9b9344b5_84108fcae2834b668d98a376e351ca91
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,252:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_88ade3e9453e4412b1a31e8b53448fe3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,252:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_d4d9a8b8b17d4ca388f56cad9bdc26e8_6207041979a44bb1a48cc521bcaa19b8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,253:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_2ee6007f596b4e9c8079d56ca03383b3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,253:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_1e826e10e2594c5483a31088c4677ffd_1dda542d3ddc4ddb9efd8447fb76e758
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,253:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_1da3293062cd4a50b162e69718de4ebb
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,253:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_4d99e630785146eea8b8ee8c12c68797_5b742ab3a102496286bc40d91403bd91
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,254:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_261075e1df9b4e4f9eeb13c01a5b0c30
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,254:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_0526f440a80d485891925fb31a677a48_cc76ce9f29ff442684c46a2d1e6404d6
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,254:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_77e1c93a90a846bc9e5cf276933a705e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,254:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_f620c42c88f845d6b5629f91ac45729f_074e2d55934d4f58a86e5f1f8daeeb2e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,255:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_e2bd961a28714d758b94f1bd4736eda8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,255:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_fd53ee40d02d499fb1731765b0517852_c51e8bee77be496cb047e229900e88b5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,255:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_9adf5503b1ba4200883791aecb4aaa35
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,255:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_e130073001354d09a1e9065874eae248_c86a6314a57d4494993dd7bad8d3ed9e
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,256:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_8c3a9af0852d43f89d778ef7db39833b
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,256:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_2904f8a8af5447e19cc86c4a66032d6c_45bbc98ba4684dea8a88a55df5080157
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,256:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_205e5d3770a9429a867451c9d4cc1160
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,256:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_38947802e058493498414c896acd97da_de81fd2624e449bcb7be0d8f569815a5
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,257:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_fedd88107e974eecbf20fc281d0347e8
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,257:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_2ae84365127e4464a32c5aaced728d42_febe0a2bcada4da09409a48a9472bbd3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,257:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_3281636cad78436692eeb2f0d217bbda
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,257:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_78b8df65555e45649bfcc3df9cca7493_dc2ac39f10af4e079c92f52ad692f963
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,257:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_32b621780a624867ad2dc053250fd052
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,258:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_ba4dc07e0752478db033f78c2ce2ce09_2db408868a2c4b81bbfe125ddc198897
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,258:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_f5cb88e713cb438db7302146da19eace
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,258:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_2245eda1ebff463693e63c9108309e2a_f01abb57437c4c80a88a74650d04520f
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,258:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_65c86747d54e4e749929f4ee269945d3
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,259:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_839ace789cf248e0a9e289b0de2de414_2dbac73d0e5e49668e45a4e228074e18
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,259:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_60b7c1c5c68940129f434560f7c27293
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,259:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_62ee1b7657b24a52876d7b56d146d3cb_673d7afce8cd41e1a8df203fc1ff8ef4
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,259:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_92484f8063ff406395508125aebc2953
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,260:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_f9c7ef36592848faaf3a8024a5de0f55_6b1a3c0196fd45c19a49e2a245c2a207
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,260:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_df547a8340d841ca830bf6a0e4eb3e6d
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:25,260:WARNING:C:\Users\zariff\AppData\Roaming\Python\Python39\site-packages\joblib\_memmapping_reducer.py:611: UserWarning: Failed to delete temporary folder: C:\Users\zariff\AppData\Local\Temp\joblib_memmapping_folder_27800_02ab864812af4f00ba25a2200d5ab82d_898f5aae5df6483187d31bc3b8a94912
  warnings.warn("Failed to delete temporary folder: {}"

2023-06-14 16:27:53,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 16:27:53,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 16:27:53,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 16:27:53,081:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-14 16:27:57,053:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-14 16:27:58,065:INFO:PyCaret RegressionExperiment
2023-06-14 16:27:58,065:INFO:Logging name: reg-default-name
2023-06-14 16:27:58,065:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-14 16:27:58,065:INFO:version 3.0.2
2023-06-14 16:27:58,066:INFO:Initializing setup()
2023-06-14 16:27:58,066:INFO:self.USI: 8174
2023-06-14 16:27:58,066:INFO:self._variable_keys: {'gpu_param', 'html_param', 'log_plots_param', 'USI', '_ml_usecase', 'y_train', 'exp_id', 'fold_generator', 'data', 'target_param', 'fold_shuffle_param', '_available_plots', 'X', 'fold_groups_param', 'memory', 'idx', 'n_jobs_param', 'logging_param', 'seed', 'gpu_n_jobs_param', 'pipeline', 'X_train', 'y', 'X_test', 'exp_name_log', 'y_test', 'transform_target_param'}
2023-06-14 16:27:58,066:INFO:Checking environment
2023-06-14 16:27:58,066:INFO:python_version: 3.9.13
2023-06-14 16:27:58,066:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-14 16:27:58,066:INFO:machine: AMD64
2023-06-14 16:27:58,066:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-14 16:27:58,066:INFO:Memory: svmem(total=8285085696, available=1409433600, percent=83.0, used=6875652096, free=1409433600)
2023-06-14 16:27:58,066:INFO:Physical Core: 2
2023-06-14 16:27:58,066:INFO:Logical Core: 4
2023-06-14 16:27:58,066:INFO:Checking libraries
2023-06-14 16:27:58,066:INFO:System:
2023-06-14 16:27:58,066:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-14 16:27:58,067:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-14 16:27:58,067:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-14 16:27:58,067:INFO:PyCaret required dependencies:
2023-06-14 16:27:58,067:INFO:                 pip: 22.2.2
2023-06-14 16:27:58,067:INFO:          setuptools: 63.4.1
2023-06-14 16:27:58,067:INFO:             pycaret: 3.0.2
2023-06-14 16:27:58,067:INFO:             IPython: 7.31.1
2023-06-14 16:27:58,067:INFO:          ipywidgets: 7.6.5
2023-06-14 16:27:58,067:INFO:                tqdm: 4.64.1
2023-06-14 16:27:58,067:INFO:               numpy: 1.21.5
2023-06-14 16:27:58,067:INFO:              pandas: 1.4.4
2023-06-14 16:27:58,067:INFO:              jinja2: 2.11.3
2023-06-14 16:27:58,067:INFO:               scipy: 1.9.1
2023-06-14 16:27:58,067:INFO:              joblib: 1.1.0
2023-06-14 16:27:58,067:INFO:             sklearn: 1.0.2
2023-06-14 16:27:58,067:INFO:                pyod: 1.0.9
2023-06-14 16:27:58,067:INFO:            imblearn: 0.10.1
2023-06-14 16:27:58,068:INFO:   category_encoders: 2.6.1
2023-06-14 16:27:58,068:INFO:            lightgbm: 3.3.5
2023-06-14 16:27:58,068:INFO:               numba: 0.55.1
2023-06-14 16:27:58,068:INFO:            requests: 2.28.1
2023-06-14 16:27:58,068:INFO:          matplotlib: 3.5.2
2023-06-14 16:27:58,068:INFO:          scikitplot: 0.3.7
2023-06-14 16:27:58,068:INFO:         yellowbrick: 1.5
2023-06-14 16:27:58,068:INFO:              plotly: 5.9.0
2023-06-14 16:27:58,068:INFO:             kaleido: 0.2.1
2023-06-14 16:27:58,068:INFO:         statsmodels: 0.13.2
2023-06-14 16:27:58,068:INFO:              sktime: 0.17.0
2023-06-14 16:27:58,068:INFO:               tbats: 1.1.3
2023-06-14 16:27:58,068:INFO:            pmdarima: 2.0.3
2023-06-14 16:27:58,068:INFO:              psutil: 5.9.0
2023-06-14 16:27:58,068:INFO:PyCaret optional dependencies:
2023-06-14 16:27:58,112:INFO:                shap: Not installed
2023-06-14 16:27:58,112:INFO:           interpret: Not installed
2023-06-14 16:27:58,112:INFO:                umap: Not installed
2023-06-14 16:27:58,112:INFO:    pandas_profiling: Not installed
2023-06-14 16:27:58,112:INFO:  explainerdashboard: Not installed
2023-06-14 16:27:58,112:INFO:             autoviz: Not installed
2023-06-14 16:27:58,113:INFO:           fairlearn: Not installed
2023-06-14 16:27:58,113:INFO:             xgboost: Not installed
2023-06-14 16:27:58,113:INFO:            catboost: Not installed
2023-06-14 16:27:58,113:INFO:              kmodes: Not installed
2023-06-14 16:27:58,113:INFO:             mlxtend: Not installed
2023-06-14 16:27:58,113:INFO:       statsforecast: Not installed
2023-06-14 16:27:58,113:INFO:        tune_sklearn: Not installed
2023-06-14 16:27:58,113:INFO:                 ray: Not installed
2023-06-14 16:27:58,113:INFO:            hyperopt: Not installed
2023-06-14 16:27:58,113:INFO:              optuna: Not installed
2023-06-14 16:27:58,113:INFO:               skopt: Not installed
2023-06-14 16:27:58,113:INFO:              mlflow: Not installed
2023-06-14 16:27:58,113:INFO:              gradio: Not installed
2023-06-14 16:27:58,113:INFO:             fastapi: Not installed
2023-06-14 16:27:58,113:INFO:             uvicorn: Not installed
2023-06-14 16:27:58,113:INFO:              m2cgen: Not installed
2023-06-14 16:27:58,113:INFO:           evidently: Not installed
2023-06-14 16:27:58,113:INFO:               fugue: Not installed
2023-06-14 16:27:58,113:INFO:           streamlit: 1.22.0
2023-06-14 16:27:58,114:INFO:             prophet: Not installed
2023-06-14 16:27:58,114:INFO:None
2023-06-14 16:27:58,114:INFO:Set up data.
2023-06-14 16:27:58,119:INFO:Set up train/test split.
2023-06-14 16:27:58,119:INFO:Set up data.
2023-06-14 16:27:58,123:INFO:Set up index.
2023-06-14 16:27:58,124:INFO:Set up folding strategy.
2023-06-14 16:27:58,124:INFO:Assigning column types.
2023-06-14 16:27:58,127:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-14 16:27:58,128:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,133:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,138:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,207:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,257:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,316:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,321:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,326:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,393:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,443:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,443:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,444:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-14 16:27:58,449:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,455:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,521:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,571:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,578:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,583:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,648:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,698:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,700:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-14 16:27:58,710:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,774:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,825:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,825:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,837:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,954:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:58,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:58,956:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-14 16:27:59,035:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,088:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,089:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,165:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,215:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,216:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,216:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-14 16:27:59,291:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,418:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-14 16:27:59,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,470:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-14 16:27:59,598:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,603:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:27:59,818:INFO:Preparing preprocessing pipeline...
2023-06-14 16:27:59,818:INFO:Set up target transformation.
2023-06-14 16:27:59,818:INFO:Set up date feature engineering.
2023-06-14 16:27:59,819:INFO:Set up simple imputation.
2023-06-14 16:27:59,894:INFO:Finished creating preprocessing pipeline.
2023-06-14 16:27:59,907:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-14 16:27:59,907:INFO:Creating final display dataframe.
2023-06-14 16:28:00,134:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (89, 4)
4        Transformed data shape                    (89, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (13, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       8174
2023-06-14 16:28:00,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:28:00,282:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:28:00,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:28:00,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-14 16:28:00,410:INFO:setup() successfully completed in 2.57s...............
2023-06-14 16:28:00,424:INFO:Initializing compare_models()
2023-06-14 16:28:00,424:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-14 16:28:00,424:INFO:Checking exceptions
2023-06-14 16:28:00,429:INFO:Preparing display monitor
2023-06-14 16:28:00,495:INFO:Initializing Linear Regression
2023-06-14 16:28:00,495:INFO:Total runtime is 0.0 minutes
2023-06-14 16:28:00,501:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:00,502:INFO:Initializing create_model()
2023-06-14 16:28:00,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:00,502:INFO:Checking exceptions
2023-06-14 16:28:00,503:INFO:Importing libraries
2023-06-14 16:28:00,503:INFO:Copying training dataset
2023-06-14 16:28:00,511:INFO:Defining folds
2023-06-14 16:28:00,511:INFO:Declaring metric variables
2023-06-14 16:28:00,515:INFO:Importing untrained model
2023-06-14 16:28:00,523:INFO:Linear Regression Imported successfully
2023-06-14 16:28:00,541:INFO:Starting cross validation
2023-06-14 16:28:00,672:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:18,707:INFO:Calculating mean and std
2023-06-14 16:28:18,711:INFO:Creating metrics dataframe
2023-06-14 16:28:18,964:INFO:Uploading results into container
2023-06-14 16:28:18,966:INFO:Uploading model into container now
2023-06-14 16:28:18,966:INFO:_master_model_container: 1
2023-06-14 16:28:18,966:INFO:_display_container: 2
2023-06-14 16:28:18,967:INFO:LinearRegression(n_jobs=-1)
2023-06-14 16:28:18,968:INFO:create_model() successfully completed......................................
2023-06-14 16:28:19,078:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:19,078:INFO:Creating metrics dataframe
2023-06-14 16:28:19,093:INFO:Initializing Lasso Regression
2023-06-14 16:28:19,094:INFO:Total runtime is 0.3099837064743042 minutes
2023-06-14 16:28:19,102:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:19,102:INFO:Initializing create_model()
2023-06-14 16:28:19,103:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:19,103:INFO:Checking exceptions
2023-06-14 16:28:19,103:INFO:Importing libraries
2023-06-14 16:28:19,103:INFO:Copying training dataset
2023-06-14 16:28:19,117:INFO:Defining folds
2023-06-14 16:28:19,117:INFO:Declaring metric variables
2023-06-14 16:28:19,146:INFO:Importing untrained model
2023-06-14 16:28:19,155:INFO:Lasso Regression Imported successfully
2023-06-14 16:28:19,175:INFO:Starting cross validation
2023-06-14 16:28:19,178:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:25,675:INFO:Calculating mean and std
2023-06-14 16:28:25,677:INFO:Creating metrics dataframe
2023-06-14 16:28:25,978:INFO:Uploading results into container
2023-06-14 16:28:25,980:INFO:Uploading model into container now
2023-06-14 16:28:25,980:INFO:_master_model_container: 2
2023-06-14 16:28:25,981:INFO:_display_container: 2
2023-06-14 16:28:25,982:INFO:Lasso(random_state=123)
2023-06-14 16:28:25,982:INFO:create_model() successfully completed......................................
2023-06-14 16:28:26,094:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:26,094:INFO:Creating metrics dataframe
2023-06-14 16:28:26,111:INFO:Initializing Ridge Regression
2023-06-14 16:28:26,111:INFO:Total runtime is 0.4269354224205017 minutes
2023-06-14 16:28:26,119:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:26,120:INFO:Initializing create_model()
2023-06-14 16:28:26,120:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:26,120:INFO:Checking exceptions
2023-06-14 16:28:26,121:INFO:Importing libraries
2023-06-14 16:28:26,121:INFO:Copying training dataset
2023-06-14 16:28:26,132:INFO:Defining folds
2023-06-14 16:28:26,132:INFO:Declaring metric variables
2023-06-14 16:28:26,143:INFO:Importing untrained model
2023-06-14 16:28:26,152:INFO:Ridge Regression Imported successfully
2023-06-14 16:28:26,170:INFO:Starting cross validation
2023-06-14 16:28:26,173:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:26,950:INFO:Calculating mean and std
2023-06-14 16:28:26,952:INFO:Creating metrics dataframe
2023-06-14 16:28:27,212:INFO:Uploading results into container
2023-06-14 16:28:27,213:INFO:Uploading model into container now
2023-06-14 16:28:27,214:INFO:_master_model_container: 3
2023-06-14 16:28:27,214:INFO:_display_container: 2
2023-06-14 16:28:27,215:INFO:Ridge(random_state=123)
2023-06-14 16:28:27,215:INFO:create_model() successfully completed......................................
2023-06-14 16:28:27,320:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:27,321:INFO:Creating metrics dataframe
2023-06-14 16:28:27,339:INFO:Initializing Elastic Net
2023-06-14 16:28:27,339:INFO:Total runtime is 0.44740237792332965 minutes
2023-06-14 16:28:27,345:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:27,345:INFO:Initializing create_model()
2023-06-14 16:28:27,346:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:27,346:INFO:Checking exceptions
2023-06-14 16:28:27,346:INFO:Importing libraries
2023-06-14 16:28:27,346:INFO:Copying training dataset
2023-06-14 16:28:27,356:INFO:Defining folds
2023-06-14 16:28:27,356:INFO:Declaring metric variables
2023-06-14 16:28:27,366:INFO:Importing untrained model
2023-06-14 16:28:27,378:INFO:Elastic Net Imported successfully
2023-06-14 16:28:27,397:INFO:Starting cross validation
2023-06-14 16:28:27,400:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:28,241:INFO:Calculating mean and std
2023-06-14 16:28:28,246:INFO:Creating metrics dataframe
2023-06-14 16:28:28,547:INFO:Uploading results into container
2023-06-14 16:28:28,549:INFO:Uploading model into container now
2023-06-14 16:28:28,550:INFO:_master_model_container: 4
2023-06-14 16:28:28,550:INFO:_display_container: 2
2023-06-14 16:28:28,551:INFO:ElasticNet(random_state=123)
2023-06-14 16:28:28,551:INFO:create_model() successfully completed......................................
2023-06-14 16:28:28,675:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:28,676:INFO:Creating metrics dataframe
2023-06-14 16:28:28,690:INFO:Initializing Least Angle Regression
2023-06-14 16:28:28,691:INFO:Total runtime is 0.46993605693181356 minutes
2023-06-14 16:28:28,697:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:28,698:INFO:Initializing create_model()
2023-06-14 16:28:28,698:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:28,698:INFO:Checking exceptions
2023-06-14 16:28:28,699:INFO:Importing libraries
2023-06-14 16:28:28,699:INFO:Copying training dataset
2023-06-14 16:28:28,714:INFO:Defining folds
2023-06-14 16:28:28,714:INFO:Declaring metric variables
2023-06-14 16:28:28,725:INFO:Importing untrained model
2023-06-14 16:28:28,736:INFO:Least Angle Regression Imported successfully
2023-06-14 16:28:28,753:INFO:Starting cross validation
2023-06-14 16:28:28,758:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:28,951:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:28:29,464:INFO:Calculating mean and std
2023-06-14 16:28:29,466:INFO:Creating metrics dataframe
2023-06-14 16:28:29,663:INFO:Uploading results into container
2023-06-14 16:28:29,665:INFO:Uploading model into container now
2023-06-14 16:28:29,666:INFO:_master_model_container: 5
2023-06-14 16:28:29,666:INFO:_display_container: 2
2023-06-14 16:28:29,666:INFO:Lars(random_state=123)
2023-06-14 16:28:29,667:INFO:create_model() successfully completed......................................
2023-06-14 16:28:29,757:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:29,758:INFO:Creating metrics dataframe
2023-06-14 16:28:29,770:INFO:Initializing Lasso Least Angle Regression
2023-06-14 16:28:29,770:INFO:Total runtime is 0.4879210988680522 minutes
2023-06-14 16:28:29,775:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:29,775:INFO:Initializing create_model()
2023-06-14 16:28:29,776:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:29,776:INFO:Checking exceptions
2023-06-14 16:28:29,776:INFO:Importing libraries
2023-06-14 16:28:29,776:INFO:Copying training dataset
2023-06-14 16:28:29,787:INFO:Defining folds
2023-06-14 16:28:29,787:INFO:Declaring metric variables
2023-06-14 16:28:29,799:INFO:Importing untrained model
2023-06-14 16:28:29,808:INFO:Lasso Least Angle Regression Imported successfully
2023-06-14 16:28:29,823:INFO:Starting cross validation
2023-06-14 16:28:29,825:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:29,981:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:28:29,988:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:28:30,001:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-14 16:28:30,577:INFO:Calculating mean and std
2023-06-14 16:28:30,580:INFO:Creating metrics dataframe
2023-06-14 16:28:30,823:INFO:Uploading results into container
2023-06-14 16:28:30,826:INFO:Uploading model into container now
2023-06-14 16:28:30,828:INFO:_master_model_container: 6
2023-06-14 16:28:30,828:INFO:_display_container: 2
2023-06-14 16:28:30,829:INFO:LassoLars(random_state=123)
2023-06-14 16:28:30,829:INFO:create_model() successfully completed......................................
2023-06-14 16:28:30,928:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:30,929:INFO:Creating metrics dataframe
2023-06-14 16:28:30,940:INFO:Initializing Orthogonal Matching Pursuit
2023-06-14 16:28:30,940:INFO:Total runtime is 0.5074214180310568 minutes
2023-06-14 16:28:30,945:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:30,945:INFO:Initializing create_model()
2023-06-14 16:28:30,945:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:30,946:INFO:Checking exceptions
2023-06-14 16:28:30,946:INFO:Importing libraries
2023-06-14 16:28:30,946:INFO:Copying training dataset
2023-06-14 16:28:30,955:INFO:Defining folds
2023-06-14 16:28:30,955:INFO:Declaring metric variables
2023-06-14 16:28:30,965:INFO:Importing untrained model
2023-06-14 16:28:30,977:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-14 16:28:30,989:INFO:Starting cross validation
2023-06-14 16:28:30,990:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:31,097:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:28:31,109:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:28:31,140:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-14 16:28:31,602:INFO:Calculating mean and std
2023-06-14 16:28:31,603:INFO:Creating metrics dataframe
2023-06-14 16:28:31,846:INFO:Uploading results into container
2023-06-14 16:28:31,847:INFO:Uploading model into container now
2023-06-14 16:28:31,847:INFO:_master_model_container: 7
2023-06-14 16:28:31,848:INFO:_display_container: 2
2023-06-14 16:28:31,849:INFO:OrthogonalMatchingPursuit()
2023-06-14 16:28:31,849:INFO:create_model() successfully completed......................................
2023-06-14 16:28:31,939:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:31,939:INFO:Creating metrics dataframe
2023-06-14 16:28:31,956:INFO:Initializing Bayesian Ridge
2023-06-14 16:28:31,956:INFO:Total runtime is 0.5243550141652426 minutes
2023-06-14 16:28:31,965:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:31,965:INFO:Initializing create_model()
2023-06-14 16:28:31,965:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:31,965:INFO:Checking exceptions
2023-06-14 16:28:31,966:INFO:Importing libraries
2023-06-14 16:28:31,966:INFO:Copying training dataset
2023-06-14 16:28:31,975:INFO:Defining folds
2023-06-14 16:28:31,975:INFO:Declaring metric variables
2023-06-14 16:28:31,985:INFO:Importing untrained model
2023-06-14 16:28:31,996:INFO:Bayesian Ridge Imported successfully
2023-06-14 16:28:32,010:INFO:Starting cross validation
2023-06-14 16:28:32,015:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:32,613:INFO:Calculating mean and std
2023-06-14 16:28:32,615:INFO:Creating metrics dataframe
2023-06-14 16:28:32,794:INFO:Uploading results into container
2023-06-14 16:28:32,795:INFO:Uploading model into container now
2023-06-14 16:28:32,795:INFO:_master_model_container: 8
2023-06-14 16:28:32,795:INFO:_display_container: 2
2023-06-14 16:28:32,796:INFO:BayesianRidge()
2023-06-14 16:28:32,796:INFO:create_model() successfully completed......................................
2023-06-14 16:28:32,881:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:32,881:INFO:Creating metrics dataframe
2023-06-14 16:28:32,898:INFO:Initializing Passive Aggressive Regressor
2023-06-14 16:28:32,898:INFO:Total runtime is 0.5400603095690409 minutes
2023-06-14 16:28:32,908:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:32,909:INFO:Initializing create_model()
2023-06-14 16:28:32,909:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:32,909:INFO:Checking exceptions
2023-06-14 16:28:32,909:INFO:Importing libraries
2023-06-14 16:28:32,910:INFO:Copying training dataset
2023-06-14 16:28:32,917:INFO:Defining folds
2023-06-14 16:28:32,917:INFO:Declaring metric variables
2023-06-14 16:28:32,925:INFO:Importing untrained model
2023-06-14 16:28:32,941:INFO:Passive Aggressive Regressor Imported successfully
2023-06-14 16:28:32,962:INFO:Starting cross validation
2023-06-14 16:28:32,964:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:33,610:INFO:Calculating mean and std
2023-06-14 16:28:33,612:INFO:Creating metrics dataframe
2023-06-14 16:28:33,808:INFO:Uploading results into container
2023-06-14 16:28:33,809:INFO:Uploading model into container now
2023-06-14 16:28:33,809:INFO:_master_model_container: 9
2023-06-14 16:28:33,809:INFO:_display_container: 2
2023-06-14 16:28:33,810:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-14 16:28:33,810:INFO:create_model() successfully completed......................................
2023-06-14 16:28:33,899:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:33,900:INFO:Creating metrics dataframe
2023-06-14 16:28:33,916:INFO:Initializing Huber Regressor
2023-06-14 16:28:33,916:INFO:Total runtime is 0.5570269147555034 minutes
2023-06-14 16:28:33,921:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:33,921:INFO:Initializing create_model()
2023-06-14 16:28:33,922:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:33,922:INFO:Checking exceptions
2023-06-14 16:28:33,922:INFO:Importing libraries
2023-06-14 16:28:33,922:INFO:Copying training dataset
2023-06-14 16:28:33,931:INFO:Defining folds
2023-06-14 16:28:33,932:INFO:Declaring metric variables
2023-06-14 16:28:33,943:INFO:Importing untrained model
2023-06-14 16:28:33,949:INFO:Huber Regressor Imported successfully
2023-06-14 16:28:33,971:INFO:Starting cross validation
2023-06-14 16:28:33,973:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:34,601:INFO:Calculating mean and std
2023-06-14 16:28:34,603:INFO:Creating metrics dataframe
2023-06-14 16:28:34,799:INFO:Uploading results into container
2023-06-14 16:28:34,800:INFO:Uploading model into container now
2023-06-14 16:28:34,801:INFO:_master_model_container: 10
2023-06-14 16:28:34,801:INFO:_display_container: 2
2023-06-14 16:28:34,802:INFO:HuberRegressor()
2023-06-14 16:28:34,802:INFO:create_model() successfully completed......................................
2023-06-14 16:28:34,894:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:34,894:INFO:Creating metrics dataframe
2023-06-14 16:28:34,908:INFO:Initializing K Neighbors Regressor
2023-06-14 16:28:34,909:INFO:Total runtime is 0.573574713865916 minutes
2023-06-14 16:28:34,914:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:34,914:INFO:Initializing create_model()
2023-06-14 16:28:34,915:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:34,915:INFO:Checking exceptions
2023-06-14 16:28:34,915:INFO:Importing libraries
2023-06-14 16:28:34,916:INFO:Copying training dataset
2023-06-14 16:28:34,928:INFO:Defining folds
2023-06-14 16:28:34,928:INFO:Declaring metric variables
2023-06-14 16:28:34,937:INFO:Importing untrained model
2023-06-14 16:28:34,948:INFO:K Neighbors Regressor Imported successfully
2023-06-14 16:28:34,961:INFO:Starting cross validation
2023-06-14 16:28:34,963:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:35,570:INFO:Calculating mean and std
2023-06-14 16:28:35,573:INFO:Creating metrics dataframe
2023-06-14 16:28:35,766:INFO:Uploading results into container
2023-06-14 16:28:35,767:INFO:Uploading model into container now
2023-06-14 16:28:35,767:INFO:_master_model_container: 11
2023-06-14 16:28:35,768:INFO:_display_container: 2
2023-06-14 16:28:35,768:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-14 16:28:35,769:INFO:create_model() successfully completed......................................
2023-06-14 16:28:35,861:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:35,861:INFO:Creating metrics dataframe
2023-06-14 16:28:35,879:INFO:Initializing Decision Tree Regressor
2023-06-14 16:28:35,879:INFO:Total runtime is 0.5897416313489279 minutes
2023-06-14 16:28:35,884:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:35,884:INFO:Initializing create_model()
2023-06-14 16:28:35,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:35,885:INFO:Checking exceptions
2023-06-14 16:28:35,885:INFO:Importing libraries
2023-06-14 16:28:35,886:INFO:Copying training dataset
2023-06-14 16:28:35,895:INFO:Defining folds
2023-06-14 16:28:35,896:INFO:Declaring metric variables
2023-06-14 16:28:35,902:INFO:Importing untrained model
2023-06-14 16:28:35,910:INFO:Decision Tree Regressor Imported successfully
2023-06-14 16:28:35,930:INFO:Starting cross validation
2023-06-14 16:28:35,933:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:36,564:INFO:Calculating mean and std
2023-06-14 16:28:36,566:INFO:Creating metrics dataframe
2023-06-14 16:28:36,762:INFO:Uploading results into container
2023-06-14 16:28:36,763:INFO:Uploading model into container now
2023-06-14 16:28:36,764:INFO:_master_model_container: 12
2023-06-14 16:28:36,764:INFO:_display_container: 2
2023-06-14 16:28:36,764:INFO:DecisionTreeRegressor(random_state=123)
2023-06-14 16:28:36,765:INFO:create_model() successfully completed......................................
2023-06-14 16:28:36,857:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:36,857:INFO:Creating metrics dataframe
2023-06-14 16:28:36,875:INFO:Initializing Random Forest Regressor
2023-06-14 16:28:36,876:INFO:Total runtime is 0.6063585241635641 minutes
2023-06-14 16:28:36,881:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:36,881:INFO:Initializing create_model()
2023-06-14 16:28:36,881:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:36,882:INFO:Checking exceptions
2023-06-14 16:28:36,882:INFO:Importing libraries
2023-06-14 16:28:36,882:INFO:Copying training dataset
2023-06-14 16:28:36,890:INFO:Defining folds
2023-06-14 16:28:36,891:INFO:Declaring metric variables
2023-06-14 16:28:36,901:INFO:Importing untrained model
2023-06-14 16:28:36,913:INFO:Random Forest Regressor Imported successfully
2023-06-14 16:28:36,929:INFO:Starting cross validation
2023-06-14 16:28:36,931:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:37,651:INFO:Calculating mean and std
2023-06-14 16:28:37,654:INFO:Creating metrics dataframe
2023-06-14 16:28:37,843:INFO:Uploading results into container
2023-06-14 16:28:37,844:INFO:Uploading model into container now
2023-06-14 16:28:37,844:INFO:_master_model_container: 13
2023-06-14 16:28:37,845:INFO:_display_container: 2
2023-06-14 16:28:37,845:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:28:37,846:INFO:create_model() successfully completed......................................
2023-06-14 16:28:37,938:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:37,938:INFO:Creating metrics dataframe
2023-06-14 16:28:37,952:INFO:Initializing Extra Trees Regressor
2023-06-14 16:28:37,953:INFO:Total runtime is 0.6243088324864705 minutes
2023-06-14 16:28:37,959:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:37,959:INFO:Initializing create_model()
2023-06-14 16:28:37,960:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:37,960:INFO:Checking exceptions
2023-06-14 16:28:37,960:INFO:Importing libraries
2023-06-14 16:28:37,960:INFO:Copying training dataset
2023-06-14 16:28:37,967:INFO:Defining folds
2023-06-14 16:28:37,967:INFO:Declaring metric variables
2023-06-14 16:28:37,974:INFO:Importing untrained model
2023-06-14 16:28:37,983:INFO:Extra Trees Regressor Imported successfully
2023-06-14 16:28:38,001:INFO:Starting cross validation
2023-06-14 16:28:38,005:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:38,736:INFO:Calculating mean and std
2023-06-14 16:28:38,738:INFO:Creating metrics dataframe
2023-06-14 16:28:38,938:INFO:Uploading results into container
2023-06-14 16:28:38,939:INFO:Uploading model into container now
2023-06-14 16:28:38,940:INFO:_master_model_container: 14
2023-06-14 16:28:38,940:INFO:_display_container: 2
2023-06-14 16:28:38,941:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:28:38,942:INFO:create_model() successfully completed......................................
2023-06-14 16:28:39,035:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:39,035:INFO:Creating metrics dataframe
2023-06-14 16:28:39,055:INFO:Initializing AdaBoost Regressor
2023-06-14 16:28:39,055:INFO:Total runtime is 0.6426757534344991 minutes
2023-06-14 16:28:39,062:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:39,063:INFO:Initializing create_model()
2023-06-14 16:28:39,063:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:39,064:INFO:Checking exceptions
2023-06-14 16:28:39,064:INFO:Importing libraries
2023-06-14 16:28:39,064:INFO:Copying training dataset
2023-06-14 16:28:39,076:INFO:Defining folds
2023-06-14 16:28:39,077:INFO:Declaring metric variables
2023-06-14 16:28:39,084:INFO:Importing untrained model
2023-06-14 16:28:39,093:INFO:AdaBoost Regressor Imported successfully
2023-06-14 16:28:39,111:INFO:Starting cross validation
2023-06-14 16:28:39,115:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:39,910:INFO:Calculating mean and std
2023-06-14 16:28:39,914:INFO:Creating metrics dataframe
2023-06-14 16:28:40,177:INFO:Uploading results into container
2023-06-14 16:28:40,178:INFO:Uploading model into container now
2023-06-14 16:28:40,178:INFO:_master_model_container: 15
2023-06-14 16:28:40,179:INFO:_display_container: 2
2023-06-14 16:28:40,179:INFO:AdaBoostRegressor(random_state=123)
2023-06-14 16:28:40,179:INFO:create_model() successfully completed......................................
2023-06-14 16:28:40,295:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:40,295:INFO:Creating metrics dataframe
2023-06-14 16:28:40,315:INFO:Initializing Gradient Boosting Regressor
2023-06-14 16:28:40,315:INFO:Total runtime is 0.6636760632197062 minutes
2023-06-14 16:28:40,323:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:40,324:INFO:Initializing create_model()
2023-06-14 16:28:40,324:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:40,325:INFO:Checking exceptions
2023-06-14 16:28:40,325:INFO:Importing libraries
2023-06-14 16:28:40,325:INFO:Copying training dataset
2023-06-14 16:28:40,346:INFO:Defining folds
2023-06-14 16:28:40,347:INFO:Declaring metric variables
2023-06-14 16:28:40,357:INFO:Importing untrained model
2023-06-14 16:28:40,366:INFO:Gradient Boosting Regressor Imported successfully
2023-06-14 16:28:40,383:INFO:Starting cross validation
2023-06-14 16:28:40,385:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:41,243:INFO:Calculating mean and std
2023-06-14 16:28:41,247:INFO:Creating metrics dataframe
2023-06-14 16:28:41,496:INFO:Uploading results into container
2023-06-14 16:28:41,497:INFO:Uploading model into container now
2023-06-14 16:28:41,498:INFO:_master_model_container: 16
2023-06-14 16:28:41,498:INFO:_display_container: 2
2023-06-14 16:28:41,499:INFO:GradientBoostingRegressor(random_state=123)
2023-06-14 16:28:41,499:INFO:create_model() successfully completed......................................
2023-06-14 16:28:41,605:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:41,605:INFO:Creating metrics dataframe
2023-06-14 16:28:41,632:INFO:Initializing Light Gradient Boosting Machine
2023-06-14 16:28:41,632:INFO:Total runtime is 0.6856264392534891 minutes
2023-06-14 16:28:41,642:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:41,642:INFO:Initializing create_model()
2023-06-14 16:28:41,642:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:41,643:INFO:Checking exceptions
2023-06-14 16:28:41,643:INFO:Importing libraries
2023-06-14 16:28:41,643:INFO:Copying training dataset
2023-06-14 16:28:41,659:INFO:Defining folds
2023-06-14 16:28:41,660:INFO:Declaring metric variables
2023-06-14 16:28:41,672:INFO:Importing untrained model
2023-06-14 16:28:41,681:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-14 16:28:41,696:INFO:Starting cross validation
2023-06-14 16:28:41,699:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:45,496:INFO:Calculating mean and std
2023-06-14 16:28:45,500:INFO:Creating metrics dataframe
2023-06-14 16:28:45,739:INFO:Uploading results into container
2023-06-14 16:28:45,740:INFO:Uploading model into container now
2023-06-14 16:28:45,741:INFO:_master_model_container: 17
2023-06-14 16:28:45,741:INFO:_display_container: 2
2023-06-14 16:28:45,742:INFO:LGBMRegressor(random_state=123)
2023-06-14 16:28:45,742:INFO:create_model() successfully completed......................................
2023-06-14 16:28:45,850:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:45,850:INFO:Creating metrics dataframe
2023-06-14 16:28:45,874:INFO:Initializing Dummy Regressor
2023-06-14 16:28:45,874:INFO:Total runtime is 0.7563274423281351 minutes
2023-06-14 16:28:45,881:INFO:SubProcess create_model() called ==================================
2023-06-14 16:28:45,882:INFO:Initializing create_model()
2023-06-14 16:28:45,882:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001FE1E6938E0>, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:45,882:INFO:Checking exceptions
2023-06-14 16:28:45,883:INFO:Importing libraries
2023-06-14 16:28:45,883:INFO:Copying training dataset
2023-06-14 16:28:45,891:INFO:Defining folds
2023-06-14 16:28:45,891:INFO:Declaring metric variables
2023-06-14 16:28:45,898:INFO:Importing untrained model
2023-06-14 16:28:45,919:INFO:Dummy Regressor Imported successfully
2023-06-14 16:28:45,938:INFO:Starting cross validation
2023-06-14 16:28:45,941:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-14 16:28:46,533:INFO:Calculating mean and std
2023-06-14 16:28:46,535:INFO:Creating metrics dataframe
2023-06-14 16:28:46,718:INFO:Uploading results into container
2023-06-14 16:28:46,719:INFO:Uploading model into container now
2023-06-14 16:28:46,719:INFO:_master_model_container: 18
2023-06-14 16:28:46,720:INFO:_display_container: 2
2023-06-14 16:28:46,720:INFO:DummyRegressor()
2023-06-14 16:28:46,720:INFO:create_model() successfully completed......................................
2023-06-14 16:28:46,809:INFO:SubProcess create_model() end ==================================
2023-06-14 16:28:46,809:INFO:Creating metrics dataframe
2023-06-14 16:28:46,837:INFO:Initializing create_model()
2023-06-14 16:28:46,837:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-14 16:28:46,837:INFO:Checking exceptions
2023-06-14 16:28:46,841:INFO:Importing libraries
2023-06-14 16:28:46,841:INFO:Copying training dataset
2023-06-14 16:28:46,847:INFO:Defining folds
2023-06-14 16:28:46,848:INFO:Declaring metric variables
2023-06-14 16:28:46,850:INFO:Importing untrained model
2023-06-14 16:28:46,850:INFO:Declaring custom model
2023-06-14 16:28:46,853:INFO:Random Forest Regressor Imported successfully
2023-06-14 16:28:46,855:INFO:Cross validation set to False
2023-06-14 16:28:46,855:INFO:Fitting Model
2023-06-14 16:28:47,095:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:28:47,095:INFO:create_model() successfully completed......................................
2023-06-14 16:28:47,233:INFO:_master_model_container: 18
2023-06-14 16:28:47,234:INFO:_display_container: 2
2023-06-14 16:28:47,234:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-14 16:28:47,234:INFO:compare_models() successfully completed......................................
2023-06-14 16:28:47,283:INFO:Initializing predict_model()
2023-06-14 16:28:47,283:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE25F141F0>)
2023-06-14 16:28:47,283:INFO:Checking exceptions
2023-06-14 16:28:47,283:INFO:Preloading libraries
2023-06-14 16:28:47,286:INFO:Set up data.
2023-06-14 16:28:47,291:INFO:Set up index.
2023-06-14 16:29:15,405:INFO:Initializing predict_model()
2023-06-14 16:29:15,405:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE25F12310>)
2023-06-14 16:29:15,405:INFO:Checking exceptions
2023-06-14 16:29:15,405:INFO:Preloading libraries
2023-06-14 16:29:15,409:INFO:Set up data.
2023-06-14 16:29:15,413:INFO:Set up index.
2023-06-14 16:30:41,915:INFO:Initializing predict_model()
2023-06-14 16:30:41,915:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE25F12E50>)
2023-06-14 16:30:41,915:INFO:Checking exceptions
2023-06-14 16:30:41,915:INFO:Preloading libraries
2023-06-14 16:30:41,919:INFO:Set up data.
2023-06-14 16:30:41,924:INFO:Set up index.
2023-06-14 16:33:04,147:INFO:Initializing predict_model()
2023-06-14 16:33:04,147:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001FE1FFAFA60>, estimator=RandomForestRegressor(n_jobs=-1, random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001FE260ACEE0>)
2023-06-14 16:33:04,147:INFO:Checking exceptions
2023-06-14 16:33:04,147:INFO:Preloading libraries
2023-06-14 16:33:04,152:INFO:Set up data.
2023-06-14 16:33:04,158:INFO:Set up index.
2023-06-15 14:39:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:39:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:39:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:39:05,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:39:21,592:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-15 14:39:24,195:INFO:PyCaret RegressionExperiment
2023-06-15 14:39:24,195:INFO:Logging name: reg-default-name
2023-06-15 14:39:24,195:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 14:39:24,195:INFO:version 3.0.2
2023-06-15 14:39:24,195:INFO:Initializing setup()
2023-06-15 14:39:24,196:INFO:self.USI: 9600
2023-06-15 14:39:24,196:INFO:self._variable_keys: {'fold_generator', 'n_jobs_param', '_ml_usecase', 'html_param', 'X_train', 'pipeline', 'exp_name_log', 'log_plots_param', 'gpu_param', 'seed', 'y', 'y_train', 'exp_id', 'logging_param', 'X_test', 'USI', 'data', '_available_plots', 'X', 'target_param', 'transform_target_param', 'y_test', 'fold_shuffle_param', 'idx', 'gpu_n_jobs_param', 'fold_groups_param', 'memory'}
2023-06-15 14:39:24,196:INFO:Checking environment
2023-06-15 14:39:24,196:INFO:python_version: 3.9.13
2023-06-15 14:39:24,196:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 14:39:24,196:INFO:machine: AMD64
2023-06-15 14:39:24,196:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 14:39:24,197:INFO:Memory: svmem(total=8285085696, available=1276686336, percent=84.6, used=7008399360, free=1276686336)
2023-06-15 14:39:24,197:INFO:Physical Core: 2
2023-06-15 14:39:24,197:INFO:Logical Core: 4
2023-06-15 14:39:24,197:INFO:Checking libraries
2023-06-15 14:39:24,197:INFO:System:
2023-06-15 14:39:24,197:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 14:39:24,197:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 14:39:24,197:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 14:39:24,197:INFO:PyCaret required dependencies:
2023-06-15 14:39:24,197:INFO:                 pip: 22.2.2
2023-06-15 14:39:24,197:INFO:          setuptools: 63.4.1
2023-06-15 14:39:24,197:INFO:             pycaret: 3.0.2
2023-06-15 14:39:24,197:INFO:             IPython: 7.31.1
2023-06-15 14:39:24,198:INFO:          ipywidgets: 7.6.5
2023-06-15 14:39:24,198:INFO:                tqdm: 4.64.1
2023-06-15 14:39:24,198:INFO:               numpy: 1.21.5
2023-06-15 14:39:24,198:INFO:              pandas: 1.4.4
2023-06-15 14:39:24,198:INFO:              jinja2: 2.11.3
2023-06-15 14:39:24,198:INFO:               scipy: 1.9.1
2023-06-15 14:39:24,198:INFO:              joblib: 1.1.0
2023-06-15 14:39:24,198:INFO:             sklearn: 1.0.2
2023-06-15 14:39:24,198:INFO:                pyod: 1.0.9
2023-06-15 14:39:24,198:INFO:            imblearn: 0.10.1
2023-06-15 14:39:24,198:INFO:   category_encoders: 2.6.1
2023-06-15 14:39:24,198:INFO:            lightgbm: 3.3.5
2023-06-15 14:39:24,198:INFO:               numba: 0.55.1
2023-06-15 14:39:24,198:INFO:            requests: 2.28.1
2023-06-15 14:39:24,198:INFO:          matplotlib: 3.5.2
2023-06-15 14:39:24,198:INFO:          scikitplot: 0.3.7
2023-06-15 14:39:24,199:INFO:         yellowbrick: 1.5
2023-06-15 14:39:24,199:INFO:              plotly: 5.9.0
2023-06-15 14:39:24,199:INFO:             kaleido: 0.2.1
2023-06-15 14:39:24,199:INFO:         statsmodels: 0.13.2
2023-06-15 14:39:24,199:INFO:              sktime: 0.17.0
2023-06-15 14:39:24,199:INFO:               tbats: 1.1.3
2023-06-15 14:39:24,199:INFO:            pmdarima: 2.0.3
2023-06-15 14:39:24,199:INFO:              psutil: 5.9.0
2023-06-15 14:39:24,199:INFO:PyCaret optional dependencies:
2023-06-15 14:39:24,248:INFO:                shap: Not installed
2023-06-15 14:39:24,248:INFO:           interpret: Not installed
2023-06-15 14:39:24,248:INFO:                umap: Not installed
2023-06-15 14:39:24,248:INFO:    pandas_profiling: Not installed
2023-06-15 14:39:24,248:INFO:  explainerdashboard: Not installed
2023-06-15 14:39:24,248:INFO:             autoviz: Not installed
2023-06-15 14:39:24,248:INFO:           fairlearn: Not installed
2023-06-15 14:39:24,248:INFO:             xgboost: Not installed
2023-06-15 14:39:24,248:INFO:            catboost: Not installed
2023-06-15 14:39:24,248:INFO:              kmodes: Not installed
2023-06-15 14:39:24,248:INFO:             mlxtend: Not installed
2023-06-15 14:39:24,248:INFO:       statsforecast: Not installed
2023-06-15 14:39:24,248:INFO:        tune_sklearn: Not installed
2023-06-15 14:39:24,249:INFO:                 ray: Not installed
2023-06-15 14:39:24,249:INFO:            hyperopt: Not installed
2023-06-15 14:39:24,249:INFO:              optuna: Not installed
2023-06-15 14:39:24,249:INFO:               skopt: Not installed
2023-06-15 14:39:24,249:INFO:              mlflow: Not installed
2023-06-15 14:39:24,249:INFO:              gradio: Not installed
2023-06-15 14:39:24,249:INFO:             fastapi: Not installed
2023-06-15 14:39:24,249:INFO:             uvicorn: Not installed
2023-06-15 14:39:24,249:INFO:              m2cgen: Not installed
2023-06-15 14:39:24,249:INFO:           evidently: Not installed
2023-06-15 14:39:24,249:INFO:               fugue: Not installed
2023-06-15 14:39:24,249:INFO:           streamlit: 1.22.0
2023-06-15 14:39:24,249:INFO:             prophet: Not installed
2023-06-15 14:39:24,249:INFO:None
2023-06-15 14:39:24,249:INFO:Set up data.
2023-06-15 14:39:24,255:INFO:Set up train/test split.
2023-06-15 14:39:24,255:INFO:Set up data.
2023-06-15 14:39:24,259:INFO:Set up index.
2023-06-15 14:39:24,259:INFO:Set up folding strategy.
2023-06-15 14:39:24,259:INFO:Assigning column types.
2023-06-15 14:39:24,264:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 14:39:24,264:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,270:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,275:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,361:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,713:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,718:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,724:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,790:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,843:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,844:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 14:39:24,849:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,857:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,926:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,982:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:24,989:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:24,994:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,061:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,116:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,117:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 14:39:25,129:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,196:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,248:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,260:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,379:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,380:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 14:39:25,463:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,524:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,600:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,651:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,652:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 14:39:25,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,783:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,861:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:25,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:25,921:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 14:39:26,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:26,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:26,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:26,194:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:26,213:INFO:Preparing preprocessing pipeline...
2023-06-15 14:39:26,213:INFO:Set up target transformation.
2023-06-15 14:39:26,213:INFO:Set up date feature engineering.
2023-06-15 14:39:26,213:INFO:Set up simple imputation.
2023-06-15 14:39:47,102:INFO:PyCaret RegressionExperiment
2023-06-15 14:39:47,102:INFO:Logging name: reg-default-name
2023-06-15 14:39:47,102:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 14:39:47,103:INFO:version 3.0.2
2023-06-15 14:39:47,103:INFO:Initializing setup()
2023-06-15 14:39:47,103:INFO:self.USI: 7f9f
2023-06-15 14:39:47,103:INFO:self._variable_keys: {'fold_generator', 'n_jobs_param', '_ml_usecase', 'html_param', 'X_train', 'pipeline', 'exp_name_log', 'log_plots_param', 'gpu_param', 'seed', 'y', 'y_train', 'exp_id', 'logging_param', 'X_test', 'USI', 'data', '_available_plots', 'X', 'target_param', 'transform_target_param', 'y_test', 'fold_shuffle_param', 'idx', 'gpu_n_jobs_param', 'fold_groups_param', 'memory'}
2023-06-15 14:39:47,103:INFO:Checking environment
2023-06-15 14:39:47,103:INFO:python_version: 3.9.13
2023-06-15 14:39:47,103:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 14:39:47,103:INFO:machine: AMD64
2023-06-15 14:39:47,103:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 14:39:47,104:INFO:Memory: svmem(total=8285085696, available=1134694400, percent=86.3, used=7150391296, free=1134694400)
2023-06-15 14:39:47,104:INFO:Physical Core: 2
2023-06-15 14:39:47,104:INFO:Logical Core: 4
2023-06-15 14:39:47,104:INFO:Checking libraries
2023-06-15 14:39:47,104:INFO:System:
2023-06-15 14:39:47,104:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 14:39:47,104:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 14:39:47,104:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 14:39:47,104:INFO:PyCaret required dependencies:
2023-06-15 14:39:47,105:INFO:                 pip: 22.2.2
2023-06-15 14:39:47,105:INFO:          setuptools: 63.4.1
2023-06-15 14:39:47,105:INFO:             pycaret: 3.0.2
2023-06-15 14:39:47,105:INFO:             IPython: 7.31.1
2023-06-15 14:39:47,105:INFO:          ipywidgets: 7.6.5
2023-06-15 14:39:47,105:INFO:                tqdm: 4.64.1
2023-06-15 14:39:47,105:INFO:               numpy: 1.21.5
2023-06-15 14:39:47,105:INFO:              pandas: 1.4.4
2023-06-15 14:39:47,105:INFO:              jinja2: 2.11.3
2023-06-15 14:39:47,105:INFO:               scipy: 1.9.1
2023-06-15 14:39:47,105:INFO:              joblib: 1.1.0
2023-06-15 14:39:47,106:INFO:             sklearn: 1.0.2
2023-06-15 14:39:47,106:INFO:                pyod: 1.0.9
2023-06-15 14:39:47,106:INFO:            imblearn: 0.10.1
2023-06-15 14:39:47,106:INFO:   category_encoders: 2.6.1
2023-06-15 14:39:47,106:INFO:            lightgbm: 3.3.5
2023-06-15 14:39:47,106:INFO:               numba: 0.55.1
2023-06-15 14:39:47,106:INFO:            requests: 2.28.1
2023-06-15 14:39:47,106:INFO:          matplotlib: 3.5.2
2023-06-15 14:39:47,106:INFO:          scikitplot: 0.3.7
2023-06-15 14:39:47,106:INFO:         yellowbrick: 1.5
2023-06-15 14:39:47,106:INFO:              plotly: 5.9.0
2023-06-15 14:39:47,107:INFO:             kaleido: 0.2.1
2023-06-15 14:39:47,107:INFO:         statsmodels: 0.13.2
2023-06-15 14:39:47,107:INFO:              sktime: 0.17.0
2023-06-15 14:39:47,107:INFO:               tbats: 1.1.3
2023-06-15 14:39:47,107:INFO:            pmdarima: 2.0.3
2023-06-15 14:39:47,107:INFO:              psutil: 5.9.0
2023-06-15 14:39:47,107:INFO:PyCaret optional dependencies:
2023-06-15 14:39:47,107:INFO:                shap: Not installed
2023-06-15 14:39:47,108:INFO:           interpret: Not installed
2023-06-15 14:39:47,108:INFO:                umap: Not installed
2023-06-15 14:39:47,108:INFO:    pandas_profiling: Not installed
2023-06-15 14:39:47,108:INFO:  explainerdashboard: Not installed
2023-06-15 14:39:47,108:INFO:             autoviz: Not installed
2023-06-15 14:39:47,108:INFO:           fairlearn: Not installed
2023-06-15 14:39:47,108:INFO:             xgboost: Not installed
2023-06-15 14:39:47,108:INFO:            catboost: Not installed
2023-06-15 14:39:47,108:INFO:              kmodes: Not installed
2023-06-15 14:39:47,109:INFO:             mlxtend: Not installed
2023-06-15 14:39:47,109:INFO:       statsforecast: Not installed
2023-06-15 14:39:47,109:INFO:        tune_sklearn: Not installed
2023-06-15 14:39:47,109:INFO:                 ray: Not installed
2023-06-15 14:39:47,110:INFO:            hyperopt: Not installed
2023-06-15 14:39:47,110:INFO:              optuna: Not installed
2023-06-15 14:39:47,110:INFO:               skopt: Not installed
2023-06-15 14:39:47,110:INFO:              mlflow: Not installed
2023-06-15 14:39:47,110:INFO:              gradio: Not installed
2023-06-15 14:39:47,110:INFO:             fastapi: Not installed
2023-06-15 14:39:47,110:INFO:             uvicorn: Not installed
2023-06-15 14:39:47,110:INFO:              m2cgen: Not installed
2023-06-15 14:39:47,110:INFO:           evidently: Not installed
2023-06-15 14:39:47,110:INFO:               fugue: Not installed
2023-06-15 14:39:47,111:INFO:           streamlit: 1.22.0
2023-06-15 14:39:47,111:INFO:             prophet: Not installed
2023-06-15 14:39:47,111:INFO:None
2023-06-15 14:39:47,111:INFO:Set up data.
2023-06-15 14:39:47,117:INFO:Set up train/test split.
2023-06-15 14:39:47,117:INFO:Set up data.
2023-06-15 14:39:47,124:INFO:Set up index.
2023-06-15 14:39:47,124:INFO:Set up folding strategy.
2023-06-15 14:39:47,124:INFO:Assigning column types.
2023-06-15 14:39:47,132:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 14:39:47,132:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,139:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,277:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,373:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:47,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:47,376:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,390:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,411:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,598:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,705:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:47,706:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:47,707:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 14:39:47,716:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,728:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:47,899:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,034:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,055:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,210:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,370:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,371:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,371:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,371:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 14:39:48,403:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,573:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,658:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,679:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,797:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,900:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:48,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,901:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:48,902:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 14:39:49,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,093:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,272:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,463:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 14:39:49,620:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,719:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:39:49,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:49,928:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 14:39:50,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:50,255:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:50,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:50,505:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:39:50,507:INFO:Preparing preprocessing pipeline...
2023-06-15 14:39:50,508:INFO:Set up target transformation.
2023-06-15 14:39:50,508:INFO:Set up date feature engineering.
2023-06-15 14:39:50,508:INFO:Set up simple imputation.
2023-06-15 14:46:48,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:46:48,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:46:48,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:46:48,495:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-15 14:46:49,800:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-15 14:46:50,116:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\457040123.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["MONTH"] = [i.month for i in data["BASE_DATE"]]

2023-06-15 14:46:50,117:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\457040123.py:11: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["YEAR"] = [i.year for i in data["BASE_DATE"]]

2023-06-15 14:46:52,436:INFO:PyCaret RegressionExperiment
2023-06-15 14:46:52,436:INFO:Logging name: reg-default-name
2023-06-15 14:46:52,436:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 14:46:52,436:INFO:version 3.0.2
2023-06-15 14:46:52,436:INFO:Initializing setup()
2023-06-15 14:46:52,436:INFO:self.USI: a4cd
2023-06-15 14:46:52,436:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 14:46:52,436:INFO:Checking environment
2023-06-15 14:46:52,436:INFO:python_version: 3.9.13
2023-06-15 14:46:52,436:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 14:46:52,436:INFO:machine: AMD64
2023-06-15 14:46:52,436:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 14:46:52,437:INFO:Memory: svmem(total=8285085696, available=1408761856, percent=83.0, used=6876323840, free=1408761856)
2023-06-15 14:46:52,437:INFO:Physical Core: 2
2023-06-15 14:46:52,437:INFO:Logical Core: 4
2023-06-15 14:46:52,437:INFO:Checking libraries
2023-06-15 14:46:52,437:INFO:System:
2023-06-15 14:46:52,437:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 14:46:52,437:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 14:46:52,437:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 14:46:52,437:INFO:PyCaret required dependencies:
2023-06-15 14:46:52,437:INFO:                 pip: 22.2.2
2023-06-15 14:46:52,437:INFO:          setuptools: 63.4.1
2023-06-15 14:46:52,437:INFO:             pycaret: 3.0.2
2023-06-15 14:46:52,437:INFO:             IPython: 7.31.1
2023-06-15 14:46:52,437:INFO:          ipywidgets: 7.6.5
2023-06-15 14:46:52,438:INFO:                tqdm: 4.64.1
2023-06-15 14:46:52,438:INFO:               numpy: 1.21.5
2023-06-15 14:46:52,438:INFO:              pandas: 1.4.4
2023-06-15 14:46:52,438:INFO:              jinja2: 2.11.3
2023-06-15 14:46:52,438:INFO:               scipy: 1.9.1
2023-06-15 14:46:52,438:INFO:              joblib: 1.1.0
2023-06-15 14:46:52,438:INFO:             sklearn: 1.0.2
2023-06-15 14:46:52,438:INFO:                pyod: 1.0.9
2023-06-15 14:46:52,438:INFO:            imblearn: 0.10.1
2023-06-15 14:46:52,438:INFO:   category_encoders: 2.6.1
2023-06-15 14:46:52,438:INFO:            lightgbm: 3.3.5
2023-06-15 14:46:52,438:INFO:               numba: 0.55.1
2023-06-15 14:46:52,438:INFO:            requests: 2.28.1
2023-06-15 14:46:52,438:INFO:          matplotlib: 3.5.2
2023-06-15 14:46:52,438:INFO:          scikitplot: 0.3.7
2023-06-15 14:46:52,438:INFO:         yellowbrick: 1.5
2023-06-15 14:46:52,438:INFO:              plotly: 5.9.0
2023-06-15 14:46:52,439:INFO:             kaleido: 0.2.1
2023-06-15 14:46:52,439:INFO:         statsmodels: 0.13.2
2023-06-15 14:46:52,439:INFO:              sktime: 0.17.0
2023-06-15 14:46:52,439:INFO:               tbats: 1.1.3
2023-06-15 14:46:52,439:INFO:            pmdarima: 2.0.3
2023-06-15 14:46:52,439:INFO:              psutil: 5.9.0
2023-06-15 14:46:52,439:INFO:PyCaret optional dependencies:
2023-06-15 14:46:52,485:INFO:                shap: Not installed
2023-06-15 14:46:52,485:INFO:           interpret: Not installed
2023-06-15 14:46:52,485:INFO:                umap: Not installed
2023-06-15 14:46:52,485:INFO:    pandas_profiling: Not installed
2023-06-15 14:46:52,485:INFO:  explainerdashboard: Not installed
2023-06-15 14:46:52,485:INFO:             autoviz: Not installed
2023-06-15 14:46:52,485:INFO:           fairlearn: Not installed
2023-06-15 14:46:52,485:INFO:             xgboost: Not installed
2023-06-15 14:46:52,485:INFO:            catboost: Not installed
2023-06-15 14:46:52,485:INFO:              kmodes: Not installed
2023-06-15 14:46:52,485:INFO:             mlxtend: Not installed
2023-06-15 14:46:52,485:INFO:       statsforecast: Not installed
2023-06-15 14:46:52,485:INFO:        tune_sklearn: Not installed
2023-06-15 14:46:52,486:INFO:                 ray: Not installed
2023-06-15 14:46:52,486:INFO:            hyperopt: Not installed
2023-06-15 14:46:52,486:INFO:              optuna: Not installed
2023-06-15 14:46:52,486:INFO:               skopt: Not installed
2023-06-15 14:46:52,486:INFO:              mlflow: Not installed
2023-06-15 14:46:52,486:INFO:              gradio: Not installed
2023-06-15 14:46:52,486:INFO:             fastapi: Not installed
2023-06-15 14:46:52,486:INFO:             uvicorn: Not installed
2023-06-15 14:46:52,486:INFO:              m2cgen: Not installed
2023-06-15 14:46:52,486:INFO:           evidently: Not installed
2023-06-15 14:46:52,486:INFO:               fugue: Not installed
2023-06-15 14:46:52,486:INFO:           streamlit: 1.22.0
2023-06-15 14:46:52,486:INFO:             prophet: Not installed
2023-06-15 14:46:52,486:INFO:None
2023-06-15 14:46:52,486:INFO:Set up data.
2023-06-15 14:46:52,492:INFO:Set up train/test split.
2023-06-15 14:46:52,492:INFO:Set up data.
2023-06-15 14:46:52,497:INFO:Set up index.
2023-06-15 14:46:52,497:INFO:Set up folding strategy.
2023-06-15 14:46:52,497:INFO:Assigning column types.
2023-06-15 14:46:52,501:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 14:46:52,501:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,506:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,513:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,579:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,632:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,664:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,669:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,674:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,744:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,795:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,796:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,796:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 14:46:52,802:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,872:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,925:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,926:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,926:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:52,931:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:46:52,936:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,004:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,070:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,072:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 14:46:53,086:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,174:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,241:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,254:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,326:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,388:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 14:46:53,474:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,605:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,657:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,658:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,658:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,659:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 14:46:53,735:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,792:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,877:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:46:53,933:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,933:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:53,933:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 14:46:54,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:54,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:54,211:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:54,211:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:46:54,214:INFO:Preparing preprocessing pipeline...
2023-06-15 14:46:54,214:INFO:Set up target transformation.
2023-06-15 14:46:54,215:INFO:Set up date feature engineering.
2023-06-15 14:46:54,215:INFO:Set up simple imputation.
2023-06-15 14:52:12,790:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\457040123.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["MONTH"] = [i.month for i in data["BASE_DATE"]]

2023-06-15 14:52:12,792:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\457040123.py:11: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["YEAR"] = [i.year for i in data["BASE_DATE"]]

2023-06-15 14:52:29,519:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\681360630.py:10: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["MONTH"] = [i.month for i in data["BASE_DATE"]]

2023-06-15 14:52:29,520:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\681360630.py:11: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["YEAR"] = [i.year for i in data["BASE_DATE"]]

2023-06-15 14:52:34,848:INFO:PyCaret RegressionExperiment
2023-06-15 14:52:34,848:INFO:Logging name: reg-default-name
2023-06-15 14:52:34,848:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 14:52:34,848:INFO:version 3.0.2
2023-06-15 14:52:34,848:INFO:Initializing setup()
2023-06-15 14:52:34,848:INFO:self.USI: 608d
2023-06-15 14:52:34,848:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 14:52:34,849:INFO:Checking environment
2023-06-15 14:52:34,849:INFO:python_version: 3.9.13
2023-06-15 14:52:34,849:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 14:52:34,849:INFO:machine: AMD64
2023-06-15 14:52:34,849:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 14:52:34,849:INFO:Memory: svmem(total=8285085696, available=1309495296, percent=84.2, used=6975590400, free=1309495296)
2023-06-15 14:52:34,849:INFO:Physical Core: 2
2023-06-15 14:52:34,849:INFO:Logical Core: 4
2023-06-15 14:52:34,849:INFO:Checking libraries
2023-06-15 14:52:34,849:INFO:System:
2023-06-15 14:52:34,849:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 14:52:34,849:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 14:52:34,849:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 14:52:34,849:INFO:PyCaret required dependencies:
2023-06-15 14:52:34,849:INFO:                 pip: 22.2.2
2023-06-15 14:52:34,850:INFO:          setuptools: 63.4.1
2023-06-15 14:52:34,850:INFO:             pycaret: 3.0.2
2023-06-15 14:52:34,850:INFO:             IPython: 7.31.1
2023-06-15 14:52:34,850:INFO:          ipywidgets: 7.6.5
2023-06-15 14:52:34,850:INFO:                tqdm: 4.64.1
2023-06-15 14:52:34,850:INFO:               numpy: 1.21.5
2023-06-15 14:52:34,850:INFO:              pandas: 1.4.4
2023-06-15 14:52:34,850:INFO:              jinja2: 2.11.3
2023-06-15 14:52:34,850:INFO:               scipy: 1.9.1
2023-06-15 14:52:34,850:INFO:              joblib: 1.1.0
2023-06-15 14:52:34,850:INFO:             sklearn: 1.0.2
2023-06-15 14:52:34,850:INFO:                pyod: 1.0.9
2023-06-15 14:52:34,850:INFO:            imblearn: 0.10.1
2023-06-15 14:52:34,850:INFO:   category_encoders: 2.6.1
2023-06-15 14:52:34,850:INFO:            lightgbm: 3.3.5
2023-06-15 14:52:34,850:INFO:               numba: 0.55.1
2023-06-15 14:52:34,850:INFO:            requests: 2.28.1
2023-06-15 14:52:34,850:INFO:          matplotlib: 3.5.2
2023-06-15 14:52:34,850:INFO:          scikitplot: 0.3.7
2023-06-15 14:52:34,851:INFO:         yellowbrick: 1.5
2023-06-15 14:52:34,851:INFO:              plotly: 5.9.0
2023-06-15 14:52:34,851:INFO:             kaleido: 0.2.1
2023-06-15 14:52:34,851:INFO:         statsmodels: 0.13.2
2023-06-15 14:52:34,851:INFO:              sktime: 0.17.0
2023-06-15 14:52:34,851:INFO:               tbats: 1.1.3
2023-06-15 14:52:34,851:INFO:            pmdarima: 2.0.3
2023-06-15 14:52:34,851:INFO:              psutil: 5.9.0
2023-06-15 14:52:34,851:INFO:PyCaret optional dependencies:
2023-06-15 14:52:34,851:INFO:                shap: Not installed
2023-06-15 14:52:34,851:INFO:           interpret: Not installed
2023-06-15 14:52:34,851:INFO:                umap: Not installed
2023-06-15 14:52:34,851:INFO:    pandas_profiling: Not installed
2023-06-15 14:52:34,851:INFO:  explainerdashboard: Not installed
2023-06-15 14:52:34,851:INFO:             autoviz: Not installed
2023-06-15 14:52:34,851:INFO:           fairlearn: Not installed
2023-06-15 14:52:34,851:INFO:             xgboost: Not installed
2023-06-15 14:52:34,852:INFO:            catboost: Not installed
2023-06-15 14:52:34,852:INFO:              kmodes: Not installed
2023-06-15 14:52:34,852:INFO:             mlxtend: Not installed
2023-06-15 14:52:34,852:INFO:       statsforecast: Not installed
2023-06-15 14:52:34,852:INFO:        tune_sklearn: Not installed
2023-06-15 14:52:34,852:INFO:                 ray: Not installed
2023-06-15 14:52:34,853:INFO:            hyperopt: Not installed
2023-06-15 14:52:34,853:INFO:              optuna: Not installed
2023-06-15 14:52:34,853:INFO:               skopt: Not installed
2023-06-15 14:52:34,853:INFO:              mlflow: Not installed
2023-06-15 14:52:34,854:INFO:              gradio: Not installed
2023-06-15 14:52:34,854:INFO:             fastapi: Not installed
2023-06-15 14:52:34,854:INFO:             uvicorn: Not installed
2023-06-15 14:52:34,854:INFO:              m2cgen: Not installed
2023-06-15 14:52:34,854:INFO:           evidently: Not installed
2023-06-15 14:52:34,854:INFO:               fugue: Not installed
2023-06-15 14:52:34,854:INFO:           streamlit: 1.22.0
2023-06-15 14:52:34,854:INFO:             prophet: Not installed
2023-06-15 14:52:34,854:INFO:None
2023-06-15 14:52:34,854:INFO:Set up data.
2023-06-15 14:52:34,860:INFO:Set up train/test split.
2023-06-15 14:52:34,860:INFO:Set up data.
2023-06-15 14:52:34,875:INFO:Set up index.
2023-06-15 14:52:34,875:INFO:Set up folding strategy.
2023-06-15 14:52:34,875:INFO:Assigning column types.
2023-06-15 14:52:34,883:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 14:52:34,883:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:52:34,894:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:52:34,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,034:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,107:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,113:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,119:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,295:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,299:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 14:52:35,305:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,314:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,439:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,528:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,538:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,645:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,741:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,743:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,744:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:35,745:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 14:52:35,807:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:35,915:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,034:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,037:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,038:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,086:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,227:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,344:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 14:52:36,494:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,674:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,753:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,755:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 14:52:36,882:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:36,974:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:36,975:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,094:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:52:37,152:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,154:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 14:52:37,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,329:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,489:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,490:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:37,491:INFO:Preparing preprocessing pipeline...
2023-06-15 14:52:37,492:INFO:Set up target transformation.
2023-06-15 14:52:37,492:INFO:Set up date feature engineering.
2023-06-15 14:52:37,492:INFO:Set up simple imputation.
2023-06-15 14:52:37,596:INFO:Finished creating preprocessing pipeline.
2023-06-15 14:52:37,623:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-15 14:52:37,624:INFO:Creating final display dataframe.
2023-06-15 14:52:37,898:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (94, 4)
4        Transformed data shape                    (94, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (18, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       608d
2023-06-15 14:52:38,157:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:38,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:38,351:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:38,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:52:38,354:INFO:setup() successfully completed in 3.7s...............
2023-06-15 14:52:44,753:INFO:Initializing compare_models()
2023-06-15 14:52:44,755:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 14:52:44,755:INFO:Checking exceptions
2023-06-15 14:52:44,759:INFO:Preparing display monitor
2023-06-15 14:52:44,841:INFO:Initializing Linear Regression
2023-06-15 14:52:44,842:INFO:Total runtime is 1.668532689412435e-05 minutes
2023-06-15 14:52:44,849:INFO:SubProcess create_model() called ==================================
2023-06-15 14:52:44,850:INFO:Initializing create_model()
2023-06-15 14:52:44,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:52:44,851:INFO:Checking exceptions
2023-06-15 14:52:44,851:INFO:Importing libraries
2023-06-15 14:52:44,853:INFO:Copying training dataset
2023-06-15 14:52:44,863:INFO:Defining folds
2023-06-15 14:52:44,863:INFO:Declaring metric variables
2023-06-15 14:52:44,870:INFO:Importing untrained model
2023-06-15 14:52:44,876:INFO:Linear Regression Imported successfully
2023-06-15 14:52:44,897:INFO:Starting cross validation
2023-06-15 14:52:44,989:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:04,541:INFO:Calculating mean and std
2023-06-15 14:53:04,544:INFO:Creating metrics dataframe
2023-06-15 14:53:04,860:INFO:Uploading results into container
2023-06-15 14:53:04,862:INFO:Uploading model into container now
2023-06-15 14:53:04,863:INFO:_master_model_container: 1
2023-06-15 14:53:04,863:INFO:_display_container: 2
2023-06-15 14:53:04,865:INFO:LinearRegression(n_jobs=-1)
2023-06-15 14:53:04,866:INFO:create_model() successfully completed......................................
2023-06-15 14:53:05,023:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:05,023:INFO:Creating metrics dataframe
2023-06-15 14:53:05,045:INFO:Initializing Lasso Regression
2023-06-15 14:53:05,046:INFO:Total runtime is 0.33674573103586836 minutes
2023-06-15 14:53:05,059:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:05,060:INFO:Initializing create_model()
2023-06-15 14:53:05,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:05,060:INFO:Checking exceptions
2023-06-15 14:53:05,060:INFO:Importing libraries
2023-06-15 14:53:05,060:INFO:Copying training dataset
2023-06-15 14:53:05,092:INFO:Defining folds
2023-06-15 14:53:05,092:INFO:Declaring metric variables
2023-06-15 14:53:05,106:INFO:Importing untrained model
2023-06-15 14:53:05,115:INFO:Lasso Regression Imported successfully
2023-06-15 14:53:05,139:INFO:Starting cross validation
2023-06-15 14:53:05,143:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:13,179:INFO:Calculating mean and std
2023-06-15 14:53:13,184:INFO:Creating metrics dataframe
2023-06-15 14:53:13,444:INFO:Uploading results into container
2023-06-15 14:53:13,445:INFO:Uploading model into container now
2023-06-15 14:53:13,446:INFO:_master_model_container: 2
2023-06-15 14:53:13,446:INFO:_display_container: 2
2023-06-15 14:53:13,447:INFO:Lasso(random_state=123)
2023-06-15 14:53:13,447:INFO:create_model() successfully completed......................................
2023-06-15 14:53:13,578:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:13,579:INFO:Creating metrics dataframe
2023-06-15 14:53:13,592:INFO:Initializing Ridge Regression
2023-06-15 14:53:13,592:INFO:Total runtime is 0.47918640375137334 minutes
2023-06-15 14:53:13,596:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:13,597:INFO:Initializing create_model()
2023-06-15 14:53:13,597:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:13,597:INFO:Checking exceptions
2023-06-15 14:53:13,598:INFO:Importing libraries
2023-06-15 14:53:13,599:INFO:Copying training dataset
2023-06-15 14:53:13,608:INFO:Defining folds
2023-06-15 14:53:13,608:INFO:Declaring metric variables
2023-06-15 14:53:13,613:INFO:Importing untrained model
2023-06-15 14:53:13,622:INFO:Ridge Regression Imported successfully
2023-06-15 14:53:13,642:INFO:Starting cross validation
2023-06-15 14:53:13,644:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:14,365:INFO:Calculating mean and std
2023-06-15 14:53:14,367:INFO:Creating metrics dataframe
2023-06-15 14:53:14,565:INFO:Uploading results into container
2023-06-15 14:53:14,566:INFO:Uploading model into container now
2023-06-15 14:53:14,567:INFO:_master_model_container: 3
2023-06-15 14:53:14,567:INFO:_display_container: 2
2023-06-15 14:53:14,568:INFO:Ridge(random_state=123)
2023-06-15 14:53:14,569:INFO:create_model() successfully completed......................................
2023-06-15 14:53:14,660:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:14,660:INFO:Creating metrics dataframe
2023-06-15 14:53:14,672:INFO:Initializing Elastic Net
2023-06-15 14:53:14,672:INFO:Total runtime is 0.497187093893687 minutes
2023-06-15 14:53:14,676:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:14,677:INFO:Initializing create_model()
2023-06-15 14:53:14,677:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:14,677:INFO:Checking exceptions
2023-06-15 14:53:14,678:INFO:Importing libraries
2023-06-15 14:53:14,678:INFO:Copying training dataset
2023-06-15 14:53:14,690:INFO:Defining folds
2023-06-15 14:53:14,691:INFO:Declaring metric variables
2023-06-15 14:53:14,722:INFO:Importing untrained model
2023-06-15 14:53:14,734:INFO:Elastic Net Imported successfully
2023-06-15 14:53:14,745:INFO:Starting cross validation
2023-06-15 14:53:14,747:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:15,398:INFO:Calculating mean and std
2023-06-15 14:53:15,400:INFO:Creating metrics dataframe
2023-06-15 14:53:15,604:INFO:Uploading results into container
2023-06-15 14:53:15,605:INFO:Uploading model into container now
2023-06-15 14:53:15,606:INFO:_master_model_container: 4
2023-06-15 14:53:15,606:INFO:_display_container: 2
2023-06-15 14:53:15,607:INFO:ElasticNet(random_state=123)
2023-06-15 14:53:15,607:INFO:create_model() successfully completed......................................
2023-06-15 14:53:15,706:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:15,706:INFO:Creating metrics dataframe
2023-06-15 14:53:15,719:INFO:Initializing Least Angle Regression
2023-06-15 14:53:15,720:INFO:Total runtime is 0.5146543502807618 minutes
2023-06-15 14:53:15,726:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:15,727:INFO:Initializing create_model()
2023-06-15 14:53:15,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:15,728:INFO:Checking exceptions
2023-06-15 14:53:15,728:INFO:Importing libraries
2023-06-15 14:53:15,728:INFO:Copying training dataset
2023-06-15 14:53:15,740:INFO:Defining folds
2023-06-15 14:53:15,740:INFO:Declaring metric variables
2023-06-15 14:53:15,745:INFO:Importing untrained model
2023-06-15 14:53:15,754:INFO:Least Angle Regression Imported successfully
2023-06-15 14:53:15,772:INFO:Starting cross validation
2023-06-15 14:53:15,774:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:15,927:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:53:15,990:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:53:16,438:INFO:Calculating mean and std
2023-06-15 14:53:16,440:INFO:Creating metrics dataframe
2023-06-15 14:53:16,644:INFO:Uploading results into container
2023-06-15 14:53:16,645:INFO:Uploading model into container now
2023-06-15 14:53:16,646:INFO:_master_model_container: 5
2023-06-15 14:53:16,646:INFO:_display_container: 2
2023-06-15 14:53:16,647:INFO:Lars(random_state=123)
2023-06-15 14:53:16,648:INFO:create_model() successfully completed......................................
2023-06-15 14:53:16,754:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:16,754:INFO:Creating metrics dataframe
2023-06-15 14:53:16,773:INFO:Initializing Lasso Least Angle Regression
2023-06-15 14:53:16,773:INFO:Total runtime is 0.5322050611178081 minutes
2023-06-15 14:53:16,778:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:16,778:INFO:Initializing create_model()
2023-06-15 14:53:16,779:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:16,779:INFO:Checking exceptions
2023-06-15 14:53:16,779:INFO:Importing libraries
2023-06-15 14:53:16,779:INFO:Copying training dataset
2023-06-15 14:53:16,790:INFO:Defining folds
2023-06-15 14:53:16,790:INFO:Declaring metric variables
2023-06-15 14:53:16,798:INFO:Importing untrained model
2023-06-15 14:53:16,802:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 14:53:16,816:INFO:Starting cross validation
2023-06-15 14:53:16,817:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:16,995:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:53:17,000:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:53:17,016:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:53:17,593:INFO:Calculating mean and std
2023-06-15 14:53:17,595:INFO:Creating metrics dataframe
2023-06-15 14:53:17,808:INFO:Uploading results into container
2023-06-15 14:53:17,808:INFO:Uploading model into container now
2023-06-15 14:53:17,809:INFO:_master_model_container: 6
2023-06-15 14:53:17,809:INFO:_display_container: 2
2023-06-15 14:53:17,810:INFO:LassoLars(random_state=123)
2023-06-15 14:53:17,810:INFO:create_model() successfully completed......................................
2023-06-15 14:53:17,904:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:17,904:INFO:Creating metrics dataframe
2023-06-15 14:53:17,917:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 14:53:17,917:INFO:Total runtime is 0.5512724121411642 minutes
2023-06-15 14:53:17,922:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:17,922:INFO:Initializing create_model()
2023-06-15 14:53:17,923:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:17,923:INFO:Checking exceptions
2023-06-15 14:53:17,923:INFO:Importing libraries
2023-06-15 14:53:17,923:INFO:Copying training dataset
2023-06-15 14:53:17,933:INFO:Defining folds
2023-06-15 14:53:17,933:INFO:Declaring metric variables
2023-06-15 14:53:17,942:INFO:Importing untrained model
2023-06-15 14:53:17,952:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 14:53:17,962:INFO:Starting cross validation
2023-06-15 14:53:17,965:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:18,077:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:53:18,105:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:53:18,121:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:53:18,651:INFO:Calculating mean and std
2023-06-15 14:53:18,653:INFO:Creating metrics dataframe
2023-06-15 14:53:18,857:INFO:Uploading results into container
2023-06-15 14:53:18,858:INFO:Uploading model into container now
2023-06-15 14:53:18,859:INFO:_master_model_container: 7
2023-06-15 14:53:18,859:INFO:_display_container: 2
2023-06-15 14:53:18,860:INFO:OrthogonalMatchingPursuit()
2023-06-15 14:53:18,860:INFO:create_model() successfully completed......................................
2023-06-15 14:53:18,979:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:18,979:INFO:Creating metrics dataframe
2023-06-15 14:53:19,001:INFO:Initializing Bayesian Ridge
2023-06-15 14:53:19,003:INFO:Total runtime is 0.5693730711936951 minutes
2023-06-15 14:53:19,009:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:19,010:INFO:Initializing create_model()
2023-06-15 14:53:19,010:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:19,010:INFO:Checking exceptions
2023-06-15 14:53:19,010:INFO:Importing libraries
2023-06-15 14:53:19,010:INFO:Copying training dataset
2023-06-15 14:53:19,023:INFO:Defining folds
2023-06-15 14:53:19,023:INFO:Declaring metric variables
2023-06-15 14:53:19,036:INFO:Importing untrained model
2023-06-15 14:53:19,046:INFO:Bayesian Ridge Imported successfully
2023-06-15 14:53:19,067:INFO:Starting cross validation
2023-06-15 14:53:19,069:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:20,107:INFO:Calculating mean and std
2023-06-15 14:53:20,109:INFO:Creating metrics dataframe
2023-06-15 14:53:20,313:INFO:Uploading results into container
2023-06-15 14:53:20,315:INFO:Uploading model into container now
2023-06-15 14:53:20,317:INFO:_master_model_container: 8
2023-06-15 14:53:20,317:INFO:_display_container: 2
2023-06-15 14:53:20,318:INFO:BayesianRidge()
2023-06-15 14:53:20,318:INFO:create_model() successfully completed......................................
2023-06-15 14:53:20,422:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:20,422:INFO:Creating metrics dataframe
2023-06-15 14:53:20,439:INFO:Initializing Passive Aggressive Regressor
2023-06-15 14:53:20,439:INFO:Total runtime is 0.5933073004086812 minutes
2023-06-15 14:53:20,445:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:20,445:INFO:Initializing create_model()
2023-06-15 14:53:20,445:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:20,445:INFO:Checking exceptions
2023-06-15 14:53:20,446:INFO:Importing libraries
2023-06-15 14:53:20,446:INFO:Copying training dataset
2023-06-15 14:53:20,459:INFO:Defining folds
2023-06-15 14:53:20,459:INFO:Declaring metric variables
2023-06-15 14:53:20,470:INFO:Importing untrained model
2023-06-15 14:53:20,477:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 14:53:20,492:INFO:Starting cross validation
2023-06-15 14:53:20,493:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:21,234:INFO:Calculating mean and std
2023-06-15 14:53:21,235:INFO:Creating metrics dataframe
2023-06-15 14:53:21,440:INFO:Uploading results into container
2023-06-15 14:53:21,441:INFO:Uploading model into container now
2023-06-15 14:53:21,441:INFO:_master_model_container: 9
2023-06-15 14:53:21,442:INFO:_display_container: 2
2023-06-15 14:53:21,442:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:53:21,442:INFO:create_model() successfully completed......................................
2023-06-15 14:53:21,543:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:21,543:INFO:Creating metrics dataframe
2023-06-15 14:53:21,557:INFO:Initializing Huber Regressor
2023-06-15 14:53:21,558:INFO:Total runtime is 0.6119579712549845 minutes
2023-06-15 14:53:21,562:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:21,562:INFO:Initializing create_model()
2023-06-15 14:53:21,564:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:21,564:INFO:Checking exceptions
2023-06-15 14:53:21,564:INFO:Importing libraries
2023-06-15 14:53:21,564:INFO:Copying training dataset
2023-06-15 14:53:21,572:INFO:Defining folds
2023-06-15 14:53:21,572:INFO:Declaring metric variables
2023-06-15 14:53:21,582:INFO:Importing untrained model
2023-06-15 14:53:21,592:INFO:Huber Regressor Imported successfully
2023-06-15 14:53:21,606:INFO:Starting cross validation
2023-06-15 14:53:21,607:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:22,279:INFO:Calculating mean and std
2023-06-15 14:53:22,282:INFO:Creating metrics dataframe
2023-06-15 14:53:22,496:INFO:Uploading results into container
2023-06-15 14:53:22,498:INFO:Uploading model into container now
2023-06-15 14:53:22,498:INFO:_master_model_container: 10
2023-06-15 14:53:22,500:INFO:_display_container: 2
2023-06-15 14:53:22,500:INFO:HuberRegressor()
2023-06-15 14:53:22,500:INFO:create_model() successfully completed......................................
2023-06-15 14:53:22,595:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:22,595:INFO:Creating metrics dataframe
2023-06-15 14:53:22,610:INFO:Initializing K Neighbors Regressor
2023-06-15 14:53:22,610:INFO:Total runtime is 0.6294753114382425 minutes
2023-06-15 14:53:22,615:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:22,615:INFO:Initializing create_model()
2023-06-15 14:53:22,616:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:22,616:INFO:Checking exceptions
2023-06-15 14:53:22,616:INFO:Importing libraries
2023-06-15 14:53:22,616:INFO:Copying training dataset
2023-06-15 14:53:22,627:INFO:Defining folds
2023-06-15 14:53:22,627:INFO:Declaring metric variables
2023-06-15 14:53:22,638:INFO:Importing untrained model
2023-06-15 14:53:22,646:INFO:K Neighbors Regressor Imported successfully
2023-06-15 14:53:22,661:INFO:Starting cross validation
2023-06-15 14:53:22,663:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:23,476:INFO:Calculating mean and std
2023-06-15 14:53:23,479:INFO:Creating metrics dataframe
2023-06-15 14:53:23,741:INFO:Uploading results into container
2023-06-15 14:53:23,743:INFO:Uploading model into container now
2023-06-15 14:53:23,744:INFO:_master_model_container: 11
2023-06-15 14:53:23,744:INFO:_display_container: 2
2023-06-15 14:53:23,745:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 14:53:23,745:INFO:create_model() successfully completed......................................
2023-06-15 14:53:23,879:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:23,880:INFO:Creating metrics dataframe
2023-06-15 14:53:23,906:INFO:Initializing Decision Tree Regressor
2023-06-15 14:53:23,907:INFO:Total runtime is 0.6510927319526671 minutes
2023-06-15 14:53:23,912:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:23,913:INFO:Initializing create_model()
2023-06-15 14:53:23,913:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:23,914:INFO:Checking exceptions
2023-06-15 14:53:23,915:INFO:Importing libraries
2023-06-15 14:53:23,915:INFO:Copying training dataset
2023-06-15 14:53:23,926:INFO:Defining folds
2023-06-15 14:53:23,926:INFO:Declaring metric variables
2023-06-15 14:53:23,940:INFO:Importing untrained model
2023-06-15 14:53:23,952:INFO:Decision Tree Regressor Imported successfully
2023-06-15 14:53:23,968:INFO:Starting cross validation
2023-06-15 14:53:23,970:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:24,745:INFO:Calculating mean and std
2023-06-15 14:53:24,749:INFO:Creating metrics dataframe
2023-06-15 14:53:25,068:INFO:Uploading results into container
2023-06-15 14:53:25,070:INFO:Uploading model into container now
2023-06-15 14:53:25,071:INFO:_master_model_container: 12
2023-06-15 14:53:25,072:INFO:_display_container: 2
2023-06-15 14:53:25,072:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 14:53:25,073:INFO:create_model() successfully completed......................................
2023-06-15 14:53:25,188:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:25,188:INFO:Creating metrics dataframe
2023-06-15 14:53:25,217:INFO:Initializing Random Forest Regressor
2023-06-15 14:53:25,217:INFO:Total runtime is 0.6729269107182819 minutes
2023-06-15 14:53:25,226:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:25,227:INFO:Initializing create_model()
2023-06-15 14:53:25,227:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:25,228:INFO:Checking exceptions
2023-06-15 14:53:25,228:INFO:Importing libraries
2023-06-15 14:53:25,228:INFO:Copying training dataset
2023-06-15 14:53:25,243:INFO:Defining folds
2023-06-15 14:53:25,243:INFO:Declaring metric variables
2023-06-15 14:53:25,254:INFO:Importing untrained model
2023-06-15 14:53:25,266:INFO:Random Forest Regressor Imported successfully
2023-06-15 14:53:25,287:INFO:Starting cross validation
2023-06-15 14:53:25,289:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:26,750:INFO:Calculating mean and std
2023-06-15 14:53:26,752:INFO:Creating metrics dataframe
2023-06-15 14:53:27,020:INFO:Uploading results into container
2023-06-15 14:53:27,022:INFO:Uploading model into container now
2023-06-15 14:53:27,022:INFO:_master_model_container: 13
2023-06-15 14:53:27,023:INFO:_display_container: 2
2023-06-15 14:53:27,023:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 14:53:27,024:INFO:create_model() successfully completed......................................
2023-06-15 14:53:27,135:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:27,135:INFO:Creating metrics dataframe
2023-06-15 14:53:27,149:INFO:Initializing Extra Trees Regressor
2023-06-15 14:53:27,149:INFO:Total runtime is 0.7051280379295348 minutes
2023-06-15 14:53:27,157:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:27,158:INFO:Initializing create_model()
2023-06-15 14:53:27,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:27,158:INFO:Checking exceptions
2023-06-15 14:53:27,158:INFO:Importing libraries
2023-06-15 14:53:27,159:INFO:Copying training dataset
2023-06-15 14:53:27,177:INFO:Defining folds
2023-06-15 14:53:27,177:INFO:Declaring metric variables
2023-06-15 14:53:27,189:INFO:Importing untrained model
2023-06-15 14:53:27,199:INFO:Extra Trees Regressor Imported successfully
2023-06-15 14:53:27,215:INFO:Starting cross validation
2023-06-15 14:53:27,217:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:28,717:INFO:Calculating mean and std
2023-06-15 14:53:28,720:INFO:Creating metrics dataframe
2023-06-15 14:53:29,008:INFO:Uploading results into container
2023-06-15 14:53:29,010:INFO:Uploading model into container now
2023-06-15 14:53:29,011:INFO:_master_model_container: 14
2023-06-15 14:53:29,012:INFO:_display_container: 2
2023-06-15 14:53:29,013:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 14:53:29,014:INFO:create_model() successfully completed......................................
2023-06-15 14:53:29,138:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:29,139:INFO:Creating metrics dataframe
2023-06-15 14:53:29,160:INFO:Initializing AdaBoost Regressor
2023-06-15 14:53:29,160:INFO:Total runtime is 0.7386459747950235 minutes
2023-06-15 14:53:29,169:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:29,170:INFO:Initializing create_model()
2023-06-15 14:53:29,170:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:29,171:INFO:Checking exceptions
2023-06-15 14:53:29,171:INFO:Importing libraries
2023-06-15 14:53:29,171:INFO:Copying training dataset
2023-06-15 14:53:29,186:INFO:Defining folds
2023-06-15 14:53:29,186:INFO:Declaring metric variables
2023-06-15 14:53:29,199:INFO:Importing untrained model
2023-06-15 14:53:29,208:INFO:AdaBoost Regressor Imported successfully
2023-06-15 14:53:29,225:INFO:Starting cross validation
2023-06-15 14:53:29,229:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:29,956:INFO:Calculating mean and std
2023-06-15 14:53:29,960:INFO:Creating metrics dataframe
2023-06-15 14:53:30,189:INFO:Uploading results into container
2023-06-15 14:53:30,190:INFO:Uploading model into container now
2023-06-15 14:53:30,190:INFO:_master_model_container: 15
2023-06-15 14:53:30,191:INFO:_display_container: 2
2023-06-15 14:53:30,191:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 14:53:30,191:INFO:create_model() successfully completed......................................
2023-06-15 14:53:30,288:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:30,288:INFO:Creating metrics dataframe
2023-06-15 14:53:30,306:INFO:Initializing Gradient Boosting Regressor
2023-06-15 14:53:30,306:INFO:Total runtime is 0.757746656735738 minutes
2023-06-15 14:53:30,312:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:30,313:INFO:Initializing create_model()
2023-06-15 14:53:30,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:30,314:INFO:Checking exceptions
2023-06-15 14:53:30,314:INFO:Importing libraries
2023-06-15 14:53:30,314:INFO:Copying training dataset
2023-06-15 14:53:30,323:INFO:Defining folds
2023-06-15 14:53:30,323:INFO:Declaring metric variables
2023-06-15 14:53:30,333:INFO:Importing untrained model
2023-06-15 14:53:30,340:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 14:53:30,354:INFO:Starting cross validation
2023-06-15 14:53:30,356:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:31,171:INFO:Calculating mean and std
2023-06-15 14:53:31,172:INFO:Creating metrics dataframe
2023-06-15 14:53:31,379:INFO:Uploading results into container
2023-06-15 14:53:31,380:INFO:Uploading model into container now
2023-06-15 14:53:31,381:INFO:_master_model_container: 16
2023-06-15 14:53:31,381:INFO:_display_container: 2
2023-06-15 14:53:31,382:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 14:53:31,382:INFO:create_model() successfully completed......................................
2023-06-15 14:53:31,476:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:31,476:INFO:Creating metrics dataframe
2023-06-15 14:53:31,492:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 14:53:31,492:INFO:Total runtime is 0.7775140802065531 minutes
2023-06-15 14:53:31,497:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:31,498:INFO:Initializing create_model()
2023-06-15 14:53:31,498:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:31,498:INFO:Checking exceptions
2023-06-15 14:53:31,498:INFO:Importing libraries
2023-06-15 14:53:31,499:INFO:Copying training dataset
2023-06-15 14:53:31,507:INFO:Defining folds
2023-06-15 14:53:31,507:INFO:Declaring metric variables
2023-06-15 14:53:31,526:INFO:Importing untrained model
2023-06-15 14:53:31,541:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 14:53:31,558:INFO:Starting cross validation
2023-06-15 14:53:31,560:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:35,290:INFO:Calculating mean and std
2023-06-15 14:53:35,292:INFO:Creating metrics dataframe
2023-06-15 14:53:35,541:INFO:Uploading results into container
2023-06-15 14:53:35,542:INFO:Uploading model into container now
2023-06-15 14:53:35,542:INFO:_master_model_container: 17
2023-06-15 14:53:35,543:INFO:_display_container: 2
2023-06-15 14:53:35,543:INFO:LGBMRegressor(random_state=123)
2023-06-15 14:53:35,543:INFO:create_model() successfully completed......................................
2023-06-15 14:53:35,655:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:35,656:INFO:Creating metrics dataframe
2023-06-15 14:53:35,676:INFO:Initializing Dummy Regressor
2023-06-15 14:53:35,676:INFO:Total runtime is 0.8472499767939249 minutes
2023-06-15 14:53:35,684:INFO:SubProcess create_model() called ==================================
2023-06-15 14:53:35,685:INFO:Initializing create_model()
2023-06-15 14:53:35,685:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D42536A90>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:35,685:INFO:Checking exceptions
2023-06-15 14:53:35,686:INFO:Importing libraries
2023-06-15 14:53:35,686:INFO:Copying training dataset
2023-06-15 14:53:35,694:INFO:Defining folds
2023-06-15 14:53:35,694:INFO:Declaring metric variables
2023-06-15 14:53:35,705:INFO:Importing untrained model
2023-06-15 14:53:35,718:INFO:Dummy Regressor Imported successfully
2023-06-15 14:53:35,736:INFO:Starting cross validation
2023-06-15 14:53:35,738:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:53:36,568:INFO:Calculating mean and std
2023-06-15 14:53:36,571:INFO:Creating metrics dataframe
2023-06-15 14:53:36,926:INFO:Uploading results into container
2023-06-15 14:53:36,929:INFO:Uploading model into container now
2023-06-15 14:53:36,930:INFO:_master_model_container: 18
2023-06-15 14:53:36,930:INFO:_display_container: 2
2023-06-15 14:53:36,930:INFO:DummyRegressor()
2023-06-15 14:53:36,931:INFO:create_model() successfully completed......................................
2023-06-15 14:53:37,117:INFO:SubProcess create_model() end ==================================
2023-06-15 14:53:37,118:INFO:Creating metrics dataframe
2023-06-15 14:53:37,168:INFO:Initializing create_model()
2023-06-15 14:53:37,168:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=PassiveAggressiveRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:53:37,168:INFO:Checking exceptions
2023-06-15 14:53:37,171:INFO:Importing libraries
2023-06-15 14:53:37,172:INFO:Copying training dataset
2023-06-15 14:53:37,184:INFO:Defining folds
2023-06-15 14:53:37,185:INFO:Declaring metric variables
2023-06-15 14:53:37,189:INFO:Importing untrained model
2023-06-15 14:53:37,190:INFO:Declaring custom model
2023-06-15 14:53:37,191:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 14:53:37,193:INFO:Cross validation set to False
2023-06-15 14:53:37,193:INFO:Fitting Model
2023-06-15 14:53:37,617:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:53:37,617:INFO:create_model() successfully completed......................................
2023-06-15 14:53:37,827:INFO:_master_model_container: 18
2023-06-15 14:53:37,828:INFO:_display_container: 2
2023-06-15 14:53:37,831:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:53:37,831:INFO:compare_models() successfully completed......................................
2023-06-15 14:53:37,885:INFO:Initializing predict_model()
2023-06-15 14:53:37,886:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D3B0AA6A0>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D4246A280>)
2023-06-15 14:53:37,886:INFO:Checking exceptions
2023-06-15 14:53:37,886:INFO:Preloading libraries
2023-06-15 14:53:37,892:INFO:Set up data.
2023-06-15 14:53:37,905:INFO:Set up index.
2023-06-15 14:56:12,101:INFO:PyCaret RegressionExperiment
2023-06-15 14:56:12,102:INFO:Logging name: reg-default-name
2023-06-15 14:56:12,102:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 14:56:12,103:INFO:version 3.0.2
2023-06-15 14:56:12,103:INFO:Initializing setup()
2023-06-15 14:56:12,103:INFO:self.USI: ea2d
2023-06-15 14:56:12,103:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 14:56:12,103:INFO:Checking environment
2023-06-15 14:56:12,103:INFO:python_version: 3.9.13
2023-06-15 14:56:12,103:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 14:56:12,103:INFO:machine: AMD64
2023-06-15 14:56:12,104:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 14:56:12,104:INFO:Memory: svmem(total=8285085696, available=1066102784, percent=87.1, used=7218982912, free=1066102784)
2023-06-15 14:56:12,104:INFO:Physical Core: 2
2023-06-15 14:56:12,104:INFO:Logical Core: 4
2023-06-15 14:56:12,104:INFO:Checking libraries
2023-06-15 14:56:12,104:INFO:System:
2023-06-15 14:56:12,104:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 14:56:12,104:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 14:56:12,105:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 14:56:12,105:INFO:PyCaret required dependencies:
2023-06-15 14:56:12,105:INFO:                 pip: 22.2.2
2023-06-15 14:56:12,105:INFO:          setuptools: 63.4.1
2023-06-15 14:56:12,105:INFO:             pycaret: 3.0.2
2023-06-15 14:56:12,105:INFO:             IPython: 7.31.1
2023-06-15 14:56:12,106:INFO:          ipywidgets: 7.6.5
2023-06-15 14:56:12,106:INFO:                tqdm: 4.64.1
2023-06-15 14:56:12,106:INFO:               numpy: 1.21.5
2023-06-15 14:56:12,106:INFO:              pandas: 1.4.4
2023-06-15 14:56:12,106:INFO:              jinja2: 2.11.3
2023-06-15 14:56:12,107:INFO:               scipy: 1.9.1
2023-06-15 14:56:12,107:INFO:              joblib: 1.1.0
2023-06-15 14:56:12,108:INFO:             sklearn: 1.0.2
2023-06-15 14:56:12,108:INFO:                pyod: 1.0.9
2023-06-15 14:56:12,109:INFO:            imblearn: 0.10.1
2023-06-15 14:56:12,109:INFO:   category_encoders: 2.6.1
2023-06-15 14:56:12,110:INFO:            lightgbm: 3.3.5
2023-06-15 14:56:12,110:INFO:               numba: 0.55.1
2023-06-15 14:56:12,110:INFO:            requests: 2.28.1
2023-06-15 14:56:12,110:INFO:          matplotlib: 3.5.2
2023-06-15 14:56:12,110:INFO:          scikitplot: 0.3.7
2023-06-15 14:56:12,110:INFO:         yellowbrick: 1.5
2023-06-15 14:56:12,110:INFO:              plotly: 5.9.0
2023-06-15 14:56:12,110:INFO:             kaleido: 0.2.1
2023-06-15 14:56:12,111:INFO:         statsmodels: 0.13.2
2023-06-15 14:56:12,111:INFO:              sktime: 0.17.0
2023-06-15 14:56:12,111:INFO:               tbats: 1.1.3
2023-06-15 14:56:12,111:INFO:            pmdarima: 2.0.3
2023-06-15 14:56:12,111:INFO:              psutil: 5.9.0
2023-06-15 14:56:12,111:INFO:PyCaret optional dependencies:
2023-06-15 14:56:12,111:INFO:                shap: Not installed
2023-06-15 14:56:12,111:INFO:           interpret: Not installed
2023-06-15 14:56:12,112:INFO:                umap: Not installed
2023-06-15 14:56:12,112:INFO:    pandas_profiling: Not installed
2023-06-15 14:56:12,112:INFO:  explainerdashboard: Not installed
2023-06-15 14:56:12,112:INFO:             autoviz: Not installed
2023-06-15 14:56:12,112:INFO:           fairlearn: Not installed
2023-06-15 14:56:12,112:INFO:             xgboost: Not installed
2023-06-15 14:56:12,112:INFO:            catboost: Not installed
2023-06-15 14:56:12,112:INFO:              kmodes: Not installed
2023-06-15 14:56:12,112:INFO:             mlxtend: Not installed
2023-06-15 14:56:12,112:INFO:       statsforecast: Not installed
2023-06-15 14:56:12,112:INFO:        tune_sklearn: Not installed
2023-06-15 14:56:12,112:INFO:                 ray: Not installed
2023-06-15 14:56:12,112:INFO:            hyperopt: Not installed
2023-06-15 14:56:12,112:INFO:              optuna: Not installed
2023-06-15 14:56:12,112:INFO:               skopt: Not installed
2023-06-15 14:56:12,112:INFO:              mlflow: Not installed
2023-06-15 14:56:12,113:INFO:              gradio: Not installed
2023-06-15 14:56:12,113:INFO:             fastapi: Not installed
2023-06-15 14:56:12,113:INFO:             uvicorn: Not installed
2023-06-15 14:56:12,113:INFO:              m2cgen: Not installed
2023-06-15 14:56:12,113:INFO:           evidently: Not installed
2023-06-15 14:56:12,113:INFO:               fugue: Not installed
2023-06-15 14:56:12,113:INFO:           streamlit: 1.22.0
2023-06-15 14:56:12,113:INFO:             prophet: Not installed
2023-06-15 14:56:12,113:INFO:None
2023-06-15 14:56:12,113:INFO:Set up data.
2023-06-15 14:56:12,124:INFO:Set up train/test split.
2023-06-15 14:56:12,124:INFO:Set up data.
2023-06-15 14:56:12,157:INFO:Set up index.
2023-06-15 14:56:12,157:INFO:Set up folding strategy.
2023-06-15 14:56:12,157:INFO:Assigning column types.
2023-06-15 14:56:12,166:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 14:56:12,166:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,179:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,191:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,367:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,453:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:12,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:12,454:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,462:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,468:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,544:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:12,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:12,600:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 14:56:12,605:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,611:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:12,729:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,064:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,065:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,100:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,114:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,262:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,317:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,318:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 14:56:13,330:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,438:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,515:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,517:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,537:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,656:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,757:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,760:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 14:56:13,901:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,972:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:13,973:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:13,973:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,097:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:14,172:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 14:56:14,172:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,173:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 14:56:14,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:14,377:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,528:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 14:56:14,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,624:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 14:56:14,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:14,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:15,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:15,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:15,246:INFO:Preparing preprocessing pipeline...
2023-06-15 14:56:15,246:INFO:Set up target transformation.
2023-06-15 14:56:15,246:INFO:Set up date feature engineering.
2023-06-15 14:56:15,247:INFO:Set up simple imputation.
2023-06-15 14:56:15,339:INFO:Finished creating preprocessing pipeline.
2023-06-15 14:56:15,369:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-15 14:56:15,369:INFO:Creating final display dataframe.
2023-06-15 14:56:15,638:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (94, 4)
4        Transformed data shape                    (94, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (18, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       ea2d
2023-06-15 14:56:16,050:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:16,051:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:16,432:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:16,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 14:56:16,434:INFO:setup() successfully completed in 4.77s...............
2023-06-15 14:56:16,962:INFO:Initializing compare_models()
2023-06-15 14:56:16,962:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 14:56:16,963:INFO:Checking exceptions
2023-06-15 14:56:16,969:INFO:Preparing display monitor
2023-06-15 14:56:17,184:INFO:Initializing Linear Regression
2023-06-15 14:56:17,184:INFO:Total runtime is 0.0 minutes
2023-06-15 14:56:17,202:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:17,205:INFO:Initializing create_model()
2023-06-15 14:56:17,205:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:17,205:INFO:Checking exceptions
2023-06-15 14:56:17,205:INFO:Importing libraries
2023-06-15 14:56:17,205:INFO:Copying training dataset
2023-06-15 14:56:17,240:INFO:Defining folds
2023-06-15 14:56:17,240:INFO:Declaring metric variables
2023-06-15 14:56:17,257:INFO:Importing untrained model
2023-06-15 14:56:17,272:INFO:Linear Regression Imported successfully
2023-06-15 14:56:17,300:INFO:Starting cross validation
2023-06-15 14:56:17,303:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:18,491:INFO:Calculating mean and std
2023-06-15 14:56:18,495:INFO:Creating metrics dataframe
2023-06-15 14:56:18,849:INFO:Uploading results into container
2023-06-15 14:56:18,850:INFO:Uploading model into container now
2023-06-15 14:56:18,851:INFO:_master_model_container: 1
2023-06-15 14:56:18,851:INFO:_display_container: 2
2023-06-15 14:56:18,852:INFO:LinearRegression(n_jobs=-1)
2023-06-15 14:56:18,852:INFO:create_model() successfully completed......................................
2023-06-15 14:56:19,010:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:19,011:INFO:Creating metrics dataframe
2023-06-15 14:56:19,023:INFO:Initializing Lasso Regression
2023-06-15 14:56:19,023:INFO:Total runtime is 0.03065112829208374 minutes
2023-06-15 14:56:19,032:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:19,033:INFO:Initializing create_model()
2023-06-15 14:56:19,033:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:19,034:INFO:Checking exceptions
2023-06-15 14:56:19,034:INFO:Importing libraries
2023-06-15 14:56:19,034:INFO:Copying training dataset
2023-06-15 14:56:19,050:INFO:Defining folds
2023-06-15 14:56:19,050:INFO:Declaring metric variables
2023-06-15 14:56:19,064:INFO:Importing untrained model
2023-06-15 14:56:19,084:INFO:Lasso Regression Imported successfully
2023-06-15 14:56:19,106:INFO:Starting cross validation
2023-06-15 14:56:19,110:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:20,371:INFO:Calculating mean and std
2023-06-15 14:56:20,376:INFO:Creating metrics dataframe
2023-06-15 14:56:20,905:INFO:Uploading results into container
2023-06-15 14:56:20,907:INFO:Uploading model into container now
2023-06-15 14:56:20,910:INFO:_master_model_container: 2
2023-06-15 14:56:20,910:INFO:_display_container: 2
2023-06-15 14:56:20,911:INFO:Lasso(random_state=123)
2023-06-15 14:56:20,912:INFO:create_model() successfully completed......................................
2023-06-15 14:56:21,060:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:21,060:INFO:Creating metrics dataframe
2023-06-15 14:56:21,076:INFO:Initializing Ridge Regression
2023-06-15 14:56:21,076:INFO:Total runtime is 0.06486903826395671 minutes
2023-06-15 14:56:21,084:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:21,084:INFO:Initializing create_model()
2023-06-15 14:56:21,085:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:21,085:INFO:Checking exceptions
2023-06-15 14:56:21,085:INFO:Importing libraries
2023-06-15 14:56:21,085:INFO:Copying training dataset
2023-06-15 14:56:21,129:INFO:Defining folds
2023-06-15 14:56:21,131:INFO:Declaring metric variables
2023-06-15 14:56:21,140:INFO:Importing untrained model
2023-06-15 14:56:21,150:INFO:Ridge Regression Imported successfully
2023-06-15 14:56:21,167:INFO:Starting cross validation
2023-06-15 14:56:21,170:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:22,177:INFO:Calculating mean and std
2023-06-15 14:56:22,180:INFO:Creating metrics dataframe
2023-06-15 14:56:22,468:INFO:Uploading results into container
2023-06-15 14:56:22,469:INFO:Uploading model into container now
2023-06-15 14:56:22,470:INFO:_master_model_container: 3
2023-06-15 14:56:22,470:INFO:_display_container: 2
2023-06-15 14:56:22,471:INFO:Ridge(random_state=123)
2023-06-15 14:56:22,471:INFO:create_model() successfully completed......................................
2023-06-15 14:56:22,599:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:22,599:INFO:Creating metrics dataframe
2023-06-15 14:56:22,621:INFO:Initializing Elastic Net
2023-06-15 14:56:22,621:INFO:Total runtime is 0.0906200369199117 minutes
2023-06-15 14:56:22,629:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:22,630:INFO:Initializing create_model()
2023-06-15 14:56:22,630:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:22,631:INFO:Checking exceptions
2023-06-15 14:56:22,631:INFO:Importing libraries
2023-06-15 14:56:22,631:INFO:Copying training dataset
2023-06-15 14:56:22,674:INFO:Defining folds
2023-06-15 14:56:22,677:INFO:Declaring metric variables
2023-06-15 14:56:22,687:INFO:Importing untrained model
2023-06-15 14:56:22,698:INFO:Elastic Net Imported successfully
2023-06-15 14:56:22,747:INFO:Starting cross validation
2023-06-15 14:56:22,750:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:23,838:INFO:Calculating mean and std
2023-06-15 14:56:23,845:INFO:Creating metrics dataframe
2023-06-15 14:56:24,147:INFO:Uploading results into container
2023-06-15 14:56:24,148:INFO:Uploading model into container now
2023-06-15 14:56:24,150:INFO:_master_model_container: 4
2023-06-15 14:56:24,150:INFO:_display_container: 2
2023-06-15 14:56:24,151:INFO:ElasticNet(random_state=123)
2023-06-15 14:56:24,151:INFO:create_model() successfully completed......................................
2023-06-15 14:56:24,281:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:24,281:INFO:Creating metrics dataframe
2023-06-15 14:56:24,300:INFO:Initializing Least Angle Regression
2023-06-15 14:56:24,300:INFO:Total runtime is 0.11860440174738567 minutes
2023-06-15 14:56:24,306:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:24,307:INFO:Initializing create_model()
2023-06-15 14:56:24,308:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:24,308:INFO:Checking exceptions
2023-06-15 14:56:24,308:INFO:Importing libraries
2023-06-15 14:56:24,309:INFO:Copying training dataset
2023-06-15 14:56:24,323:INFO:Defining folds
2023-06-15 14:56:24,324:INFO:Declaring metric variables
2023-06-15 14:56:24,335:INFO:Importing untrained model
2023-06-15 14:56:24,345:INFO:Least Angle Regression Imported successfully
2023-06-15 14:56:24,365:INFO:Starting cross validation
2023-06-15 14:56:24,368:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:24,537:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:24,544:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:24,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:25,229:INFO:Calculating mean and std
2023-06-15 14:56:25,232:INFO:Creating metrics dataframe
2023-06-15 14:56:25,606:INFO:Uploading results into container
2023-06-15 14:56:25,609:INFO:Uploading model into container now
2023-06-15 14:56:25,610:INFO:_master_model_container: 5
2023-06-15 14:56:25,610:INFO:_display_container: 2
2023-06-15 14:56:25,611:INFO:Lars(random_state=123)
2023-06-15 14:56:25,611:INFO:create_model() successfully completed......................................
2023-06-15 14:56:25,765:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:25,765:INFO:Creating metrics dataframe
2023-06-15 14:56:25,794:INFO:Initializing Lasso Least Angle Regression
2023-06-15 14:56:25,794:INFO:Total runtime is 0.1435141404469808 minutes
2023-06-15 14:56:25,814:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:25,818:INFO:Initializing create_model()
2023-06-15 14:56:25,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:25,819:INFO:Checking exceptions
2023-06-15 14:56:25,819:INFO:Importing libraries
2023-06-15 14:56:25,819:INFO:Copying training dataset
2023-06-15 14:56:25,843:INFO:Defining folds
2023-06-15 14:56:25,843:INFO:Declaring metric variables
2023-06-15 14:56:25,855:INFO:Importing untrained model
2023-06-15 14:56:25,876:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 14:56:25,900:INFO:Starting cross validation
2023-06-15 14:56:25,903:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:26,187:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:56:26,194:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:56:26,236:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 14:56:27,024:INFO:Calculating mean and std
2023-06-15 14:56:27,028:INFO:Creating metrics dataframe
2023-06-15 14:56:27,368:INFO:Uploading results into container
2023-06-15 14:56:27,369:INFO:Uploading model into container now
2023-06-15 14:56:27,370:INFO:_master_model_container: 6
2023-06-15 14:56:27,370:INFO:_display_container: 2
2023-06-15 14:56:27,371:INFO:LassoLars(random_state=123)
2023-06-15 14:56:27,371:INFO:create_model() successfully completed......................................
2023-06-15 14:56:27,577:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:27,578:INFO:Creating metrics dataframe
2023-06-15 14:56:27,605:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 14:56:27,606:INFO:Total runtime is 0.17371511459350586 minutes
2023-06-15 14:56:27,618:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:27,618:INFO:Initializing create_model()
2023-06-15 14:56:27,619:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:27,619:INFO:Checking exceptions
2023-06-15 14:56:27,619:INFO:Importing libraries
2023-06-15 14:56:27,620:INFO:Copying training dataset
2023-06-15 14:56:27,637:INFO:Defining folds
2023-06-15 14:56:27,637:INFO:Declaring metric variables
2023-06-15 14:56:27,649:INFO:Importing untrained model
2023-06-15 14:56:27,662:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 14:56:27,678:INFO:Starting cross validation
2023-06-15 14:56:27,680:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:27,860:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:27,870:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:27,880:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 14:56:28,484:INFO:Calculating mean and std
2023-06-15 14:56:28,486:INFO:Creating metrics dataframe
2023-06-15 14:56:28,767:INFO:Uploading results into container
2023-06-15 14:56:28,768:INFO:Uploading model into container now
2023-06-15 14:56:28,769:INFO:_master_model_container: 7
2023-06-15 14:56:28,769:INFO:_display_container: 2
2023-06-15 14:56:28,769:INFO:OrthogonalMatchingPursuit()
2023-06-15 14:56:28,770:INFO:create_model() successfully completed......................................
2023-06-15 14:56:28,868:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:28,868:INFO:Creating metrics dataframe
2023-06-15 14:56:28,881:INFO:Initializing Bayesian Ridge
2023-06-15 14:56:28,881:INFO:Total runtime is 0.19495676358540853 minutes
2023-06-15 14:56:28,886:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:28,887:INFO:Initializing create_model()
2023-06-15 14:56:28,887:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:28,887:INFO:Checking exceptions
2023-06-15 14:56:28,887:INFO:Importing libraries
2023-06-15 14:56:28,888:INFO:Copying training dataset
2023-06-15 14:56:28,899:INFO:Defining folds
2023-06-15 14:56:28,900:INFO:Declaring metric variables
2023-06-15 14:56:28,911:INFO:Importing untrained model
2023-06-15 14:56:28,918:INFO:Bayesian Ridge Imported successfully
2023-06-15 14:56:28,931:INFO:Starting cross validation
2023-06-15 14:56:28,933:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:29,687:INFO:Calculating mean and std
2023-06-15 14:56:29,689:INFO:Creating metrics dataframe
2023-06-15 14:56:29,934:INFO:Uploading results into container
2023-06-15 14:56:29,935:INFO:Uploading model into container now
2023-06-15 14:56:29,936:INFO:_master_model_container: 8
2023-06-15 14:56:29,936:INFO:_display_container: 2
2023-06-15 14:56:29,937:INFO:BayesianRidge()
2023-06-15 14:56:29,937:INFO:create_model() successfully completed......................................
2023-06-15 14:56:30,039:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:30,040:INFO:Creating metrics dataframe
2023-06-15 14:56:30,053:INFO:Initializing Passive Aggressive Regressor
2023-06-15 14:56:30,053:INFO:Total runtime is 0.21449099779129027 minutes
2023-06-15 14:56:30,058:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:30,060:INFO:Initializing create_model()
2023-06-15 14:56:30,060:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:30,060:INFO:Checking exceptions
2023-06-15 14:56:30,060:INFO:Importing libraries
2023-06-15 14:56:30,060:INFO:Copying training dataset
2023-06-15 14:56:30,069:INFO:Defining folds
2023-06-15 14:56:30,069:INFO:Declaring metric variables
2023-06-15 14:56:30,075:INFO:Importing untrained model
2023-06-15 14:56:30,081:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 14:56:30,097:INFO:Starting cross validation
2023-06-15 14:56:30,101:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:30,747:INFO:Calculating mean and std
2023-06-15 14:56:30,749:INFO:Creating metrics dataframe
2023-06-15 14:56:30,945:INFO:Uploading results into container
2023-06-15 14:56:30,946:INFO:Uploading model into container now
2023-06-15 14:56:30,947:INFO:_master_model_container: 9
2023-06-15 14:56:30,947:INFO:_display_container: 2
2023-06-15 14:56:30,948:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:56:30,949:INFO:create_model() successfully completed......................................
2023-06-15 14:56:31,046:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:31,047:INFO:Creating metrics dataframe
2023-06-15 14:56:31,061:INFO:Initializing Huber Regressor
2023-06-15 14:56:31,061:INFO:Total runtime is 0.23129169940948485 minutes
2023-06-15 14:56:31,065:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:31,066:INFO:Initializing create_model()
2023-06-15 14:56:31,066:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:31,066:INFO:Checking exceptions
2023-06-15 14:56:31,066:INFO:Importing libraries
2023-06-15 14:56:31,067:INFO:Copying training dataset
2023-06-15 14:56:31,076:INFO:Defining folds
2023-06-15 14:56:31,077:INFO:Declaring metric variables
2023-06-15 14:56:31,085:INFO:Importing untrained model
2023-06-15 14:56:31,094:INFO:Huber Regressor Imported successfully
2023-06-15 14:56:31,107:INFO:Starting cross validation
2023-06-15 14:56:31,110:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:31,880:INFO:Calculating mean and std
2023-06-15 14:56:31,882:INFO:Creating metrics dataframe
2023-06-15 14:56:32,152:INFO:Uploading results into container
2023-06-15 14:56:32,153:INFO:Uploading model into container now
2023-06-15 14:56:32,154:INFO:_master_model_container: 10
2023-06-15 14:56:32,154:INFO:_display_container: 2
2023-06-15 14:56:32,154:INFO:HuberRegressor()
2023-06-15 14:56:32,155:INFO:create_model() successfully completed......................................
2023-06-15 14:56:32,257:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:32,257:INFO:Creating metrics dataframe
2023-06-15 14:56:32,274:INFO:Initializing K Neighbors Regressor
2023-06-15 14:56:32,274:INFO:Total runtime is 0.2515003124872843 minutes
2023-06-15 14:56:32,279:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:32,280:INFO:Initializing create_model()
2023-06-15 14:56:32,280:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:32,280:INFO:Checking exceptions
2023-06-15 14:56:32,280:INFO:Importing libraries
2023-06-15 14:56:32,280:INFO:Copying training dataset
2023-06-15 14:56:32,291:INFO:Defining folds
2023-06-15 14:56:32,292:INFO:Declaring metric variables
2023-06-15 14:56:32,311:INFO:Importing untrained model
2023-06-15 14:56:32,318:INFO:K Neighbors Regressor Imported successfully
2023-06-15 14:56:32,332:INFO:Starting cross validation
2023-06-15 14:56:32,334:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:33,069:INFO:Calculating mean and std
2023-06-15 14:56:33,071:INFO:Creating metrics dataframe
2023-06-15 14:56:33,347:INFO:Uploading results into container
2023-06-15 14:56:33,348:INFO:Uploading model into container now
2023-06-15 14:56:33,351:INFO:_master_model_container: 11
2023-06-15 14:56:33,351:INFO:_display_container: 2
2023-06-15 14:56:33,352:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 14:56:33,352:INFO:create_model() successfully completed......................................
2023-06-15 14:56:33,471:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:33,471:INFO:Creating metrics dataframe
2023-06-15 14:56:33,492:INFO:Initializing Decision Tree Regressor
2023-06-15 14:56:33,492:INFO:Total runtime is 0.27180110216140746 minutes
2023-06-15 14:56:33,501:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:33,501:INFO:Initializing create_model()
2023-06-15 14:56:33,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:33,502:INFO:Checking exceptions
2023-06-15 14:56:33,502:INFO:Importing libraries
2023-06-15 14:56:33,502:INFO:Copying training dataset
2023-06-15 14:56:33,510:INFO:Defining folds
2023-06-15 14:56:33,510:INFO:Declaring metric variables
2023-06-15 14:56:33,518:INFO:Importing untrained model
2023-06-15 14:56:33,527:INFO:Decision Tree Regressor Imported successfully
2023-06-15 14:56:33,554:INFO:Starting cross validation
2023-06-15 14:56:33,559:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:34,263:INFO:Calculating mean and std
2023-06-15 14:56:34,264:INFO:Creating metrics dataframe
2023-06-15 14:56:34,521:INFO:Uploading results into container
2023-06-15 14:56:34,522:INFO:Uploading model into container now
2023-06-15 14:56:34,524:INFO:_master_model_container: 12
2023-06-15 14:56:34,524:INFO:_display_container: 2
2023-06-15 14:56:34,524:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 14:56:34,524:INFO:create_model() successfully completed......................................
2023-06-15 14:56:34,629:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:34,629:INFO:Creating metrics dataframe
2023-06-15 14:56:34,644:INFO:Initializing Random Forest Regressor
2023-06-15 14:56:34,645:INFO:Total runtime is 0.2910184343655904 minutes
2023-06-15 14:56:34,650:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:34,651:INFO:Initializing create_model()
2023-06-15 14:56:34,651:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:34,652:INFO:Checking exceptions
2023-06-15 14:56:34,652:INFO:Importing libraries
2023-06-15 14:56:34,652:INFO:Copying training dataset
2023-06-15 14:56:34,660:INFO:Defining folds
2023-06-15 14:56:34,660:INFO:Declaring metric variables
2023-06-15 14:56:34,667:INFO:Importing untrained model
2023-06-15 14:56:34,679:INFO:Random Forest Regressor Imported successfully
2023-06-15 14:56:34,692:INFO:Starting cross validation
2023-06-15 14:56:34,694:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:35,615:INFO:Calculating mean and std
2023-06-15 14:56:35,619:INFO:Creating metrics dataframe
2023-06-15 14:56:35,898:INFO:Uploading results into container
2023-06-15 14:56:35,900:INFO:Uploading model into container now
2023-06-15 14:56:35,900:INFO:_master_model_container: 13
2023-06-15 14:56:35,901:INFO:_display_container: 2
2023-06-15 14:56:35,901:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 14:56:35,902:INFO:create_model() successfully completed......................................
2023-06-15 14:56:36,025:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:36,025:INFO:Creating metrics dataframe
2023-06-15 14:56:36,048:INFO:Initializing Extra Trees Regressor
2023-06-15 14:56:36,048:INFO:Total runtime is 0.3144025961558024 minutes
2023-06-15 14:56:36,055:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:36,055:INFO:Initializing create_model()
2023-06-15 14:56:36,056:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:36,056:INFO:Checking exceptions
2023-06-15 14:56:36,057:INFO:Importing libraries
2023-06-15 14:56:36,057:INFO:Copying training dataset
2023-06-15 14:56:36,071:INFO:Defining folds
2023-06-15 14:56:36,071:INFO:Declaring metric variables
2023-06-15 14:56:36,081:INFO:Importing untrained model
2023-06-15 14:56:36,091:INFO:Extra Trees Regressor Imported successfully
2023-06-15 14:56:36,114:INFO:Starting cross validation
2023-06-15 14:56:36,117:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:37,075:INFO:Calculating mean and std
2023-06-15 14:56:37,077:INFO:Creating metrics dataframe
2023-06-15 14:56:37,345:INFO:Uploading results into container
2023-06-15 14:56:37,346:INFO:Uploading model into container now
2023-06-15 14:56:37,347:INFO:_master_model_container: 14
2023-06-15 14:56:37,347:INFO:_display_container: 2
2023-06-15 14:56:37,348:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 14:56:37,348:INFO:create_model() successfully completed......................................
2023-06-15 14:56:37,463:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:37,463:INFO:Creating metrics dataframe
2023-06-15 14:56:37,487:INFO:Initializing AdaBoost Regressor
2023-06-15 14:56:37,487:INFO:Total runtime is 0.33838685750961306 minutes
2023-06-15 14:56:37,495:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:37,495:INFO:Initializing create_model()
2023-06-15 14:56:37,496:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:37,496:INFO:Checking exceptions
2023-06-15 14:56:37,496:INFO:Importing libraries
2023-06-15 14:56:37,496:INFO:Copying training dataset
2023-06-15 14:56:37,504:INFO:Defining folds
2023-06-15 14:56:37,504:INFO:Declaring metric variables
2023-06-15 14:56:37,512:INFO:Importing untrained model
2023-06-15 14:56:37,522:INFO:AdaBoost Regressor Imported successfully
2023-06-15 14:56:37,541:INFO:Starting cross validation
2023-06-15 14:56:37,544:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:38,304:INFO:Calculating mean and std
2023-06-15 14:56:38,307:INFO:Creating metrics dataframe
2023-06-15 14:56:38,575:INFO:Uploading results into container
2023-06-15 14:56:38,577:INFO:Uploading model into container now
2023-06-15 14:56:38,578:INFO:_master_model_container: 15
2023-06-15 14:56:38,578:INFO:_display_container: 2
2023-06-15 14:56:38,578:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 14:56:38,579:INFO:create_model() successfully completed......................................
2023-06-15 14:56:38,696:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:38,696:INFO:Creating metrics dataframe
2023-06-15 14:56:38,725:INFO:Initializing Gradient Boosting Regressor
2023-06-15 14:56:38,726:INFO:Total runtime is 0.3590376536051432 minutes
2023-06-15 14:56:38,735:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:38,735:INFO:Initializing create_model()
2023-06-15 14:56:38,736:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:38,736:INFO:Checking exceptions
2023-06-15 14:56:38,736:INFO:Importing libraries
2023-06-15 14:56:38,736:INFO:Copying training dataset
2023-06-15 14:56:38,748:INFO:Defining folds
2023-06-15 14:56:38,748:INFO:Declaring metric variables
2023-06-15 14:56:38,759:INFO:Importing untrained model
2023-06-15 14:56:38,772:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 14:56:38,795:INFO:Starting cross validation
2023-06-15 14:56:38,798:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:39,818:INFO:Calculating mean and std
2023-06-15 14:56:39,821:INFO:Creating metrics dataframe
2023-06-15 14:56:40,077:INFO:Uploading results into container
2023-06-15 14:56:40,078:INFO:Uploading model into container now
2023-06-15 14:56:40,079:INFO:_master_model_container: 16
2023-06-15 14:56:40,079:INFO:_display_container: 2
2023-06-15 14:56:40,080:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 14:56:40,080:INFO:create_model() successfully completed......................................
2023-06-15 14:56:40,212:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:40,213:INFO:Creating metrics dataframe
2023-06-15 14:56:40,233:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 14:56:40,234:INFO:Total runtime is 0.38417189121246337 minutes
2023-06-15 14:56:40,243:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:40,246:INFO:Initializing create_model()
2023-06-15 14:56:40,247:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:40,247:INFO:Checking exceptions
2023-06-15 14:56:40,247:INFO:Importing libraries
2023-06-15 14:56:40,247:INFO:Copying training dataset
2023-06-15 14:56:40,258:INFO:Defining folds
2023-06-15 14:56:40,259:INFO:Declaring metric variables
2023-06-15 14:56:40,279:INFO:Importing untrained model
2023-06-15 14:56:40,289:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 14:56:40,307:INFO:Starting cross validation
2023-06-15 14:56:40,310:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:41,047:INFO:Calculating mean and std
2023-06-15 14:56:41,049:INFO:Creating metrics dataframe
2023-06-15 14:56:41,249:INFO:Uploading results into container
2023-06-15 14:56:41,250:INFO:Uploading model into container now
2023-06-15 14:56:41,251:INFO:_master_model_container: 17
2023-06-15 14:56:41,252:INFO:_display_container: 2
2023-06-15 14:56:41,253:INFO:LGBMRegressor(random_state=123)
2023-06-15 14:56:41,253:INFO:create_model() successfully completed......................................
2023-06-15 14:56:41,359:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:41,359:INFO:Creating metrics dataframe
2023-06-15 14:56:41,375:INFO:Initializing Dummy Regressor
2023-06-15 14:56:41,376:INFO:Total runtime is 0.4032058556874593 minutes
2023-06-15 14:56:41,383:INFO:SubProcess create_model() called ==================================
2023-06-15 14:56:41,384:INFO:Initializing create_model()
2023-06-15 14:56:41,384:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D41A011C0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:41,384:INFO:Checking exceptions
2023-06-15 14:56:41,384:INFO:Importing libraries
2023-06-15 14:56:41,385:INFO:Copying training dataset
2023-06-15 14:56:41,394:INFO:Defining folds
2023-06-15 14:56:41,394:INFO:Declaring metric variables
2023-06-15 14:56:41,409:INFO:Importing untrained model
2023-06-15 14:56:41,418:INFO:Dummy Regressor Imported successfully
2023-06-15 14:56:41,436:INFO:Starting cross validation
2023-06-15 14:56:41,441:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 14:56:42,168:INFO:Calculating mean and std
2023-06-15 14:56:42,170:INFO:Creating metrics dataframe
2023-06-15 14:56:42,378:INFO:Uploading results into container
2023-06-15 14:56:42,379:INFO:Uploading model into container now
2023-06-15 14:56:42,379:INFO:_master_model_container: 18
2023-06-15 14:56:42,379:INFO:_display_container: 2
2023-06-15 14:56:42,380:INFO:DummyRegressor()
2023-06-15 14:56:42,380:INFO:create_model() successfully completed......................................
2023-06-15 14:56:42,481:INFO:SubProcess create_model() end ==================================
2023-06-15 14:56:42,482:INFO:Creating metrics dataframe
2023-06-15 14:56:42,513:INFO:Initializing create_model()
2023-06-15 14:56:42,513:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=PassiveAggressiveRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 14:56:42,514:INFO:Checking exceptions
2023-06-15 14:56:42,517:INFO:Importing libraries
2023-06-15 14:56:42,518:INFO:Copying training dataset
2023-06-15 14:56:42,528:INFO:Defining folds
2023-06-15 14:56:42,528:INFO:Declaring metric variables
2023-06-15 14:56:42,529:INFO:Importing untrained model
2023-06-15 14:56:42,529:INFO:Declaring custom model
2023-06-15 14:56:42,531:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 14:56:42,533:INFO:Cross validation set to False
2023-06-15 14:56:42,533:INFO:Fitting Model
2023-06-15 14:56:42,777:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:56:42,777:INFO:create_model() successfully completed......................................
2023-06-15 14:56:42,927:INFO:_master_model_container: 18
2023-06-15 14:56:42,927:INFO:_display_container: 2
2023-06-15 14:56:42,928:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 14:56:42,929:INFO:compare_models() successfully completed......................................
2023-06-15 14:58:36,743:INFO:Initializing predict_model()
2023-06-15 14:58:36,743:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D425D4940>)
2023-06-15 14:58:36,743:INFO:Checking exceptions
2023-06-15 14:58:36,743:INFO:Preloading libraries
2023-06-15 14:58:36,747:INFO:Set up data.
2023-06-15 14:58:36,751:INFO:Set up index.
2023-06-15 15:02:16,529:INFO:Initializing predict_model()
2023-06-15 15:02:16,529:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41964EE0>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D3A8E4310>)
2023-06-15 15:02:16,529:INFO:Checking exceptions
2023-06-15 15:02:16,529:INFO:Preloading libraries
2023-06-15 15:02:16,533:INFO:Set up data.
2023-06-15 15:02:16,538:INFO:Set up index.
2023-06-15 15:02:25,474:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3563259489.py:4: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:02:25,475:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3563259489.py:5: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:02:27,071:INFO:PyCaret RegressionExperiment
2023-06-15 15:02:27,071:INFO:Logging name: reg-default-name
2023-06-15 15:02:27,071:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 15:02:27,071:INFO:version 3.0.2
2023-06-15 15:02:27,071:INFO:Initializing setup()
2023-06-15 15:02:27,071:INFO:self.USI: 98bf
2023-06-15 15:02:27,071:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 15:02:27,071:INFO:Checking environment
2023-06-15 15:02:27,071:INFO:python_version: 3.9.13
2023-06-15 15:02:27,071:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 15:02:27,071:INFO:machine: AMD64
2023-06-15 15:02:27,071:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 15:02:27,072:INFO:Memory: svmem(total=8285085696, available=1308643328, percent=84.2, used=6976442368, free=1308643328)
2023-06-15 15:02:27,072:INFO:Physical Core: 2
2023-06-15 15:02:27,072:INFO:Logical Core: 4
2023-06-15 15:02:27,072:INFO:Checking libraries
2023-06-15 15:02:27,072:INFO:System:
2023-06-15 15:02:27,072:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 15:02:27,072:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 15:02:27,072:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 15:02:27,072:INFO:PyCaret required dependencies:
2023-06-15 15:02:27,072:INFO:                 pip: 22.2.2
2023-06-15 15:02:27,072:INFO:          setuptools: 63.4.1
2023-06-15 15:02:27,072:INFO:             pycaret: 3.0.2
2023-06-15 15:02:27,072:INFO:             IPython: 7.31.1
2023-06-15 15:02:27,073:INFO:          ipywidgets: 7.6.5
2023-06-15 15:02:27,073:INFO:                tqdm: 4.64.1
2023-06-15 15:02:27,073:INFO:               numpy: 1.21.5
2023-06-15 15:02:27,073:INFO:              pandas: 1.4.4
2023-06-15 15:02:27,073:INFO:              jinja2: 2.11.3
2023-06-15 15:02:27,073:INFO:               scipy: 1.9.1
2023-06-15 15:02:27,073:INFO:              joblib: 1.1.0
2023-06-15 15:02:27,073:INFO:             sklearn: 1.0.2
2023-06-15 15:02:27,073:INFO:                pyod: 1.0.9
2023-06-15 15:02:27,073:INFO:            imblearn: 0.10.1
2023-06-15 15:02:27,073:INFO:   category_encoders: 2.6.1
2023-06-15 15:02:27,073:INFO:            lightgbm: 3.3.5
2023-06-15 15:02:27,073:INFO:               numba: 0.55.1
2023-06-15 15:02:27,073:INFO:            requests: 2.28.1
2023-06-15 15:02:27,073:INFO:          matplotlib: 3.5.2
2023-06-15 15:02:27,074:INFO:          scikitplot: 0.3.7
2023-06-15 15:02:27,074:INFO:         yellowbrick: 1.5
2023-06-15 15:02:27,074:INFO:              plotly: 5.9.0
2023-06-15 15:02:27,074:INFO:             kaleido: 0.2.1
2023-06-15 15:02:27,074:INFO:         statsmodels: 0.13.2
2023-06-15 15:02:27,074:INFO:              sktime: 0.17.0
2023-06-15 15:02:27,074:INFO:               tbats: 1.1.3
2023-06-15 15:02:27,074:INFO:            pmdarima: 2.0.3
2023-06-15 15:02:27,074:INFO:              psutil: 5.9.0
2023-06-15 15:02:27,074:INFO:PyCaret optional dependencies:
2023-06-15 15:02:27,075:INFO:                shap: Not installed
2023-06-15 15:02:27,075:INFO:           interpret: Not installed
2023-06-15 15:02:27,075:INFO:                umap: Not installed
2023-06-15 15:02:27,075:INFO:    pandas_profiling: Not installed
2023-06-15 15:02:27,076:INFO:  explainerdashboard: Not installed
2023-06-15 15:02:27,076:INFO:             autoviz: Not installed
2023-06-15 15:02:27,076:INFO:           fairlearn: Not installed
2023-06-15 15:02:27,076:INFO:             xgboost: Not installed
2023-06-15 15:02:27,076:INFO:            catboost: Not installed
2023-06-15 15:02:27,076:INFO:              kmodes: Not installed
2023-06-15 15:02:27,076:INFO:             mlxtend: Not installed
2023-06-15 15:02:27,076:INFO:       statsforecast: Not installed
2023-06-15 15:02:27,076:INFO:        tune_sklearn: Not installed
2023-06-15 15:02:27,077:INFO:                 ray: Not installed
2023-06-15 15:02:27,077:INFO:            hyperopt: Not installed
2023-06-15 15:02:27,077:INFO:              optuna: Not installed
2023-06-15 15:02:27,077:INFO:               skopt: Not installed
2023-06-15 15:02:27,078:INFO:              mlflow: Not installed
2023-06-15 15:02:27,078:INFO:              gradio: Not installed
2023-06-15 15:02:27,078:INFO:             fastapi: Not installed
2023-06-15 15:02:27,078:INFO:             uvicorn: Not installed
2023-06-15 15:02:27,078:INFO:              m2cgen: Not installed
2023-06-15 15:02:27,078:INFO:           evidently: Not installed
2023-06-15 15:02:27,078:INFO:               fugue: Not installed
2023-06-15 15:02:27,079:INFO:           streamlit: 1.22.0
2023-06-15 15:02:27,079:INFO:             prophet: Not installed
2023-06-15 15:02:27,079:INFO:None
2023-06-15 15:02:27,079:INFO:Set up data.
2023-06-15 15:02:47,478:INFO:PyCaret RegressionExperiment
2023-06-15 15:02:47,478:INFO:Logging name: reg-default-name
2023-06-15 15:02:47,478:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 15:02:47,478:INFO:version 3.0.2
2023-06-15 15:02:47,478:INFO:Initializing setup()
2023-06-15 15:02:47,479:INFO:self.USI: 115f
2023-06-15 15:02:47,479:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 15:02:47,479:INFO:Checking environment
2023-06-15 15:02:47,479:INFO:python_version: 3.9.13
2023-06-15 15:02:47,479:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 15:02:47,479:INFO:machine: AMD64
2023-06-15 15:02:47,479:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 15:02:47,479:INFO:Memory: svmem(total=8285085696, available=1300664320, percent=84.3, used=6984421376, free=1300664320)
2023-06-15 15:02:47,479:INFO:Physical Core: 2
2023-06-15 15:02:47,479:INFO:Logical Core: 4
2023-06-15 15:02:47,479:INFO:Checking libraries
2023-06-15 15:02:47,479:INFO:System:
2023-06-15 15:02:47,479:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 15:02:47,479:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 15:02:47,480:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 15:02:47,480:INFO:PyCaret required dependencies:
2023-06-15 15:02:47,480:INFO:                 pip: 22.2.2
2023-06-15 15:02:47,480:INFO:          setuptools: 63.4.1
2023-06-15 15:02:47,480:INFO:             pycaret: 3.0.2
2023-06-15 15:02:47,480:INFO:             IPython: 7.31.1
2023-06-15 15:02:47,480:INFO:          ipywidgets: 7.6.5
2023-06-15 15:02:47,480:INFO:                tqdm: 4.64.1
2023-06-15 15:02:47,480:INFO:               numpy: 1.21.5
2023-06-15 15:02:47,480:INFO:              pandas: 1.4.4
2023-06-15 15:02:47,480:INFO:              jinja2: 2.11.3
2023-06-15 15:02:47,480:INFO:               scipy: 1.9.1
2023-06-15 15:02:47,480:INFO:              joblib: 1.1.0
2023-06-15 15:02:47,480:INFO:             sklearn: 1.0.2
2023-06-15 15:02:47,480:INFO:                pyod: 1.0.9
2023-06-15 15:02:47,480:INFO:            imblearn: 0.10.1
2023-06-15 15:02:47,480:INFO:   category_encoders: 2.6.1
2023-06-15 15:02:47,481:INFO:            lightgbm: 3.3.5
2023-06-15 15:02:47,481:INFO:               numba: 0.55.1
2023-06-15 15:02:47,481:INFO:            requests: 2.28.1
2023-06-15 15:02:47,481:INFO:          matplotlib: 3.5.2
2023-06-15 15:02:47,481:INFO:          scikitplot: 0.3.7
2023-06-15 15:02:47,481:INFO:         yellowbrick: 1.5
2023-06-15 15:02:47,481:INFO:              plotly: 5.9.0
2023-06-15 15:02:47,481:INFO:             kaleido: 0.2.1
2023-06-15 15:02:47,481:INFO:         statsmodels: 0.13.2
2023-06-15 15:02:47,481:INFO:              sktime: 0.17.0
2023-06-15 15:02:47,481:INFO:               tbats: 1.1.3
2023-06-15 15:02:47,481:INFO:            pmdarima: 2.0.3
2023-06-15 15:02:47,481:INFO:              psutil: 5.9.0
2023-06-15 15:02:47,481:INFO:PyCaret optional dependencies:
2023-06-15 15:02:47,481:INFO:                shap: Not installed
2023-06-15 15:02:47,481:INFO:           interpret: Not installed
2023-06-15 15:02:47,481:INFO:                umap: Not installed
2023-06-15 15:02:47,481:INFO:    pandas_profiling: Not installed
2023-06-15 15:02:47,482:INFO:  explainerdashboard: Not installed
2023-06-15 15:02:47,482:INFO:             autoviz: Not installed
2023-06-15 15:02:47,482:INFO:           fairlearn: Not installed
2023-06-15 15:02:47,482:INFO:             xgboost: Not installed
2023-06-15 15:02:47,482:INFO:            catboost: Not installed
2023-06-15 15:02:47,482:INFO:              kmodes: Not installed
2023-06-15 15:02:47,482:INFO:             mlxtend: Not installed
2023-06-15 15:02:47,482:INFO:       statsforecast: Not installed
2023-06-15 15:02:47,482:INFO:        tune_sklearn: Not installed
2023-06-15 15:02:47,482:INFO:                 ray: Not installed
2023-06-15 15:02:47,482:INFO:            hyperopt: Not installed
2023-06-15 15:02:47,482:INFO:              optuna: Not installed
2023-06-15 15:02:47,482:INFO:               skopt: Not installed
2023-06-15 15:02:47,482:INFO:              mlflow: Not installed
2023-06-15 15:02:47,482:INFO:              gradio: Not installed
2023-06-15 15:02:47,482:INFO:             fastapi: Not installed
2023-06-15 15:02:47,482:INFO:             uvicorn: Not installed
2023-06-15 15:02:47,482:INFO:              m2cgen: Not installed
2023-06-15 15:02:47,483:INFO:           evidently: Not installed
2023-06-15 15:02:47,483:INFO:               fugue: Not installed
2023-06-15 15:02:47,483:INFO:           streamlit: 1.22.0
2023-06-15 15:02:47,483:INFO:             prophet: Not installed
2023-06-15 15:02:47,483:INFO:None
2023-06-15 15:02:47,483:INFO:Set up data.
2023-06-15 15:02:47,487:INFO:Set up train/test split.
2023-06-15 15:02:47,487:INFO:Set up data.
2023-06-15 15:02:47,491:INFO:Set up index.
2023-06-15 15:02:47,491:INFO:Set up folding strategy.
2023-06-15 15:02:47,491:INFO:Assigning column types.
2023-06-15 15:02:47,495:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 15:02:47,495:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,500:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,505:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,570:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,624:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,629:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,634:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,700:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,751:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 15:02:47,756:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,826:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,877:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:47,885:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,890:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:47,976:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,047:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,048:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,049:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 15:02:48,063:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,149:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,225:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,308:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,390:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 15:02:48,493:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,561:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,562:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,659:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,723:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,725:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 15:02:48,819:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:48,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:48,949:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:02:49,004:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,004:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 15:02:49,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,275:INFO:Preparing preprocessing pipeline...
2023-06-15 15:02:49,275:INFO:Set up target transformation.
2023-06-15 15:02:49,275:INFO:Set up date feature engineering.
2023-06-15 15:02:49,275:INFO:Set up simple imputation.
2023-06-15 15:02:49,327:INFO:Finished creating preprocessing pipeline.
2023-06-15 15:02:49,336:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-15 15:02:49,336:INFO:Creating final display dataframe.
2023-06-15 15:02:49,493:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    NOTCH_VARIANCE
2                   Target type        Regression
3           Original data shape           (94, 4)
4        Transformed data shape           (94, 6)
5   Transformed train set shape           (76, 6)
6    Transformed test set shape           (18, 6)
7              Numeric features                 2
8                 Date features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13             Transform target              True
14      Transform target method       yeo-johnson
15               Fold Generator   TimeSeriesSplit
16                  Fold Number                 3
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              115f
2023-06-15 15:02:49,641:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:02:49,768:INFO:setup() successfully completed in 2.5s...............
2023-06-15 15:02:49,948:INFO:Initializing compare_models()
2023-06-15 15:02:49,948:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 15:02:49,948:INFO:Checking exceptions
2023-06-15 15:02:49,953:INFO:Preparing display monitor
2023-06-15 15:02:50,017:INFO:Initializing Linear Regression
2023-06-15 15:02:50,018:INFO:Total runtime is 1.6673405965169272e-05 minutes
2023-06-15 15:02:50,028:INFO:SubProcess create_model() called ==================================
2023-06-15 15:02:50,029:INFO:Initializing create_model()
2023-06-15 15:02:50,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:02:50,030:INFO:Checking exceptions
2023-06-15 15:02:50,030:INFO:Importing libraries
2023-06-15 15:02:50,030:INFO:Copying training dataset
2023-06-15 15:02:50,039:INFO:Defining folds
2023-06-15 15:02:50,039:INFO:Declaring metric variables
2023-06-15 15:02:50,046:INFO:Importing untrained model
2023-06-15 15:02:50,056:INFO:Linear Regression Imported successfully
2023-06-15 15:02:50,075:INFO:Starting cross validation
2023-06-15 15:02:50,077:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:03,870:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:04,695:INFO:Calculating mean and std
2023-06-15 15:03:04,699:INFO:Creating metrics dataframe
2023-06-15 15:03:04,997:INFO:Uploading results into container
2023-06-15 15:03:04,999:INFO:Uploading model into container now
2023-06-15 15:03:04,999:INFO:_master_model_container: 1
2023-06-15 15:03:05,000:INFO:_display_container: 2
2023-06-15 15:03:05,000:INFO:LinearRegression(n_jobs=-1)
2023-06-15 15:03:05,001:INFO:create_model() successfully completed......................................
2023-06-15 15:03:05,482:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:05,483:INFO:Creating metrics dataframe
2023-06-15 15:03:05,506:INFO:Initializing Lasso Regression
2023-06-15 15:03:05,507:INFO:Total runtime is 0.25816555817921955 minutes
2023-06-15 15:03:05,517:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:05,518:INFO:Initializing create_model()
2023-06-15 15:03:05,518:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:05,518:INFO:Checking exceptions
2023-06-15 15:03:05,521:INFO:Importing libraries
2023-06-15 15:03:05,521:INFO:Copying training dataset
2023-06-15 15:03:05,550:INFO:Defining folds
2023-06-15 15:03:05,551:INFO:Declaring metric variables
2023-06-15 15:03:05,560:INFO:Importing untrained model
2023-06-15 15:03:05,575:INFO:Lasso Regression Imported successfully
2023-06-15 15:03:05,594:INFO:Starting cross validation
2023-06-15 15:03:05,597:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:11,569:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:11,642:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-15 15:03:11,683:INFO:Calculating mean and std
2023-06-15 15:03:11,686:INFO:Creating metrics dataframe
2023-06-15 15:03:11,969:INFO:Uploading results into container
2023-06-15 15:03:11,970:INFO:Uploading model into container now
2023-06-15 15:03:11,971:INFO:_master_model_container: 2
2023-06-15 15:03:11,972:INFO:_display_container: 2
2023-06-15 15:03:11,973:INFO:Lasso(random_state=123)
2023-06-15 15:03:11,973:INFO:create_model() successfully completed......................................
2023-06-15 15:03:12,077:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:12,078:INFO:Creating metrics dataframe
2023-06-15 15:03:12,089:INFO:Initializing Ridge Regression
2023-06-15 15:03:12,089:INFO:Total runtime is 0.3678760449091593 minutes
2023-06-15 15:03:12,094:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:12,094:INFO:Initializing create_model()
2023-06-15 15:03:12,095:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:12,095:INFO:Checking exceptions
2023-06-15 15:03:12,095:INFO:Importing libraries
2023-06-15 15:03:12,095:INFO:Copying training dataset
2023-06-15 15:03:12,105:INFO:Defining folds
2023-06-15 15:03:12,106:INFO:Declaring metric variables
2023-06-15 15:03:12,117:INFO:Importing untrained model
2023-06-15 15:03:12,125:INFO:Ridge Regression Imported successfully
2023-06-15 15:03:12,138:INFO:Starting cross validation
2023-06-15 15:03:12,141:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:12,173:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:12,778:INFO:Calculating mean and std
2023-06-15 15:03:12,779:INFO:Creating metrics dataframe
2023-06-15 15:03:12,984:INFO:Uploading results into container
2023-06-15 15:03:12,984:INFO:Uploading model into container now
2023-06-15 15:03:12,985:INFO:_master_model_container: 3
2023-06-15 15:03:12,985:INFO:_display_container: 2
2023-06-15 15:03:12,986:INFO:Ridge(random_state=123)
2023-06-15 15:03:12,986:INFO:create_model() successfully completed......................................
2023-06-15 15:03:13,092:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:13,092:INFO:Creating metrics dataframe
2023-06-15 15:03:13,103:INFO:Initializing Elastic Net
2023-06-15 15:03:13,103:INFO:Total runtime is 0.38477605978647866 minutes
2023-06-15 15:03:13,108:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:13,108:INFO:Initializing create_model()
2023-06-15 15:03:13,108:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:13,109:INFO:Checking exceptions
2023-06-15 15:03:13,109:INFO:Importing libraries
2023-06-15 15:03:13,109:INFO:Copying training dataset
2023-06-15 15:03:13,119:INFO:Defining folds
2023-06-15 15:03:13,119:INFO:Declaring metric variables
2023-06-15 15:03:13,131:INFO:Importing untrained model
2023-06-15 15:03:13,140:INFO:Elastic Net Imported successfully
2023-06-15 15:03:13,153:INFO:Starting cross validation
2023-06-15 15:03:13,155:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:13,195:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:13,276:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-15 15:03:13,819:INFO:Calculating mean and std
2023-06-15 15:03:13,821:INFO:Creating metrics dataframe
2023-06-15 15:03:14,099:INFO:Uploading results into container
2023-06-15 15:03:14,100:INFO:Uploading model into container now
2023-06-15 15:03:14,101:INFO:_master_model_container: 4
2023-06-15 15:03:14,101:INFO:_display_container: 2
2023-06-15 15:03:14,102:INFO:ElasticNet(random_state=123)
2023-06-15 15:03:14,102:INFO:create_model() successfully completed......................................
2023-06-15 15:03:14,208:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:14,208:INFO:Creating metrics dataframe
2023-06-15 15:03:14,222:INFO:Initializing Least Angle Regression
2023-06-15 15:03:14,223:INFO:Total runtime is 0.4034260829289754 minutes
2023-06-15 15:03:14,230:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:14,231:INFO:Initializing create_model()
2023-06-15 15:03:14,231:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:14,231:INFO:Checking exceptions
2023-06-15 15:03:14,232:INFO:Importing libraries
2023-06-15 15:03:14,232:INFO:Copying training dataset
2023-06-15 15:03:14,246:INFO:Defining folds
2023-06-15 15:03:14,247:INFO:Declaring metric variables
2023-06-15 15:03:14,256:INFO:Importing untrained model
2023-06-15 15:03:14,266:INFO:Least Angle Regression Imported successfully
2023-06-15 15:03:14,281:INFO:Starting cross validation
2023-06-15 15:03:14,284:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:14,343:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:14,431:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:14,441:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:14,457:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:14,530:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.391e-01, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-15 15:03:14,531:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.695e-01, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-15 15:03:15,058:INFO:Calculating mean and std
2023-06-15 15:03:15,062:INFO:Creating metrics dataframe
2023-06-15 15:03:15,372:INFO:Uploading results into container
2023-06-15 15:03:15,373:INFO:Uploading model into container now
2023-06-15 15:03:15,374:INFO:_master_model_container: 5
2023-06-15 15:03:15,374:INFO:_display_container: 2
2023-06-15 15:03:15,375:INFO:Lars(random_state=123)
2023-06-15 15:03:15,375:INFO:create_model() successfully completed......................................
2023-06-15 15:03:15,501:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:15,501:INFO:Creating metrics dataframe
2023-06-15 15:03:15,521:INFO:Initializing Lasso Least Angle Regression
2023-06-15 15:03:15,521:INFO:Total runtime is 0.4250761111577352 minutes
2023-06-15 15:03:15,529:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:15,529:INFO:Initializing create_model()
2023-06-15 15:03:15,529:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:15,530:INFO:Checking exceptions
2023-06-15 15:03:15,530:INFO:Importing libraries
2023-06-15 15:03:15,530:INFO:Copying training dataset
2023-06-15 15:03:15,544:INFO:Defining folds
2023-06-15 15:03:15,545:INFO:Declaring metric variables
2023-06-15 15:03:15,556:INFO:Importing untrained model
2023-06-15 15:03:15,567:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 15:03:15,584:INFO:Starting cross validation
2023-06-15 15:03:15,589:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:15,643:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:15,753:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:03:15,759:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:03:15,773:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:03:16,352:INFO:Calculating mean and std
2023-06-15 15:03:16,356:INFO:Creating metrics dataframe
2023-06-15 15:03:16,631:INFO:Uploading results into container
2023-06-15 15:03:16,632:INFO:Uploading model into container now
2023-06-15 15:03:16,633:INFO:_master_model_container: 6
2023-06-15 15:03:16,634:INFO:_display_container: 2
2023-06-15 15:03:16,634:INFO:LassoLars(random_state=123)
2023-06-15 15:03:16,635:INFO:create_model() successfully completed......................................
2023-06-15 15:03:16,776:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:16,778:INFO:Creating metrics dataframe
2023-06-15 15:03:16,808:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 15:03:16,809:INFO:Total runtime is 0.4465428312619527 minutes
2023-06-15 15:03:16,818:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:16,818:INFO:Initializing create_model()
2023-06-15 15:03:16,819:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:16,819:INFO:Checking exceptions
2023-06-15 15:03:16,819:INFO:Importing libraries
2023-06-15 15:03:16,819:INFO:Copying training dataset
2023-06-15 15:03:16,830:INFO:Defining folds
2023-06-15 15:03:16,830:INFO:Declaring metric variables
2023-06-15 15:03:16,837:INFO:Importing untrained model
2023-06-15 15:03:16,847:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 15:03:16,862:INFO:Starting cross validation
2023-06-15 15:03:16,865:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:16,928:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:17,060:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:17,062:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:17,063:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:03:17,142:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-15 15:03:17,753:INFO:Calculating mean and std
2023-06-15 15:03:17,755:INFO:Creating metrics dataframe
2023-06-15 15:03:18,066:INFO:Uploading results into container
2023-06-15 15:03:18,068:INFO:Uploading model into container now
2023-06-15 15:03:18,069:INFO:_master_model_container: 7
2023-06-15 15:03:18,069:INFO:_display_container: 2
2023-06-15 15:03:18,070:INFO:OrthogonalMatchingPursuit()
2023-06-15 15:03:18,070:INFO:create_model() successfully completed......................................
2023-06-15 15:03:18,185:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:18,186:INFO:Creating metrics dataframe
2023-06-15 15:03:18,201:INFO:Initializing Bayesian Ridge
2023-06-15 15:03:18,201:INFO:Total runtime is 0.4697427789370219 minutes
2023-06-15 15:03:18,206:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:18,207:INFO:Initializing create_model()
2023-06-15 15:03:18,207:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:18,208:INFO:Checking exceptions
2023-06-15 15:03:18,208:INFO:Importing libraries
2023-06-15 15:03:18,209:INFO:Copying training dataset
2023-06-15 15:03:18,219:INFO:Defining folds
2023-06-15 15:03:18,220:INFO:Declaring metric variables
2023-06-15 15:03:18,231:INFO:Importing untrained model
2023-06-15 15:03:18,241:INFO:Bayesian Ridge Imported successfully
2023-06-15 15:03:18,259:INFO:Starting cross validation
2023-06-15 15:03:18,261:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:18,310:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:19,047:INFO:Calculating mean and std
2023-06-15 15:03:19,051:INFO:Creating metrics dataframe
2023-06-15 15:03:19,339:INFO:Uploading results into container
2023-06-15 15:03:19,340:INFO:Uploading model into container now
2023-06-15 15:03:19,341:INFO:_master_model_container: 8
2023-06-15 15:03:19,341:INFO:_display_container: 2
2023-06-15 15:03:19,342:INFO:BayesianRidge()
2023-06-15 15:03:19,342:INFO:create_model() successfully completed......................................
2023-06-15 15:03:19,465:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:19,465:INFO:Creating metrics dataframe
2023-06-15 15:03:19,481:INFO:Initializing Passive Aggressive Regressor
2023-06-15 15:03:19,481:INFO:Total runtime is 0.49107621908187865 minutes
2023-06-15 15:03:19,491:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:19,491:INFO:Initializing create_model()
2023-06-15 15:03:19,492:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:19,492:INFO:Checking exceptions
2023-06-15 15:03:19,492:INFO:Importing libraries
2023-06-15 15:03:19,493:INFO:Copying training dataset
2023-06-15 15:03:19,504:INFO:Defining folds
2023-06-15 15:03:19,505:INFO:Declaring metric variables
2023-06-15 15:03:19,516:INFO:Importing untrained model
2023-06-15 15:03:19,524:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:03:19,540:INFO:Starting cross validation
2023-06-15 15:03:19,544:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:19,585:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:20,320:INFO:Calculating mean and std
2023-06-15 15:03:20,322:INFO:Creating metrics dataframe
2023-06-15 15:03:20,577:INFO:Uploading results into container
2023-06-15 15:03:20,579:INFO:Uploading model into container now
2023-06-15 15:03:20,579:INFO:_master_model_container: 9
2023-06-15 15:03:20,580:INFO:_display_container: 2
2023-06-15 15:03:20,580:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:03:20,581:INFO:create_model() successfully completed......................................
2023-06-15 15:03:20,704:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:20,704:INFO:Creating metrics dataframe
2023-06-15 15:03:20,728:INFO:Initializing Huber Regressor
2023-06-15 15:03:20,728:INFO:Total runtime is 0.5118595759073893 minutes
2023-06-15 15:03:20,733:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:20,734:INFO:Initializing create_model()
2023-06-15 15:03:20,734:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:20,734:INFO:Checking exceptions
2023-06-15 15:03:20,735:INFO:Importing libraries
2023-06-15 15:03:20,735:INFO:Copying training dataset
2023-06-15 15:03:20,746:INFO:Defining folds
2023-06-15 15:03:20,747:INFO:Declaring metric variables
2023-06-15 15:03:20,761:INFO:Importing untrained model
2023-06-15 15:03:20,773:INFO:Huber Regressor Imported successfully
2023-06-15 15:03:20,789:INFO:Starting cross validation
2023-06-15 15:03:20,791:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:20,836:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:21,489:INFO:Calculating mean and std
2023-06-15 15:03:21,491:INFO:Creating metrics dataframe
2023-06-15 15:03:21,698:INFO:Uploading results into container
2023-06-15 15:03:21,699:INFO:Uploading model into container now
2023-06-15 15:03:21,700:INFO:_master_model_container: 10
2023-06-15 15:03:21,700:INFO:_display_container: 2
2023-06-15 15:03:21,700:INFO:HuberRegressor()
2023-06-15 15:03:21,701:INFO:create_model() successfully completed......................................
2023-06-15 15:03:21,803:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:21,804:INFO:Creating metrics dataframe
2023-06-15 15:03:21,818:INFO:Initializing K Neighbors Regressor
2023-06-15 15:03:21,818:INFO:Total runtime is 0.5300261457761128 minutes
2023-06-15 15:03:21,823:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:21,823:INFO:Initializing create_model()
2023-06-15 15:03:21,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:21,824:INFO:Checking exceptions
2023-06-15 15:03:21,824:INFO:Importing libraries
2023-06-15 15:03:21,824:INFO:Copying training dataset
2023-06-15 15:03:21,835:INFO:Defining folds
2023-06-15 15:03:21,835:INFO:Declaring metric variables
2023-06-15 15:03:21,846:INFO:Importing untrained model
2023-06-15 15:03:21,852:INFO:K Neighbors Regressor Imported successfully
2023-06-15 15:03:21,867:INFO:Starting cross validation
2023-06-15 15:03:21,869:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:21,913:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:22,579:INFO:Calculating mean and std
2023-06-15 15:03:22,581:INFO:Creating metrics dataframe
2023-06-15 15:03:22,824:INFO:Uploading results into container
2023-06-15 15:03:22,825:INFO:Uploading model into container now
2023-06-15 15:03:22,827:INFO:_master_model_container: 11
2023-06-15 15:03:22,827:INFO:_display_container: 2
2023-06-15 15:03:22,828:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 15:03:22,828:INFO:create_model() successfully completed......................................
2023-06-15 15:03:22,932:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:22,932:INFO:Creating metrics dataframe
2023-06-15 15:03:22,947:INFO:Initializing Decision Tree Regressor
2023-06-15 15:03:22,947:INFO:Total runtime is 0.5488275686899821 minutes
2023-06-15 15:03:22,953:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:22,954:INFO:Initializing create_model()
2023-06-15 15:03:22,954:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:22,954:INFO:Checking exceptions
2023-06-15 15:03:22,955:INFO:Importing libraries
2023-06-15 15:03:22,955:INFO:Copying training dataset
2023-06-15 15:03:22,966:INFO:Defining folds
2023-06-15 15:03:22,966:INFO:Declaring metric variables
2023-06-15 15:03:22,977:INFO:Importing untrained model
2023-06-15 15:03:22,985:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:03:22,997:INFO:Starting cross validation
2023-06-15 15:03:23,000:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:23,037:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:23,655:INFO:Calculating mean and std
2023-06-15 15:03:23,657:INFO:Creating metrics dataframe
2023-06-15 15:03:23,875:INFO:Uploading results into container
2023-06-15 15:03:23,876:INFO:Uploading model into container now
2023-06-15 15:03:23,877:INFO:_master_model_container: 12
2023-06-15 15:03:23,877:INFO:_display_container: 2
2023-06-15 15:03:23,878:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:03:23,878:INFO:create_model() successfully completed......................................
2023-06-15 15:03:23,979:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:23,979:INFO:Creating metrics dataframe
2023-06-15 15:03:23,994:INFO:Initializing Random Forest Regressor
2023-06-15 15:03:23,994:INFO:Total runtime is 0.5662776033083597 minutes
2023-06-15 15:03:23,998:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:23,998:INFO:Initializing create_model()
2023-06-15 15:03:23,999:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:23,999:INFO:Checking exceptions
2023-06-15 15:03:23,999:INFO:Importing libraries
2023-06-15 15:03:23,999:INFO:Copying training dataset
2023-06-15 15:03:24,007:INFO:Defining folds
2023-06-15 15:03:24,007:INFO:Declaring metric variables
2023-06-15 15:03:24,015:INFO:Importing untrained model
2023-06-15 15:03:24,026:INFO:Random Forest Regressor Imported successfully
2023-06-15 15:03:24,043:INFO:Starting cross validation
2023-06-15 15:03:24,045:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:24,084:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:25,215:INFO:Calculating mean and std
2023-06-15 15:03:25,217:INFO:Creating metrics dataframe
2023-06-15 15:03:25,436:INFO:Uploading results into container
2023-06-15 15:03:25,437:INFO:Uploading model into container now
2023-06-15 15:03:25,437:INFO:_master_model_container: 13
2023-06-15 15:03:25,437:INFO:_display_container: 2
2023-06-15 15:03:25,438:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:03:25,438:INFO:create_model() successfully completed......................................
2023-06-15 15:03:25,543:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:25,543:INFO:Creating metrics dataframe
2023-06-15 15:03:25,557:INFO:Initializing Extra Trees Regressor
2023-06-15 15:03:25,557:INFO:Total runtime is 0.5923285444577535 minutes
2023-06-15 15:03:25,562:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:25,562:INFO:Initializing create_model()
2023-06-15 15:03:25,563:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:25,563:INFO:Checking exceptions
2023-06-15 15:03:25,563:INFO:Importing libraries
2023-06-15 15:03:25,563:INFO:Copying training dataset
2023-06-15 15:03:25,575:INFO:Defining folds
2023-06-15 15:03:25,575:INFO:Declaring metric variables
2023-06-15 15:03:25,585:INFO:Importing untrained model
2023-06-15 15:03:25,596:INFO:Extra Trees Regressor Imported successfully
2023-06-15 15:03:25,614:INFO:Starting cross validation
2023-06-15 15:03:25,616:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:25,648:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:26,719:INFO:Calculating mean and std
2023-06-15 15:03:26,721:INFO:Creating metrics dataframe
2023-06-15 15:03:26,940:INFO:Uploading results into container
2023-06-15 15:03:26,941:INFO:Uploading model into container now
2023-06-15 15:03:26,942:INFO:_master_model_container: 14
2023-06-15 15:03:26,942:INFO:_display_container: 2
2023-06-15 15:03:26,943:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:03:26,943:INFO:create_model() successfully completed......................................
2023-06-15 15:03:27,047:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:27,047:INFO:Creating metrics dataframe
2023-06-15 15:03:27,060:INFO:Initializing AdaBoost Regressor
2023-06-15 15:03:27,061:INFO:Total runtime is 0.6173951983451843 minutes
2023-06-15 15:03:27,067:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:27,068:INFO:Initializing create_model()
2023-06-15 15:03:27,068:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:27,069:INFO:Checking exceptions
2023-06-15 15:03:27,069:INFO:Importing libraries
2023-06-15 15:03:27,069:INFO:Copying training dataset
2023-06-15 15:03:27,077:INFO:Defining folds
2023-06-15 15:03:27,077:INFO:Declaring metric variables
2023-06-15 15:03:27,089:INFO:Importing untrained model
2023-06-15 15:03:27,099:INFO:AdaBoost Regressor Imported successfully
2023-06-15 15:03:27,112:INFO:Starting cross validation
2023-06-15 15:03:27,114:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:27,151:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:27,775:INFO:Calculating mean and std
2023-06-15 15:03:27,779:INFO:Creating metrics dataframe
2023-06-15 15:03:28,033:INFO:Uploading results into container
2023-06-15 15:03:28,034:INFO:Uploading model into container now
2023-06-15 15:03:28,035:INFO:_master_model_container: 15
2023-06-15 15:03:28,035:INFO:_display_container: 2
2023-06-15 15:03:28,035:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 15:03:28,036:INFO:create_model() successfully completed......................................
2023-06-15 15:03:28,134:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:28,134:INFO:Creating metrics dataframe
2023-06-15 15:03:28,148:INFO:Initializing Gradient Boosting Regressor
2023-06-15 15:03:28,149:INFO:Total runtime is 0.6355286637941996 minutes
2023-06-15 15:03:28,153:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:28,154:INFO:Initializing create_model()
2023-06-15 15:03:28,154:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:28,154:INFO:Checking exceptions
2023-06-15 15:03:28,154:INFO:Importing libraries
2023-06-15 15:03:28,154:INFO:Copying training dataset
2023-06-15 15:03:28,165:INFO:Defining folds
2023-06-15 15:03:28,165:INFO:Declaring metric variables
2023-06-15 15:03:28,173:INFO:Importing untrained model
2023-06-15 15:03:28,180:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 15:03:28,199:INFO:Starting cross validation
2023-06-15 15:03:28,200:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:28,258:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:28,987:INFO:Calculating mean and std
2023-06-15 15:03:28,989:INFO:Creating metrics dataframe
2023-06-15 15:03:29,211:INFO:Uploading results into container
2023-06-15 15:03:29,212:INFO:Uploading model into container now
2023-06-15 15:03:29,213:INFO:_master_model_container: 16
2023-06-15 15:03:29,213:INFO:_display_container: 2
2023-06-15 15:03:29,214:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 15:03:29,214:INFO:create_model() successfully completed......................................
2023-06-15 15:03:29,314:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:29,314:INFO:Creating metrics dataframe
2023-06-15 15:03:29,329:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 15:03:29,330:INFO:Total runtime is 0.6552118778228759 minutes
2023-06-15 15:03:29,336:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:29,337:INFO:Initializing create_model()
2023-06-15 15:03:29,337:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:29,337:INFO:Checking exceptions
2023-06-15 15:03:29,338:INFO:Importing libraries
2023-06-15 15:03:29,338:INFO:Copying training dataset
2023-06-15 15:03:29,347:INFO:Defining folds
2023-06-15 15:03:29,347:INFO:Declaring metric variables
2023-06-15 15:03:29,357:INFO:Importing untrained model
2023-06-15 15:03:29,368:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 15:03:29,380:INFO:Starting cross validation
2023-06-15 15:03:29,384:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:31,552:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:32,352:INFO:Calculating mean and std
2023-06-15 15:03:32,357:INFO:Creating metrics dataframe
2023-06-15 15:03:32,637:INFO:Uploading results into container
2023-06-15 15:03:32,638:INFO:Uploading model into container now
2023-06-15 15:03:32,639:INFO:_master_model_container: 17
2023-06-15 15:03:32,639:INFO:_display_container: 2
2023-06-15 15:03:32,641:INFO:LGBMRegressor(random_state=123)
2023-06-15 15:03:32,641:INFO:create_model() successfully completed......................................
2023-06-15 15:03:32,756:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:32,757:INFO:Creating metrics dataframe
2023-06-15 15:03:32,775:INFO:Initializing Dummy Regressor
2023-06-15 15:03:32,775:INFO:Total runtime is 0.7126286466916402 minutes
2023-06-15 15:03:32,783:INFO:SubProcess create_model() called ==================================
2023-06-15 15:03:32,784:INFO:Initializing create_model()
2023-06-15 15:03:32,784:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D438BB100>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:32,785:INFO:Checking exceptions
2023-06-15 15:03:32,785:INFO:Importing libraries
2023-06-15 15:03:32,785:INFO:Copying training dataset
2023-06-15 15:03:32,799:INFO:Defining folds
2023-06-15 15:03:32,799:INFO:Declaring metric variables
2023-06-15 15:03:32,806:INFO:Importing untrained model
2023-06-15 15:03:32,815:INFO:Dummy Regressor Imported successfully
2023-06-15 15:03:32,835:INFO:Starting cross validation
2023-06-15 15:03:32,838:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:03:32,883:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:03:33,627:INFO:Calculating mean and std
2023-06-15 15:03:33,630:INFO:Creating metrics dataframe
2023-06-15 15:03:33,906:INFO:Uploading results into container
2023-06-15 15:03:33,908:INFO:Uploading model into container now
2023-06-15 15:03:33,910:INFO:_master_model_container: 18
2023-06-15 15:03:33,910:INFO:_display_container: 2
2023-06-15 15:03:33,910:INFO:DummyRegressor()
2023-06-15 15:03:33,911:INFO:create_model() successfully completed......................................
2023-06-15 15:03:34,024:INFO:SubProcess create_model() end ==================================
2023-06-15 15:03:34,024:INFO:Creating metrics dataframe
2023-06-15 15:03:34,064:INFO:Initializing create_model()
2023-06-15 15:03:34,065:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=DecisionTreeRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:03:34,065:INFO:Checking exceptions
2023-06-15 15:03:34,072:INFO:Importing libraries
2023-06-15 15:03:34,072:INFO:Copying training dataset
2023-06-15 15:03:34,093:INFO:Defining folds
2023-06-15 15:03:34,093:INFO:Declaring metric variables
2023-06-15 15:03:34,094:INFO:Importing untrained model
2023-06-15 15:03:34,094:INFO:Declaring custom model
2023-06-15 15:03:34,095:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:03:34,098:INFO:Cross validation set to False
2023-06-15 15:03:34,098:INFO:Fitting Model
2023-06-15 15:03:34,408:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:03:34,408:INFO:create_model() successfully completed......................................
2023-06-15 15:03:34,611:INFO:_master_model_container: 18
2023-06-15 15:03:34,611:INFO:_display_container: 2
2023-06-15 15:03:34,612:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:03:34,612:INFO:compare_models() successfully completed......................................
2023-06-15 15:03:34,680:INFO:Initializing predict_model()
2023-06-15 15:03:34,681:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41FB1670>, estimator=DecisionTreeRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D436D6B80>)
2023-06-15 15:03:34,681:INFO:Checking exceptions
2023-06-15 15:03:34,681:INFO:Preloading libraries
2023-06-15 15:03:34,686:INFO:Set up data.
2023-06-15 15:03:34,691:INFO:Set up index.
2023-06-15 15:08:49,176:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3283110646.py:4: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:08:49,178:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3283110646.py:5: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:08:50,864:INFO:PyCaret RegressionExperiment
2023-06-15 15:08:50,864:INFO:Logging name: reg-default-name
2023-06-15 15:08:50,864:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 15:08:50,864:INFO:version 3.0.2
2023-06-15 15:08:50,864:INFO:Initializing setup()
2023-06-15 15:08:50,864:INFO:self.USI: b0e6
2023-06-15 15:08:50,865:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 15:08:50,865:INFO:Checking environment
2023-06-15 15:08:50,865:INFO:python_version: 3.9.13
2023-06-15 15:08:50,865:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 15:08:50,865:INFO:machine: AMD64
2023-06-15 15:08:50,865:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 15:08:50,865:INFO:Memory: svmem(total=8285085696, available=1664901120, percent=79.9, used=6620184576, free=1664901120)
2023-06-15 15:08:50,865:INFO:Physical Core: 2
2023-06-15 15:08:50,865:INFO:Logical Core: 4
2023-06-15 15:08:50,865:INFO:Checking libraries
2023-06-15 15:08:50,865:INFO:System:
2023-06-15 15:08:50,865:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 15:08:50,865:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 15:08:50,865:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 15:08:50,866:INFO:PyCaret required dependencies:
2023-06-15 15:08:50,866:INFO:                 pip: 22.2.2
2023-06-15 15:08:50,866:INFO:          setuptools: 63.4.1
2023-06-15 15:08:50,866:INFO:             pycaret: 3.0.2
2023-06-15 15:08:50,866:INFO:             IPython: 7.31.1
2023-06-15 15:08:50,866:INFO:          ipywidgets: 7.6.5
2023-06-15 15:08:50,866:INFO:                tqdm: 4.64.1
2023-06-15 15:08:50,866:INFO:               numpy: 1.21.5
2023-06-15 15:08:50,866:INFO:              pandas: 1.4.4
2023-06-15 15:08:50,866:INFO:              jinja2: 2.11.3
2023-06-15 15:08:50,866:INFO:               scipy: 1.9.1
2023-06-15 15:08:50,866:INFO:              joblib: 1.1.0
2023-06-15 15:08:50,866:INFO:             sklearn: 1.0.2
2023-06-15 15:08:50,866:INFO:                pyod: 1.0.9
2023-06-15 15:08:50,866:INFO:            imblearn: 0.10.1
2023-06-15 15:08:50,866:INFO:   category_encoders: 2.6.1
2023-06-15 15:08:50,866:INFO:            lightgbm: 3.3.5
2023-06-15 15:08:50,867:INFO:               numba: 0.55.1
2023-06-15 15:08:50,867:INFO:            requests: 2.28.1
2023-06-15 15:08:50,867:INFO:          matplotlib: 3.5.2
2023-06-15 15:08:50,867:INFO:          scikitplot: 0.3.7
2023-06-15 15:08:50,867:INFO:         yellowbrick: 1.5
2023-06-15 15:08:50,867:INFO:              plotly: 5.9.0
2023-06-15 15:08:50,867:INFO:             kaleido: 0.2.1
2023-06-15 15:08:50,867:INFO:         statsmodels: 0.13.2
2023-06-15 15:08:50,867:INFO:              sktime: 0.17.0
2023-06-15 15:08:50,867:INFO:               tbats: 1.1.3
2023-06-15 15:08:50,867:INFO:            pmdarima: 2.0.3
2023-06-15 15:08:50,867:INFO:              psutil: 5.9.0
2023-06-15 15:08:50,867:INFO:PyCaret optional dependencies:
2023-06-15 15:08:50,867:INFO:                shap: Not installed
2023-06-15 15:08:50,867:INFO:           interpret: Not installed
2023-06-15 15:08:50,867:INFO:                umap: Not installed
2023-06-15 15:08:50,867:INFO:    pandas_profiling: Not installed
2023-06-15 15:08:50,867:INFO:  explainerdashboard: Not installed
2023-06-15 15:08:50,868:INFO:             autoviz: Not installed
2023-06-15 15:08:50,868:INFO:           fairlearn: Not installed
2023-06-15 15:08:50,868:INFO:             xgboost: Not installed
2023-06-15 15:08:50,868:INFO:            catboost: Not installed
2023-06-15 15:08:50,868:INFO:              kmodes: Not installed
2023-06-15 15:08:50,868:INFO:             mlxtend: Not installed
2023-06-15 15:08:50,868:INFO:       statsforecast: Not installed
2023-06-15 15:08:50,868:INFO:        tune_sklearn: Not installed
2023-06-15 15:08:50,868:INFO:                 ray: Not installed
2023-06-15 15:08:50,868:INFO:            hyperopt: Not installed
2023-06-15 15:08:50,868:INFO:              optuna: Not installed
2023-06-15 15:08:50,868:INFO:               skopt: Not installed
2023-06-15 15:08:50,868:INFO:              mlflow: Not installed
2023-06-15 15:08:50,868:INFO:              gradio: Not installed
2023-06-15 15:08:50,868:INFO:             fastapi: Not installed
2023-06-15 15:08:50,868:INFO:             uvicorn: Not installed
2023-06-15 15:08:50,868:INFO:              m2cgen: Not installed
2023-06-15 15:08:50,868:INFO:           evidently: Not installed
2023-06-15 15:08:50,868:INFO:               fugue: Not installed
2023-06-15 15:08:50,869:INFO:           streamlit: 1.22.0
2023-06-15 15:08:50,869:INFO:             prophet: Not installed
2023-06-15 15:08:50,869:INFO:None
2023-06-15 15:08:50,869:INFO:Set up data.
2023-06-15 15:08:50,873:INFO:Set up train/test split.
2023-06-15 15:08:50,873:INFO:Set up data.
2023-06-15 15:08:50,877:INFO:Set up index.
2023-06-15 15:08:50,878:INFO:Set up folding strategy.
2023-06-15 15:08:50,878:INFO:Assigning column types.
2023-06-15 15:08:50,881:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 15:08:50,882:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:08:50,887:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:08:50,892:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:50,956:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,005:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,006:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,007:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,012:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,017:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,080:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,130:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,131:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 15:08:51,136:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,142:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,243:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,318:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,319:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,327:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,335:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,433:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,528:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,530:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,532:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 15:08:51,548:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,663:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,733:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,754:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,857:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:51,940:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,941:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:51,941:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 15:08:52,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,105:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,188:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,265:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 15:08:52,366:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,515:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:08:52,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,574:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 15:08:52,707:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:52,896:INFO:Preparing preprocessing pipeline...
2023-06-15 15:08:52,897:INFO:Set up target transformation.
2023-06-15 15:08:52,897:INFO:Set up date feature engineering.
2023-06-15 15:08:52,897:INFO:Set up simple imputation.
2023-06-15 15:08:52,978:INFO:Finished creating preprocessing pipeline.
2023-06-15 15:08:52,987:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-15 15:08:52,987:INFO:Creating final display dataframe.
2023-06-15 15:08:53,174:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (94, 4)
4        Transformed data shape                    (94, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (18, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       b0e6
2023-06-15 15:08:53,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:53,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:53,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:53,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:08:53,560:INFO:setup() successfully completed in 2.94s...............
2023-06-15 15:09:00,434:INFO:Initializing compare_models()
2023-06-15 15:09:00,435:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 15:09:00,435:INFO:Checking exceptions
2023-06-15 15:09:00,439:INFO:Preparing display monitor
2023-06-15 15:09:00,513:INFO:Initializing Linear Regression
2023-06-15 15:09:00,514:INFO:Total runtime is 1.630385716756185e-05 minutes
2023-06-15 15:09:00,521:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:00,522:INFO:Initializing create_model()
2023-06-15 15:09:00,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:00,522:INFO:Checking exceptions
2023-06-15 15:09:00,523:INFO:Importing libraries
2023-06-15 15:09:00,523:INFO:Copying training dataset
2023-06-15 15:09:00,529:INFO:Defining folds
2023-06-15 15:09:00,530:INFO:Declaring metric variables
2023-06-15 15:09:00,535:INFO:Importing untrained model
2023-06-15 15:09:00,543:INFO:Linear Regression Imported successfully
2023-06-15 15:09:00,561:INFO:Starting cross validation
2023-06-15 15:09:00,564:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:15,088:INFO:Calculating mean and std
2023-06-15 15:09:15,090:INFO:Creating metrics dataframe
2023-06-15 15:09:15,315:INFO:Uploading results into container
2023-06-15 15:09:15,316:INFO:Uploading model into container now
2023-06-15 15:09:15,317:INFO:_master_model_container: 1
2023-06-15 15:09:15,317:INFO:_display_container: 2
2023-06-15 15:09:15,318:INFO:LinearRegression(n_jobs=-1)
2023-06-15 15:09:15,318:INFO:create_model() successfully completed......................................
2023-06-15 15:09:15,614:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:15,614:INFO:Creating metrics dataframe
2023-06-15 15:09:15,624:INFO:Initializing Lasso Regression
2023-06-15 15:09:15,624:INFO:Total runtime is 0.25185099442799885 minutes
2023-06-15 15:09:15,628:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:15,629:INFO:Initializing create_model()
2023-06-15 15:09:15,629:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:15,629:INFO:Checking exceptions
2023-06-15 15:09:15,630:INFO:Importing libraries
2023-06-15 15:09:15,630:INFO:Copying training dataset
2023-06-15 15:09:15,639:INFO:Defining folds
2023-06-15 15:09:15,639:INFO:Declaring metric variables
2023-06-15 15:09:15,649:INFO:Importing untrained model
2023-06-15 15:09:15,659:INFO:Lasso Regression Imported successfully
2023-06-15 15:09:15,678:INFO:Starting cross validation
2023-06-15 15:09:15,680:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:20,635:INFO:Calculating mean and std
2023-06-15 15:09:20,639:INFO:Creating metrics dataframe
2023-06-15 15:09:20,921:INFO:Uploading results into container
2023-06-15 15:09:20,922:INFO:Uploading model into container now
2023-06-15 15:09:20,923:INFO:_master_model_container: 2
2023-06-15 15:09:20,923:INFO:_display_container: 2
2023-06-15 15:09:20,924:INFO:Lasso(random_state=123)
2023-06-15 15:09:20,924:INFO:create_model() successfully completed......................................
2023-06-15 15:09:21,028:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:21,028:INFO:Creating metrics dataframe
2023-06-15 15:09:21,039:INFO:Initializing Ridge Regression
2023-06-15 15:09:21,039:INFO:Total runtime is 0.34210973580678306 minutes
2023-06-15 15:09:21,046:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:21,046:INFO:Initializing create_model()
2023-06-15 15:09:21,047:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:21,047:INFO:Checking exceptions
2023-06-15 15:09:21,047:INFO:Importing libraries
2023-06-15 15:09:21,047:INFO:Copying training dataset
2023-06-15 15:09:21,063:INFO:Defining folds
2023-06-15 15:09:21,063:INFO:Declaring metric variables
2023-06-15 15:09:21,073:INFO:Importing untrained model
2023-06-15 15:09:21,079:INFO:Ridge Regression Imported successfully
2023-06-15 15:09:21,095:INFO:Starting cross validation
2023-06-15 15:09:21,097:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:21,795:INFO:Calculating mean and std
2023-06-15 15:09:21,798:INFO:Creating metrics dataframe
2023-06-15 15:09:22,053:INFO:Uploading results into container
2023-06-15 15:09:22,054:INFO:Uploading model into container now
2023-06-15 15:09:22,054:INFO:_master_model_container: 3
2023-06-15 15:09:22,055:INFO:_display_container: 2
2023-06-15 15:09:22,055:INFO:Ridge(random_state=123)
2023-06-15 15:09:22,055:INFO:create_model() successfully completed......................................
2023-06-15 15:09:22,158:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:22,158:INFO:Creating metrics dataframe
2023-06-15 15:09:22,172:INFO:Initializing Elastic Net
2023-06-15 15:09:22,172:INFO:Total runtime is 0.36099331378936766 minutes
2023-06-15 15:09:22,177:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:22,177:INFO:Initializing create_model()
2023-06-15 15:09:22,177:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:22,178:INFO:Checking exceptions
2023-06-15 15:09:22,178:INFO:Importing libraries
2023-06-15 15:09:22,178:INFO:Copying training dataset
2023-06-15 15:09:22,188:INFO:Defining folds
2023-06-15 15:09:22,189:INFO:Declaring metric variables
2023-06-15 15:09:22,195:INFO:Importing untrained model
2023-06-15 15:09:22,205:INFO:Elastic Net Imported successfully
2023-06-15 15:09:22,221:INFO:Starting cross validation
2023-06-15 15:09:22,223:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:22,892:INFO:Calculating mean and std
2023-06-15 15:09:22,895:INFO:Creating metrics dataframe
2023-06-15 15:09:23,130:INFO:Uploading results into container
2023-06-15 15:09:23,131:INFO:Uploading model into container now
2023-06-15 15:09:23,131:INFO:_master_model_container: 4
2023-06-15 15:09:23,131:INFO:_display_container: 2
2023-06-15 15:09:23,132:INFO:ElasticNet(random_state=123)
2023-06-15 15:09:23,132:INFO:create_model() successfully completed......................................
2023-06-15 15:09:23,267:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:23,267:INFO:Creating metrics dataframe
2023-06-15 15:09:23,291:INFO:Initializing Least Angle Regression
2023-06-15 15:09:23,291:INFO:Total runtime is 0.3796435197194417 minutes
2023-06-15 15:09:23,298:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:23,298:INFO:Initializing create_model()
2023-06-15 15:09:23,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:23,300:INFO:Checking exceptions
2023-06-15 15:09:23,301:INFO:Importing libraries
2023-06-15 15:09:23,301:INFO:Copying training dataset
2023-06-15 15:09:23,321:INFO:Defining folds
2023-06-15 15:09:23,321:INFO:Declaring metric variables
2023-06-15 15:09:23,332:INFO:Importing untrained model
2023-06-15 15:09:23,342:INFO:Least Angle Regression Imported successfully
2023-06-15 15:09:23,355:INFO:Starting cross validation
2023-06-15 15:09:23,358:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:23,503:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:23,515:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:23,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:24,189:INFO:Calculating mean and std
2023-06-15 15:09:24,191:INFO:Creating metrics dataframe
2023-06-15 15:09:24,470:INFO:Uploading results into container
2023-06-15 15:09:24,472:INFO:Uploading model into container now
2023-06-15 15:09:24,473:INFO:_master_model_container: 5
2023-06-15 15:09:24,473:INFO:_display_container: 2
2023-06-15 15:09:24,474:INFO:Lars(random_state=123)
2023-06-15 15:09:24,474:INFO:create_model() successfully completed......................................
2023-06-15 15:09:24,582:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:24,583:INFO:Creating metrics dataframe
2023-06-15 15:09:24,600:INFO:Initializing Lasso Least Angle Regression
2023-06-15 15:09:24,600:INFO:Total runtime is 0.4014604608217875 minutes
2023-06-15 15:09:24,608:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:24,608:INFO:Initializing create_model()
2023-06-15 15:09:24,609:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:24,609:INFO:Checking exceptions
2023-06-15 15:09:24,610:INFO:Importing libraries
2023-06-15 15:09:24,610:INFO:Copying training dataset
2023-06-15 15:09:24,619:INFO:Defining folds
2023-06-15 15:09:24,620:INFO:Declaring metric variables
2023-06-15 15:09:24,631:INFO:Importing untrained model
2023-06-15 15:09:24,638:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 15:09:24,656:INFO:Starting cross validation
2023-06-15 15:09:24,658:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:24,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:09:24,824:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:09:24,846:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:09:25,503:INFO:Calculating mean and std
2023-06-15 15:09:25,505:INFO:Creating metrics dataframe
2023-06-15 15:09:25,793:INFO:Uploading results into container
2023-06-15 15:09:25,794:INFO:Uploading model into container now
2023-06-15 15:09:25,795:INFO:_master_model_container: 6
2023-06-15 15:09:25,796:INFO:_display_container: 2
2023-06-15 15:09:25,796:INFO:LassoLars(random_state=123)
2023-06-15 15:09:25,796:INFO:create_model() successfully completed......................................
2023-06-15 15:09:25,921:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:25,922:INFO:Creating metrics dataframe
2023-06-15 15:09:25,941:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 15:09:25,941:INFO:Total runtime is 0.4237939834594726 minutes
2023-06-15 15:09:25,948:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:25,948:INFO:Initializing create_model()
2023-06-15 15:09:25,949:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:25,949:INFO:Checking exceptions
2023-06-15 15:09:25,950:INFO:Importing libraries
2023-06-15 15:09:25,950:INFO:Copying training dataset
2023-06-15 15:09:25,961:INFO:Defining folds
2023-06-15 15:09:25,962:INFO:Declaring metric variables
2023-06-15 15:09:25,976:INFO:Importing untrained model
2023-06-15 15:09:25,986:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 15:09:26,001:INFO:Starting cross validation
2023-06-15 15:09:26,003:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:26,149:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:26,160:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:26,178:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:09:26,822:INFO:Calculating mean and std
2023-06-15 15:09:26,826:INFO:Creating metrics dataframe
2023-06-15 15:09:27,133:INFO:Uploading results into container
2023-06-15 15:09:27,134:INFO:Uploading model into container now
2023-06-15 15:09:27,135:INFO:_master_model_container: 7
2023-06-15 15:09:27,135:INFO:_display_container: 2
2023-06-15 15:09:27,135:INFO:OrthogonalMatchingPursuit()
2023-06-15 15:09:27,135:INFO:create_model() successfully completed......................................
2023-06-15 15:09:27,269:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:27,270:INFO:Creating metrics dataframe
2023-06-15 15:09:27,289:INFO:Initializing Bayesian Ridge
2023-06-15 15:09:27,289:INFO:Total runtime is 0.44626086155573524 minutes
2023-06-15 15:09:27,297:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:27,298:INFO:Initializing create_model()
2023-06-15 15:09:27,299:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:27,299:INFO:Checking exceptions
2023-06-15 15:09:27,299:INFO:Importing libraries
2023-06-15 15:09:27,299:INFO:Copying training dataset
2023-06-15 15:09:27,322:INFO:Defining folds
2023-06-15 15:09:27,322:INFO:Declaring metric variables
2023-06-15 15:09:27,330:INFO:Importing untrained model
2023-06-15 15:09:27,340:INFO:Bayesian Ridge Imported successfully
2023-06-15 15:09:27,355:INFO:Starting cross validation
2023-06-15 15:09:27,357:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:28,157:INFO:Calculating mean and std
2023-06-15 15:09:28,159:INFO:Creating metrics dataframe
2023-06-15 15:09:28,456:INFO:Uploading results into container
2023-06-15 15:09:28,458:INFO:Uploading model into container now
2023-06-15 15:09:28,458:INFO:_master_model_container: 8
2023-06-15 15:09:28,459:INFO:_display_container: 2
2023-06-15 15:09:28,460:INFO:BayesianRidge()
2023-06-15 15:09:28,461:INFO:create_model() successfully completed......................................
2023-06-15 15:09:28,581:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:28,581:INFO:Creating metrics dataframe
2023-06-15 15:09:28,597:INFO:Initializing Passive Aggressive Regressor
2023-06-15 15:09:28,597:INFO:Total runtime is 0.46806110143661495 minutes
2023-06-15 15:09:28,605:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:28,606:INFO:Initializing create_model()
2023-06-15 15:09:28,607:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:28,607:INFO:Checking exceptions
2023-06-15 15:09:28,607:INFO:Importing libraries
2023-06-15 15:09:28,607:INFO:Copying training dataset
2023-06-15 15:09:28,621:INFO:Defining folds
2023-06-15 15:09:28,622:INFO:Declaring metric variables
2023-06-15 15:09:28,631:INFO:Importing untrained model
2023-06-15 15:09:28,642:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:09:28,656:INFO:Starting cross validation
2023-06-15 15:09:28,658:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:29,404:INFO:Calculating mean and std
2023-06-15 15:09:29,407:INFO:Creating metrics dataframe
2023-06-15 15:09:29,644:INFO:Uploading results into container
2023-06-15 15:09:29,644:INFO:Uploading model into container now
2023-06-15 15:09:29,645:INFO:_master_model_container: 9
2023-06-15 15:09:29,645:INFO:_display_container: 2
2023-06-15 15:09:29,646:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:09:29,646:INFO:create_model() successfully completed......................................
2023-06-15 15:09:29,745:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:29,746:INFO:Creating metrics dataframe
2023-06-15 15:09:29,759:INFO:Initializing Huber Regressor
2023-06-15 15:09:29,759:INFO:Total runtime is 0.4874354283014933 minutes
2023-06-15 15:09:29,763:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:29,764:INFO:Initializing create_model()
2023-06-15 15:09:29,764:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:29,764:INFO:Checking exceptions
2023-06-15 15:09:29,764:INFO:Importing libraries
2023-06-15 15:09:29,765:INFO:Copying training dataset
2023-06-15 15:09:29,775:INFO:Defining folds
2023-06-15 15:09:29,776:INFO:Declaring metric variables
2023-06-15 15:09:29,781:INFO:Importing untrained model
2023-06-15 15:09:29,820:INFO:Huber Regressor Imported successfully
2023-06-15 15:09:29,834:INFO:Starting cross validation
2023-06-15 15:09:29,837:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:30,578:INFO:Calculating mean and std
2023-06-15 15:09:30,580:INFO:Creating metrics dataframe
2023-06-15 15:09:30,849:INFO:Uploading results into container
2023-06-15 15:09:30,850:INFO:Uploading model into container now
2023-06-15 15:09:30,851:INFO:_master_model_container: 10
2023-06-15 15:09:30,851:INFO:_display_container: 2
2023-06-15 15:09:30,851:INFO:HuberRegressor()
2023-06-15 15:09:30,852:INFO:create_model() successfully completed......................................
2023-06-15 15:09:30,956:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:30,956:INFO:Creating metrics dataframe
2023-06-15 15:09:30,976:INFO:Initializing K Neighbors Regressor
2023-06-15 15:09:30,976:INFO:Total runtime is 0.5077190438906352 minutes
2023-06-15 15:09:30,980:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:30,981:INFO:Initializing create_model()
2023-06-15 15:09:30,981:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:30,981:INFO:Checking exceptions
2023-06-15 15:09:30,983:INFO:Importing libraries
2023-06-15 15:09:30,983:INFO:Copying training dataset
2023-06-15 15:09:30,993:INFO:Defining folds
2023-06-15 15:09:30,993:INFO:Declaring metric variables
2023-06-15 15:09:30,998:INFO:Importing untrained model
2023-06-15 15:09:31,006:INFO:K Neighbors Regressor Imported successfully
2023-06-15 15:09:31,024:INFO:Starting cross validation
2023-06-15 15:09:31,026:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:31,765:INFO:Calculating mean and std
2023-06-15 15:09:31,768:INFO:Creating metrics dataframe
2023-06-15 15:09:31,999:INFO:Uploading results into container
2023-06-15 15:09:32,000:INFO:Uploading model into container now
2023-06-15 15:09:32,000:INFO:_master_model_container: 11
2023-06-15 15:09:32,000:INFO:_display_container: 2
2023-06-15 15:09:32,001:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 15:09:32,002:INFO:create_model() successfully completed......................................
2023-06-15 15:09:32,105:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:32,105:INFO:Creating metrics dataframe
2023-06-15 15:09:32,121:INFO:Initializing Decision Tree Regressor
2023-06-15 15:09:32,121:INFO:Total runtime is 0.5268025159835815 minutes
2023-06-15 15:09:32,126:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:32,127:INFO:Initializing create_model()
2023-06-15 15:09:32,127:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:32,127:INFO:Checking exceptions
2023-06-15 15:09:32,128:INFO:Importing libraries
2023-06-15 15:09:32,129:INFO:Copying training dataset
2023-06-15 15:09:32,137:INFO:Defining folds
2023-06-15 15:09:32,138:INFO:Declaring metric variables
2023-06-15 15:09:32,146:INFO:Importing untrained model
2023-06-15 15:09:32,159:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:09:32,171:INFO:Starting cross validation
2023-06-15 15:09:32,174:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:32,954:INFO:Calculating mean and std
2023-06-15 15:09:32,956:INFO:Creating metrics dataframe
2023-06-15 15:09:33,167:INFO:Uploading results into container
2023-06-15 15:09:33,168:INFO:Uploading model into container now
2023-06-15 15:09:33,169:INFO:_master_model_container: 12
2023-06-15 15:09:33,169:INFO:_display_container: 2
2023-06-15 15:09:33,169:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:09:33,170:INFO:create_model() successfully completed......................................
2023-06-15 15:09:33,268:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:33,269:INFO:Creating metrics dataframe
2023-06-15 15:09:33,285:INFO:Initializing Random Forest Regressor
2023-06-15 15:09:33,285:INFO:Total runtime is 0.5462027430534363 minutes
2023-06-15 15:09:33,289:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:33,290:INFO:Initializing create_model()
2023-06-15 15:09:33,290:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:33,290:INFO:Checking exceptions
2023-06-15 15:09:33,290:INFO:Importing libraries
2023-06-15 15:09:33,290:INFO:Copying training dataset
2023-06-15 15:09:33,300:INFO:Defining folds
2023-06-15 15:09:33,300:INFO:Declaring metric variables
2023-06-15 15:09:33,308:INFO:Importing untrained model
2023-06-15 15:09:33,319:INFO:Random Forest Regressor Imported successfully
2023-06-15 15:09:33,334:INFO:Starting cross validation
2023-06-15 15:09:33,337:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:34,150:INFO:Calculating mean and std
2023-06-15 15:09:34,152:INFO:Creating metrics dataframe
2023-06-15 15:09:34,380:INFO:Uploading results into container
2023-06-15 15:09:34,382:INFO:Uploading model into container now
2023-06-15 15:09:34,382:INFO:_master_model_container: 13
2023-06-15 15:09:34,382:INFO:_display_container: 2
2023-06-15 15:09:34,383:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:09:34,383:INFO:create_model() successfully completed......................................
2023-06-15 15:09:34,489:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:34,490:INFO:Creating metrics dataframe
2023-06-15 15:09:34,506:INFO:Initializing Extra Trees Regressor
2023-06-15 15:09:34,506:INFO:Total runtime is 0.5665529290835063 minutes
2023-06-15 15:09:34,511:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:34,512:INFO:Initializing create_model()
2023-06-15 15:09:34,512:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:34,512:INFO:Checking exceptions
2023-06-15 15:09:34,512:INFO:Importing libraries
2023-06-15 15:09:34,512:INFO:Copying training dataset
2023-06-15 15:09:34,521:INFO:Defining folds
2023-06-15 15:09:34,521:INFO:Declaring metric variables
2023-06-15 15:09:34,527:INFO:Importing untrained model
2023-06-15 15:09:34,537:INFO:Extra Trees Regressor Imported successfully
2023-06-15 15:09:34,557:INFO:Starting cross validation
2023-06-15 15:09:34,559:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:35,402:INFO:Calculating mean and std
2023-06-15 15:09:35,405:INFO:Creating metrics dataframe
2023-06-15 15:09:35,627:INFO:Uploading results into container
2023-06-15 15:09:35,628:INFO:Uploading model into container now
2023-06-15 15:09:35,629:INFO:_master_model_container: 14
2023-06-15 15:09:35,629:INFO:_display_container: 2
2023-06-15 15:09:35,630:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:09:35,630:INFO:create_model() successfully completed......................................
2023-06-15 15:09:35,727:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:35,727:INFO:Creating metrics dataframe
2023-06-15 15:09:35,745:INFO:Initializing AdaBoost Regressor
2023-06-15 15:09:35,746:INFO:Total runtime is 0.5872228701909383 minutes
2023-06-15 15:09:35,753:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:35,754:INFO:Initializing create_model()
2023-06-15 15:09:35,754:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:35,754:INFO:Checking exceptions
2023-06-15 15:09:35,754:INFO:Importing libraries
2023-06-15 15:09:35,754:INFO:Copying training dataset
2023-06-15 15:09:35,762:INFO:Defining folds
2023-06-15 15:09:35,763:INFO:Declaring metric variables
2023-06-15 15:09:35,775:INFO:Importing untrained model
2023-06-15 15:09:35,785:INFO:AdaBoost Regressor Imported successfully
2023-06-15 15:09:35,795:INFO:Starting cross validation
2023-06-15 15:09:35,797:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:36,478:INFO:Calculating mean and std
2023-06-15 15:09:36,480:INFO:Creating metrics dataframe
2023-06-15 15:09:36,696:INFO:Uploading results into container
2023-06-15 15:09:36,696:INFO:Uploading model into container now
2023-06-15 15:09:36,697:INFO:_master_model_container: 15
2023-06-15 15:09:36,697:INFO:_display_container: 2
2023-06-15 15:09:36,697:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 15:09:36,697:INFO:create_model() successfully completed......................................
2023-06-15 15:09:36,794:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:36,794:INFO:Creating metrics dataframe
2023-06-15 15:09:36,813:INFO:Initializing Gradient Boosting Regressor
2023-06-15 15:09:36,813:INFO:Total runtime is 0.605005693435669 minutes
2023-06-15 15:09:36,821:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:36,821:INFO:Initializing create_model()
2023-06-15 15:09:36,822:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:36,822:INFO:Checking exceptions
2023-06-15 15:09:36,822:INFO:Importing libraries
2023-06-15 15:09:36,822:INFO:Copying training dataset
2023-06-15 15:09:36,829:INFO:Defining folds
2023-06-15 15:09:36,830:INFO:Declaring metric variables
2023-06-15 15:09:36,835:INFO:Importing untrained model
2023-06-15 15:09:36,843:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 15:09:36,861:INFO:Starting cross validation
2023-06-15 15:09:36,863:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:37,655:INFO:Calculating mean and std
2023-06-15 15:09:37,658:INFO:Creating metrics dataframe
2023-06-15 15:09:37,940:INFO:Uploading results into container
2023-06-15 15:09:37,941:INFO:Uploading model into container now
2023-06-15 15:09:37,942:INFO:_master_model_container: 16
2023-06-15 15:09:37,942:INFO:_display_container: 2
2023-06-15 15:09:37,943:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 15:09:37,943:INFO:create_model() successfully completed......................................
2023-06-15 15:09:38,053:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:38,053:INFO:Creating metrics dataframe
2023-06-15 15:09:38,069:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 15:09:38,070:INFO:Total runtime is 0.6259560863176983 minutes
2023-06-15 15:09:38,074:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:38,075:INFO:Initializing create_model()
2023-06-15 15:09:38,075:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:38,075:INFO:Checking exceptions
2023-06-15 15:09:38,076:INFO:Importing libraries
2023-06-15 15:09:38,076:INFO:Copying training dataset
2023-06-15 15:09:38,084:INFO:Defining folds
2023-06-15 15:09:38,085:INFO:Declaring metric variables
2023-06-15 15:09:38,091:INFO:Importing untrained model
2023-06-15 15:09:38,101:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 15:09:38,116:INFO:Starting cross validation
2023-06-15 15:09:38,119:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:41,404:INFO:Calculating mean and std
2023-06-15 15:09:41,406:INFO:Creating metrics dataframe
2023-06-15 15:09:41,678:INFO:Uploading results into container
2023-06-15 15:09:41,680:INFO:Uploading model into container now
2023-06-15 15:09:41,681:INFO:_master_model_container: 17
2023-06-15 15:09:41,681:INFO:_display_container: 2
2023-06-15 15:09:41,682:INFO:LGBMRegressor(random_state=123)
2023-06-15 15:09:41,683:INFO:create_model() successfully completed......................................
2023-06-15 15:09:41,801:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:41,801:INFO:Creating metrics dataframe
2023-06-15 15:09:41,826:INFO:Initializing Dummy Regressor
2023-06-15 15:09:41,826:INFO:Total runtime is 0.6885567784309389 minutes
2023-06-15 15:09:41,834:INFO:SubProcess create_model() called ==================================
2023-06-15 15:09:41,835:INFO:Initializing create_model()
2023-06-15 15:09:41,835:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EADC0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:41,836:INFO:Checking exceptions
2023-06-15 15:09:41,836:INFO:Importing libraries
2023-06-15 15:09:41,836:INFO:Copying training dataset
2023-06-15 15:09:41,848:INFO:Defining folds
2023-06-15 15:09:41,848:INFO:Declaring metric variables
2023-06-15 15:09:41,857:INFO:Importing untrained model
2023-06-15 15:09:41,868:INFO:Dummy Regressor Imported successfully
2023-06-15 15:09:41,887:INFO:Starting cross validation
2023-06-15 15:09:41,891:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:09:42,668:INFO:Calculating mean and std
2023-06-15 15:09:42,672:INFO:Creating metrics dataframe
2023-06-15 15:09:42,962:INFO:Uploading results into container
2023-06-15 15:09:42,963:INFO:Uploading model into container now
2023-06-15 15:09:42,964:INFO:_master_model_container: 18
2023-06-15 15:09:42,964:INFO:_display_container: 2
2023-06-15 15:09:42,965:INFO:DummyRegressor()
2023-06-15 15:09:42,965:INFO:create_model() successfully completed......................................
2023-06-15 15:09:43,089:INFO:SubProcess create_model() end ==================================
2023-06-15 15:09:43,089:INFO:Creating metrics dataframe
2023-06-15 15:09:43,134:INFO:Initializing create_model()
2023-06-15 15:09:43,135:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=PassiveAggressiveRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:09:43,136:INFO:Checking exceptions
2023-06-15 15:09:43,139:INFO:Importing libraries
2023-06-15 15:09:43,139:INFO:Copying training dataset
2023-06-15 15:09:43,147:INFO:Defining folds
2023-06-15 15:09:43,148:INFO:Declaring metric variables
2023-06-15 15:09:43,148:INFO:Importing untrained model
2023-06-15 15:09:43,149:INFO:Declaring custom model
2023-06-15 15:09:43,150:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:09:43,153:INFO:Cross validation set to False
2023-06-15 15:09:43,153:INFO:Fitting Model
2023-06-15 15:09:43,492:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:09:43,492:INFO:create_model() successfully completed......................................
2023-06-15 15:09:43,694:INFO:_master_model_container: 18
2023-06-15 15:09:43,694:INFO:_display_container: 2
2023-06-15 15:09:43,695:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:09:43,695:INFO:compare_models() successfully completed......................................
2023-06-15 15:10:01,219:INFO:Initializing predict_model()
2023-06-15 15:10:01,219:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=DecisionTreeRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D418EE040>)
2023-06-15 15:10:01,219:INFO:Checking exceptions
2023-06-15 15:10:01,220:INFO:Preloading libraries
2023-06-15 15:10:01,223:INFO:Set up data.
2023-06-15 15:10:01,227:INFO:Set up index.
2023-06-15 15:10:36,347:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3563259489.py:4: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:10:36,349:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\3563259489.py:5: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:10:55,852:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\1074727570.py:4: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:10:55,854:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_6612\1074727570.py:5: SettingWithCopyWarning:


A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy


2023-06-15 15:11:00,625:INFO:Initializing compare_models()
2023-06-15 15:11:00,625:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 15:11:00,625:INFO:Checking exceptions
2023-06-15 15:11:00,630:INFO:Preparing display monitor
2023-06-15 15:11:00,709:INFO:Initializing Linear Regression
2023-06-15 15:11:00,710:INFO:Total runtime is 1.6697247823079427e-05 minutes
2023-06-15 15:11:00,721:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:00,721:INFO:Initializing create_model()
2023-06-15 15:11:00,722:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:00,722:INFO:Checking exceptions
2023-06-15 15:11:00,722:INFO:Importing libraries
2023-06-15 15:11:00,723:INFO:Copying training dataset
2023-06-15 15:11:00,731:INFO:Defining folds
2023-06-15 15:11:00,732:INFO:Declaring metric variables
2023-06-15 15:11:00,740:INFO:Importing untrained model
2023-06-15 15:11:00,751:INFO:Linear Regression Imported successfully
2023-06-15 15:11:00,773:INFO:Starting cross validation
2023-06-15 15:11:00,776:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:01,723:INFO:Calculating mean and std
2023-06-15 15:11:01,725:INFO:Creating metrics dataframe
2023-06-15 15:11:02,015:INFO:Uploading results into container
2023-06-15 15:11:02,017:INFO:Uploading model into container now
2023-06-15 15:11:02,018:INFO:_master_model_container: 19
2023-06-15 15:11:02,018:INFO:_display_container: 3
2023-06-15 15:11:02,019:INFO:LinearRegression(n_jobs=-1)
2023-06-15 15:11:02,020:INFO:create_model() successfully completed......................................
2023-06-15 15:11:02,157:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:02,158:INFO:Creating metrics dataframe
2023-06-15 15:11:02,170:INFO:Initializing Lasso Regression
2023-06-15 15:11:02,171:INFO:Total runtime is 0.024366879463195802 minutes
2023-06-15 15:11:02,178:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:02,178:INFO:Initializing create_model()
2023-06-15 15:11:02,179:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:02,179:INFO:Checking exceptions
2023-06-15 15:11:02,179:INFO:Importing libraries
2023-06-15 15:11:02,180:INFO:Copying training dataset
2023-06-15 15:11:02,189:INFO:Defining folds
2023-06-15 15:11:02,190:INFO:Declaring metric variables
2023-06-15 15:11:02,196:INFO:Importing untrained model
2023-06-15 15:11:02,210:INFO:Lasso Regression Imported successfully
2023-06-15 15:11:02,227:INFO:Starting cross validation
2023-06-15 15:11:02,230:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:03,122:INFO:Calculating mean and std
2023-06-15 15:11:03,125:INFO:Creating metrics dataframe
2023-06-15 15:11:03,404:INFO:Uploading results into container
2023-06-15 15:11:03,406:INFO:Uploading model into container now
2023-06-15 15:11:03,407:INFO:_master_model_container: 20
2023-06-15 15:11:03,407:INFO:_display_container: 3
2023-06-15 15:11:03,408:INFO:Lasso(random_state=123)
2023-06-15 15:11:03,408:INFO:create_model() successfully completed......................................
2023-06-15 15:11:03,532:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:03,532:INFO:Creating metrics dataframe
2023-06-15 15:11:03,553:INFO:Initializing Ridge Regression
2023-06-15 15:11:03,553:INFO:Total runtime is 0.04740045865376791 minutes
2023-06-15 15:11:03,559:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:03,560:INFO:Initializing create_model()
2023-06-15 15:11:03,560:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:03,560:INFO:Checking exceptions
2023-06-15 15:11:03,560:INFO:Importing libraries
2023-06-15 15:11:03,561:INFO:Copying training dataset
2023-06-15 15:11:03,574:INFO:Defining folds
2023-06-15 15:11:03,575:INFO:Declaring metric variables
2023-06-15 15:11:03,583:INFO:Importing untrained model
2023-06-15 15:11:03,594:INFO:Ridge Regression Imported successfully
2023-06-15 15:11:03,609:INFO:Starting cross validation
2023-06-15 15:11:03,611:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:04,366:INFO:Calculating mean and std
2023-06-15 15:11:04,368:INFO:Creating metrics dataframe
2023-06-15 15:11:04,588:INFO:Uploading results into container
2023-06-15 15:11:04,590:INFO:Uploading model into container now
2023-06-15 15:11:04,590:INFO:_master_model_container: 21
2023-06-15 15:11:04,591:INFO:_display_container: 3
2023-06-15 15:11:04,591:INFO:Ridge(random_state=123)
2023-06-15 15:11:04,591:INFO:create_model() successfully completed......................................
2023-06-15 15:11:04,688:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:04,689:INFO:Creating metrics dataframe
2023-06-15 15:11:04,700:INFO:Initializing Elastic Net
2023-06-15 15:11:04,700:INFO:Total runtime is 0.06651730934778849 minutes
2023-06-15 15:11:04,705:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:04,706:INFO:Initializing create_model()
2023-06-15 15:11:04,706:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:04,706:INFO:Checking exceptions
2023-06-15 15:11:04,706:INFO:Importing libraries
2023-06-15 15:11:04,707:INFO:Copying training dataset
2023-06-15 15:11:04,717:INFO:Defining folds
2023-06-15 15:11:04,724:INFO:Declaring metric variables
2023-06-15 15:11:04,732:INFO:Importing untrained model
2023-06-15 15:11:04,743:INFO:Elastic Net Imported successfully
2023-06-15 15:11:04,754:INFO:Starting cross validation
2023-06-15 15:11:04,756:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:05,391:INFO:Calculating mean and std
2023-06-15 15:11:05,393:INFO:Creating metrics dataframe
2023-06-15 15:11:05,619:INFO:Uploading results into container
2023-06-15 15:11:05,620:INFO:Uploading model into container now
2023-06-15 15:11:05,621:INFO:_master_model_container: 22
2023-06-15 15:11:05,621:INFO:_display_container: 3
2023-06-15 15:11:05,622:INFO:ElasticNet(random_state=123)
2023-06-15 15:11:05,622:INFO:create_model() successfully completed......................................
2023-06-15 15:11:05,721:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:05,721:INFO:Creating metrics dataframe
2023-06-15 15:11:05,732:INFO:Initializing Least Angle Regression
2023-06-15 15:11:05,733:INFO:Total runtime is 0.08374129931131999 minutes
2023-06-15 15:11:05,738:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:05,738:INFO:Initializing create_model()
2023-06-15 15:11:05,738:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:05,739:INFO:Checking exceptions
2023-06-15 15:11:05,739:INFO:Importing libraries
2023-06-15 15:11:05,739:INFO:Copying training dataset
2023-06-15 15:11:05,749:INFO:Defining folds
2023-06-15 15:11:05,750:INFO:Declaring metric variables
2023-06-15 15:11:05,763:INFO:Importing untrained model
2023-06-15 15:11:05,771:INFO:Least Angle Regression Imported successfully
2023-06-15 15:11:05,782:INFO:Starting cross validation
2023-06-15 15:11:05,786:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:05,909:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:05,914:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:05,926:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:06,470:INFO:Calculating mean and std
2023-06-15 15:11:06,472:INFO:Creating metrics dataframe
2023-06-15 15:11:06,705:INFO:Uploading results into container
2023-06-15 15:11:06,706:INFO:Uploading model into container now
2023-06-15 15:11:06,707:INFO:_master_model_container: 23
2023-06-15 15:11:06,707:INFO:_display_container: 3
2023-06-15 15:11:06,707:INFO:Lars(random_state=123)
2023-06-15 15:11:06,708:INFO:create_model() successfully completed......................................
2023-06-15 15:11:06,811:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:06,812:INFO:Creating metrics dataframe
2023-06-15 15:11:06,824:INFO:Initializing Lasso Least Angle Regression
2023-06-15 15:11:06,824:INFO:Total runtime is 0.10192484855651855 minutes
2023-06-15 15:11:06,831:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:06,832:INFO:Initializing create_model()
2023-06-15 15:11:06,832:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:06,832:INFO:Checking exceptions
2023-06-15 15:11:06,832:INFO:Importing libraries
2023-06-15 15:11:06,833:INFO:Copying training dataset
2023-06-15 15:11:06,848:INFO:Defining folds
2023-06-15 15:11:06,849:INFO:Declaring metric variables
2023-06-15 15:11:06,856:INFO:Importing untrained model
2023-06-15 15:11:06,866:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 15:11:06,885:INFO:Starting cross validation
2023-06-15 15:11:06,887:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:07,000:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:11:07,013:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:11:07,021:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:11:07,568:INFO:Calculating mean and std
2023-06-15 15:11:07,570:INFO:Creating metrics dataframe
2023-06-15 15:11:07,790:INFO:Uploading results into container
2023-06-15 15:11:07,792:INFO:Uploading model into container now
2023-06-15 15:11:07,792:INFO:_master_model_container: 24
2023-06-15 15:11:07,793:INFO:_display_container: 3
2023-06-15 15:11:07,794:INFO:LassoLars(random_state=123)
2023-06-15 15:11:07,794:INFO:create_model() successfully completed......................................
2023-06-15 15:11:07,895:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:07,895:INFO:Creating metrics dataframe
2023-06-15 15:11:07,908:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 15:11:07,908:INFO:Total runtime is 0.11998337507247925 minutes
2023-06-15 15:11:07,913:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:07,913:INFO:Initializing create_model()
2023-06-15 15:11:07,914:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:07,914:INFO:Checking exceptions
2023-06-15 15:11:07,914:INFO:Importing libraries
2023-06-15 15:11:07,914:INFO:Copying training dataset
2023-06-15 15:11:07,923:INFO:Defining folds
2023-06-15 15:11:07,923:INFO:Declaring metric variables
2023-06-15 15:11:07,935:INFO:Importing untrained model
2023-06-15 15:11:07,943:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 15:11:07,957:INFO:Starting cross validation
2023-06-15 15:11:07,961:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:08,085:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:08,102:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:08,121:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:11:08,637:INFO:Calculating mean and std
2023-06-15 15:11:08,639:INFO:Creating metrics dataframe
2023-06-15 15:11:08,865:INFO:Uploading results into container
2023-06-15 15:11:08,866:INFO:Uploading model into container now
2023-06-15 15:11:08,867:INFO:_master_model_container: 25
2023-06-15 15:11:08,867:INFO:_display_container: 3
2023-06-15 15:11:08,868:INFO:OrthogonalMatchingPursuit()
2023-06-15 15:11:08,868:INFO:create_model() successfully completed......................................
2023-06-15 15:11:08,969:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:08,969:INFO:Creating metrics dataframe
2023-06-15 15:11:08,981:INFO:Initializing Bayesian Ridge
2023-06-15 15:11:08,982:INFO:Total runtime is 0.13786690235137938 minutes
2023-06-15 15:11:08,988:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:08,989:INFO:Initializing create_model()
2023-06-15 15:11:08,989:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:08,989:INFO:Checking exceptions
2023-06-15 15:11:08,990:INFO:Importing libraries
2023-06-15 15:11:08,990:INFO:Copying training dataset
2023-06-15 15:11:09,002:INFO:Defining folds
2023-06-15 15:11:09,002:INFO:Declaring metric variables
2023-06-15 15:11:09,011:INFO:Importing untrained model
2023-06-15 15:11:09,019:INFO:Bayesian Ridge Imported successfully
2023-06-15 15:11:09,031:INFO:Starting cross validation
2023-06-15 15:11:09,033:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:09,698:INFO:Calculating mean and std
2023-06-15 15:11:09,699:INFO:Creating metrics dataframe
2023-06-15 15:11:09,991:INFO:Uploading results into container
2023-06-15 15:11:09,992:INFO:Uploading model into container now
2023-06-15 15:11:09,993:INFO:_master_model_container: 26
2023-06-15 15:11:09,994:INFO:_display_container: 3
2023-06-15 15:11:09,994:INFO:BayesianRidge()
2023-06-15 15:11:09,996:INFO:create_model() successfully completed......................................
2023-06-15 15:11:10,112:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:10,112:INFO:Creating metrics dataframe
2023-06-15 15:11:10,130:INFO:Initializing Passive Aggressive Regressor
2023-06-15 15:11:10,130:INFO:Total runtime is 0.15703182220458983 minutes
2023-06-15 15:11:10,138:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:10,139:INFO:Initializing create_model()
2023-06-15 15:11:10,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:10,140:INFO:Checking exceptions
2023-06-15 15:11:10,140:INFO:Importing libraries
2023-06-15 15:11:10,140:INFO:Copying training dataset
2023-06-15 15:11:10,154:INFO:Defining folds
2023-06-15 15:11:10,154:INFO:Declaring metric variables
2023-06-15 15:11:10,164:INFO:Importing untrained model
2023-06-15 15:11:10,174:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:11:10,193:INFO:Starting cross validation
2023-06-15 15:11:10,194:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:10,903:INFO:Calculating mean and std
2023-06-15 15:11:10,904:INFO:Creating metrics dataframe
2023-06-15 15:11:11,135:INFO:Uploading results into container
2023-06-15 15:11:11,137:INFO:Uploading model into container now
2023-06-15 15:11:11,137:INFO:_master_model_container: 27
2023-06-15 15:11:11,138:INFO:_display_container: 3
2023-06-15 15:11:11,138:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:11:11,139:INFO:create_model() successfully completed......................................
2023-06-15 15:11:11,238:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:11,238:INFO:Creating metrics dataframe
2023-06-15 15:11:11,251:INFO:Initializing Huber Regressor
2023-06-15 15:11:11,251:INFO:Total runtime is 0.17570743163426716 minutes
2023-06-15 15:11:11,256:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:11,257:INFO:Initializing create_model()
2023-06-15 15:11:11,257:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:11,257:INFO:Checking exceptions
2023-06-15 15:11:11,258:INFO:Importing libraries
2023-06-15 15:11:11,258:INFO:Copying training dataset
2023-06-15 15:11:11,265:INFO:Defining folds
2023-06-15 15:11:11,266:INFO:Declaring metric variables
2023-06-15 15:11:11,275:INFO:Importing untrained model
2023-06-15 15:11:11,283:INFO:Huber Regressor Imported successfully
2023-06-15 15:11:11,298:INFO:Starting cross validation
2023-06-15 15:11:11,302:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:12,022:INFO:Calculating mean and std
2023-06-15 15:11:12,024:INFO:Creating metrics dataframe
2023-06-15 15:11:12,244:INFO:Uploading results into container
2023-06-15 15:11:12,245:INFO:Uploading model into container now
2023-06-15 15:11:12,246:INFO:_master_model_container: 28
2023-06-15 15:11:12,246:INFO:_display_container: 3
2023-06-15 15:11:12,247:INFO:HuberRegressor()
2023-06-15 15:11:12,247:INFO:create_model() successfully completed......................................
2023-06-15 15:11:12,345:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:12,345:INFO:Creating metrics dataframe
2023-06-15 15:11:12,366:INFO:Initializing K Neighbors Regressor
2023-06-15 15:11:12,366:INFO:Total runtime is 0.19429095983505248 minutes
2023-06-15 15:11:12,372:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:12,373:INFO:Initializing create_model()
2023-06-15 15:11:12,373:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:12,373:INFO:Checking exceptions
2023-06-15 15:11:12,373:INFO:Importing libraries
2023-06-15 15:11:12,373:INFO:Copying training dataset
2023-06-15 15:11:12,381:INFO:Defining folds
2023-06-15 15:11:12,381:INFO:Declaring metric variables
2023-06-15 15:11:12,394:INFO:Importing untrained model
2023-06-15 15:11:12,402:INFO:K Neighbors Regressor Imported successfully
2023-06-15 15:11:12,414:INFO:Starting cross validation
2023-06-15 15:11:12,416:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:13,102:INFO:Calculating mean and std
2023-06-15 15:11:13,104:INFO:Creating metrics dataframe
2023-06-15 15:11:13,323:INFO:Uploading results into container
2023-06-15 15:11:13,324:INFO:Uploading model into container now
2023-06-15 15:11:13,327:INFO:_master_model_container: 29
2023-06-15 15:11:13,327:INFO:_display_container: 3
2023-06-15 15:11:13,327:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 15:11:13,328:INFO:create_model() successfully completed......................................
2023-06-15 15:11:13,425:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:13,425:INFO:Creating metrics dataframe
2023-06-15 15:11:13,439:INFO:Initializing Decision Tree Regressor
2023-06-15 15:11:13,439:INFO:Total runtime is 0.21216856638590495 minutes
2023-06-15 15:11:13,443:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:13,444:INFO:Initializing create_model()
2023-06-15 15:11:13,444:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:13,445:INFO:Checking exceptions
2023-06-15 15:11:13,445:INFO:Importing libraries
2023-06-15 15:11:13,445:INFO:Copying training dataset
2023-06-15 15:11:13,454:INFO:Defining folds
2023-06-15 15:11:13,455:INFO:Declaring metric variables
2023-06-15 15:11:13,463:INFO:Importing untrained model
2023-06-15 15:11:13,477:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:11:13,491:INFO:Starting cross validation
2023-06-15 15:11:13,493:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:14,179:INFO:Calculating mean and std
2023-06-15 15:11:14,181:INFO:Creating metrics dataframe
2023-06-15 15:11:14,409:INFO:Uploading results into container
2023-06-15 15:11:14,410:INFO:Uploading model into container now
2023-06-15 15:11:14,411:INFO:_master_model_container: 30
2023-06-15 15:11:14,411:INFO:_display_container: 3
2023-06-15 15:11:14,411:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:11:14,412:INFO:create_model() successfully completed......................................
2023-06-15 15:11:14,513:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:14,513:INFO:Creating metrics dataframe
2023-06-15 15:11:14,528:INFO:Initializing Random Forest Regressor
2023-06-15 15:11:14,528:INFO:Total runtime is 0.2303187370300293 minutes
2023-06-15 15:11:14,534:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:14,535:INFO:Initializing create_model()
2023-06-15 15:11:14,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:14,535:INFO:Checking exceptions
2023-06-15 15:11:14,536:INFO:Importing libraries
2023-06-15 15:11:14,536:INFO:Copying training dataset
2023-06-15 15:11:14,544:INFO:Defining folds
2023-06-15 15:11:14,544:INFO:Declaring metric variables
2023-06-15 15:11:14,558:INFO:Importing untrained model
2023-06-15 15:11:14,566:INFO:Random Forest Regressor Imported successfully
2023-06-15 15:11:14,579:INFO:Starting cross validation
2023-06-15 15:11:14,581:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:15,458:INFO:Calculating mean and std
2023-06-15 15:11:15,462:INFO:Creating metrics dataframe
2023-06-15 15:11:15,753:INFO:Uploading results into container
2023-06-15 15:11:15,755:INFO:Uploading model into container now
2023-06-15 15:11:15,756:INFO:_master_model_container: 31
2023-06-15 15:11:15,757:INFO:_display_container: 3
2023-06-15 15:11:15,758:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:11:15,758:INFO:create_model() successfully completed......................................
2023-06-15 15:11:15,880:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:15,880:INFO:Creating metrics dataframe
2023-06-15 15:11:15,901:INFO:Initializing Extra Trees Regressor
2023-06-15 15:11:15,901:INFO:Total runtime is 0.2532023588816325 minutes
2023-06-15 15:11:15,909:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:15,912:INFO:Initializing create_model()
2023-06-15 15:11:15,912:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:15,912:INFO:Checking exceptions
2023-06-15 15:11:15,913:INFO:Importing libraries
2023-06-15 15:11:15,913:INFO:Copying training dataset
2023-06-15 15:11:15,926:INFO:Defining folds
2023-06-15 15:11:15,927:INFO:Declaring metric variables
2023-06-15 15:11:15,936:INFO:Importing untrained model
2023-06-15 15:11:15,945:INFO:Extra Trees Regressor Imported successfully
2023-06-15 15:11:15,964:INFO:Starting cross validation
2023-06-15 15:11:15,969:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:17,078:INFO:Calculating mean and std
2023-06-15 15:11:17,080:INFO:Creating metrics dataframe
2023-06-15 15:11:17,377:INFO:Uploading results into container
2023-06-15 15:11:17,379:INFO:Uploading model into container now
2023-06-15 15:11:17,380:INFO:_master_model_container: 32
2023-06-15 15:11:17,380:INFO:_display_container: 3
2023-06-15 15:11:17,381:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:11:17,381:INFO:create_model() successfully completed......................................
2023-06-15 15:11:17,499:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:17,499:INFO:Creating metrics dataframe
2023-06-15 15:11:17,519:INFO:Initializing AdaBoost Regressor
2023-06-15 15:11:17,519:INFO:Total runtime is 0.28016930023829145 minutes
2023-06-15 15:11:17,525:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:17,526:INFO:Initializing create_model()
2023-06-15 15:11:17,526:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:17,527:INFO:Checking exceptions
2023-06-15 15:11:17,527:INFO:Importing libraries
2023-06-15 15:11:17,527:INFO:Copying training dataset
2023-06-15 15:11:17,537:INFO:Defining folds
2023-06-15 15:11:17,538:INFO:Declaring metric variables
2023-06-15 15:11:17,548:INFO:Importing untrained model
2023-06-15 15:11:17,558:INFO:AdaBoost Regressor Imported successfully
2023-06-15 15:11:17,579:INFO:Starting cross validation
2023-06-15 15:11:17,581:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:18,401:INFO:Calculating mean and std
2023-06-15 15:11:18,403:INFO:Creating metrics dataframe
2023-06-15 15:11:18,680:INFO:Uploading results into container
2023-06-15 15:11:18,681:INFO:Uploading model into container now
2023-06-15 15:11:18,682:INFO:_master_model_container: 33
2023-06-15 15:11:18,683:INFO:_display_container: 3
2023-06-15 15:11:18,684:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 15:11:18,684:INFO:create_model() successfully completed......................................
2023-06-15 15:11:18,798:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:18,798:INFO:Creating metrics dataframe
2023-06-15 15:11:18,820:INFO:Initializing Gradient Boosting Regressor
2023-06-15 15:11:18,821:INFO:Total runtime is 0.3018695155779521 minutes
2023-06-15 15:11:18,829:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:18,830:INFO:Initializing create_model()
2023-06-15 15:11:18,830:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:18,830:INFO:Checking exceptions
2023-06-15 15:11:18,831:INFO:Importing libraries
2023-06-15 15:11:18,831:INFO:Copying training dataset
2023-06-15 15:11:18,851:INFO:Defining folds
2023-06-15 15:11:18,852:INFO:Declaring metric variables
2023-06-15 15:11:18,861:INFO:Importing untrained model
2023-06-15 15:11:18,872:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 15:11:18,894:INFO:Starting cross validation
2023-06-15 15:11:18,895:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:20,037:INFO:Calculating mean and std
2023-06-15 15:11:20,039:INFO:Creating metrics dataframe
2023-06-15 15:11:20,323:INFO:Uploading results into container
2023-06-15 15:11:20,324:INFO:Uploading model into container now
2023-06-15 15:11:20,325:INFO:_master_model_container: 34
2023-06-15 15:11:20,325:INFO:_display_container: 3
2023-06-15 15:11:20,326:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 15:11:20,327:INFO:create_model() successfully completed......................................
2023-06-15 15:11:20,456:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:20,456:INFO:Creating metrics dataframe
2023-06-15 15:11:20,480:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 15:11:20,480:INFO:Total runtime is 0.32952046791712447 minutes
2023-06-15 15:11:20,488:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:20,489:INFO:Initializing create_model()
2023-06-15 15:11:20,489:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:20,489:INFO:Checking exceptions
2023-06-15 15:11:20,489:INFO:Importing libraries
2023-06-15 15:11:20,489:INFO:Copying training dataset
2023-06-15 15:11:20,503:INFO:Defining folds
2023-06-15 15:11:20,503:INFO:Declaring metric variables
2023-06-15 15:11:20,519:INFO:Importing untrained model
2023-06-15 15:11:20,531:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 15:11:20,547:INFO:Starting cross validation
2023-06-15 15:11:20,550:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:21,291:INFO:Calculating mean and std
2023-06-15 15:11:21,293:INFO:Creating metrics dataframe
2023-06-15 15:11:21,507:INFO:Uploading results into container
2023-06-15 15:11:21,508:INFO:Uploading model into container now
2023-06-15 15:11:21,508:INFO:_master_model_container: 35
2023-06-15 15:11:21,509:INFO:_display_container: 3
2023-06-15 15:11:21,509:INFO:LGBMRegressor(random_state=123)
2023-06-15 15:11:21,510:INFO:create_model() successfully completed......................................
2023-06-15 15:11:21,609:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:21,609:INFO:Creating metrics dataframe
2023-06-15 15:11:21,624:INFO:Initializing Dummy Regressor
2023-06-15 15:11:21,624:INFO:Total runtime is 0.3485866785049439 minutes
2023-06-15 15:11:21,631:INFO:SubProcess create_model() called ==================================
2023-06-15 15:11:21,632:INFO:Initializing create_model()
2023-06-15 15:11:21,632:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D3B0DA220>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:21,633:INFO:Checking exceptions
2023-06-15 15:11:21,633:INFO:Importing libraries
2023-06-15 15:11:21,633:INFO:Copying training dataset
2023-06-15 15:11:21,643:INFO:Defining folds
2023-06-15 15:11:21,644:INFO:Declaring metric variables
2023-06-15 15:11:21,654:INFO:Importing untrained model
2023-06-15 15:11:21,664:INFO:Dummy Regressor Imported successfully
2023-06-15 15:11:21,679:INFO:Starting cross validation
2023-06-15 15:11:21,680:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:11:22,357:INFO:Calculating mean and std
2023-06-15 15:11:22,359:INFO:Creating metrics dataframe
2023-06-15 15:11:22,590:INFO:Uploading results into container
2023-06-15 15:11:22,591:INFO:Uploading model into container now
2023-06-15 15:11:22,592:INFO:_master_model_container: 36
2023-06-15 15:11:22,592:INFO:_display_container: 3
2023-06-15 15:11:22,592:INFO:DummyRegressor()
2023-06-15 15:11:22,593:INFO:create_model() successfully completed......................................
2023-06-15 15:11:22,692:INFO:SubProcess create_model() end ==================================
2023-06-15 15:11:22,693:INFO:Creating metrics dataframe
2023-06-15 15:11:22,725:INFO:Initializing create_model()
2023-06-15 15:11:22,725:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=PassiveAggressiveRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:11:22,726:INFO:Checking exceptions
2023-06-15 15:11:22,729:INFO:Importing libraries
2023-06-15 15:11:22,729:INFO:Copying training dataset
2023-06-15 15:11:22,741:INFO:Defining folds
2023-06-15 15:11:22,742:INFO:Declaring metric variables
2023-06-15 15:11:22,742:INFO:Importing untrained model
2023-06-15 15:11:22,742:INFO:Declaring custom model
2023-06-15 15:11:22,743:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:11:22,745:INFO:Cross validation set to False
2023-06-15 15:11:22,745:INFO:Fitting Model
2023-06-15 15:11:22,988:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:11:22,988:INFO:create_model() successfully completed......................................
2023-06-15 15:11:23,145:INFO:_master_model_container: 36
2023-06-15 15:11:23,146:INFO:_display_container: 3
2023-06-15 15:11:23,146:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:11:23,147:INFO:compare_models() successfully completed......................................
2023-06-15 15:14:33,860:INFO:Initializing predict_model()
2023-06-15 15:14:33,861:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=DecisionTreeRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D43BFCCA0>)
2023-06-15 15:14:33,861:INFO:Checking exceptions
2023-06-15 15:14:33,861:INFO:Preloading libraries
2023-06-15 15:14:33,864:INFO:Set up data.
2023-06-15 15:14:33,869:INFO:Set up index.
2023-06-15 15:18:29,547:INFO:Initializing predict_model()
2023-06-15 15:18:29,547:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D43A54F70>)
2023-06-15 15:18:29,547:INFO:Checking exceptions
2023-06-15 15:18:29,548:INFO:Preloading libraries
2023-06-15 15:18:29,552:INFO:Set up data.
2023-06-15 15:18:29,558:INFO:Set up index.
2023-06-15 15:18:56,080:INFO:Initializing predict_model()
2023-06-15 15:18:56,081:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D420CE280>)
2023-06-15 15:18:56,081:INFO:Checking exceptions
2023-06-15 15:18:56,081:INFO:Preloading libraries
2023-06-15 15:18:56,085:INFO:Set up data.
2023-06-15 15:18:56,089:INFO:Set up index.
2023-06-15 15:19:14,384:INFO:Initializing predict_model()
2023-06-15 15:19:14,384:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D426A4250>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D4246A280>)
2023-06-15 15:19:14,384:INFO:Checking exceptions
2023-06-15 15:19:14,384:INFO:Preloading libraries
2023-06-15 15:19:14,388:INFO:Set up data.
2023-06-15 15:19:14,393:INFO:Set up index.
2023-06-15 15:23:20,568:INFO:PyCaret RegressionExperiment
2023-06-15 15:23:20,568:INFO:Logging name: reg-default-name
2023-06-15 15:23:20,569:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-15 15:23:20,569:INFO:version 3.0.2
2023-06-15 15:23:20,569:INFO:Initializing setup()
2023-06-15 15:23:20,569:INFO:self.USI: 5b5f
2023-06-15 15:23:20,569:INFO:self._variable_keys: {'fold_generator', 'y_test', 'data', 'seed', 'fold_groups_param', 'fold_shuffle_param', 'X_train', 'n_jobs_param', 'target_param', 'y', 'html_param', 'exp_name_log', '_available_plots', '_ml_usecase', 'X_test', 'logging_param', 'USI', 'memory', 'exp_id', 'transform_target_param', 'gpu_param', 'X', 'y_train', 'idx', 'log_plots_param', 'gpu_n_jobs_param', 'pipeline'}
2023-06-15 15:23:20,569:INFO:Checking environment
2023-06-15 15:23:20,569:INFO:python_version: 3.9.13
2023-06-15 15:23:20,569:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-15 15:23:20,569:INFO:machine: AMD64
2023-06-15 15:23:20,569:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-15 15:23:20,569:INFO:Memory: svmem(total=8285085696, available=2096230400, percent=74.7, used=6188855296, free=2096230400)
2023-06-15 15:23:20,569:INFO:Physical Core: 2
2023-06-15 15:23:20,569:INFO:Logical Core: 4
2023-06-15 15:23:20,569:INFO:Checking libraries
2023-06-15 15:23:20,569:INFO:System:
2023-06-15 15:23:20,570:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-15 15:23:20,570:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-15 15:23:20,570:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-15 15:23:20,570:INFO:PyCaret required dependencies:
2023-06-15 15:23:20,570:INFO:                 pip: 22.2.2
2023-06-15 15:23:20,570:INFO:          setuptools: 63.4.1
2023-06-15 15:23:20,570:INFO:             pycaret: 3.0.2
2023-06-15 15:23:20,570:INFO:             IPython: 7.31.1
2023-06-15 15:23:20,570:INFO:          ipywidgets: 7.6.5
2023-06-15 15:23:20,570:INFO:                tqdm: 4.64.1
2023-06-15 15:23:20,570:INFO:               numpy: 1.21.5
2023-06-15 15:23:20,570:INFO:              pandas: 1.4.4
2023-06-15 15:23:20,570:INFO:              jinja2: 2.11.3
2023-06-15 15:23:20,571:INFO:               scipy: 1.9.1
2023-06-15 15:23:20,571:INFO:              joblib: 1.1.0
2023-06-15 15:23:20,571:INFO:             sklearn: 1.0.2
2023-06-15 15:23:20,571:INFO:                pyod: 1.0.9
2023-06-15 15:23:20,571:INFO:            imblearn: 0.10.1
2023-06-15 15:23:20,571:INFO:   category_encoders: 2.6.1
2023-06-15 15:23:20,571:INFO:            lightgbm: 3.3.5
2023-06-15 15:23:20,571:INFO:               numba: 0.55.1
2023-06-15 15:23:20,571:INFO:            requests: 2.28.1
2023-06-15 15:23:20,571:INFO:          matplotlib: 3.5.2
2023-06-15 15:23:20,571:INFO:          scikitplot: 0.3.7
2023-06-15 15:23:20,571:INFO:         yellowbrick: 1.5
2023-06-15 15:23:20,571:INFO:              plotly: 5.9.0
2023-06-15 15:23:20,571:INFO:             kaleido: 0.2.1
2023-06-15 15:23:20,571:INFO:         statsmodels: 0.13.2
2023-06-15 15:23:20,571:INFO:              sktime: 0.17.0
2023-06-15 15:23:20,571:INFO:               tbats: 1.1.3
2023-06-15 15:23:20,571:INFO:            pmdarima: 2.0.3
2023-06-15 15:23:20,571:INFO:              psutil: 5.9.0
2023-06-15 15:23:20,572:INFO:PyCaret optional dependencies:
2023-06-15 15:23:20,572:INFO:                shap: Not installed
2023-06-15 15:23:20,572:INFO:           interpret: Not installed
2023-06-15 15:23:20,572:INFO:                umap: Not installed
2023-06-15 15:23:20,572:INFO:    pandas_profiling: Not installed
2023-06-15 15:23:20,572:INFO:  explainerdashboard: Not installed
2023-06-15 15:23:20,572:INFO:             autoviz: Not installed
2023-06-15 15:23:20,572:INFO:           fairlearn: Not installed
2023-06-15 15:23:20,572:INFO:             xgboost: Not installed
2023-06-15 15:23:20,572:INFO:            catboost: Not installed
2023-06-15 15:23:20,572:INFO:              kmodes: Not installed
2023-06-15 15:23:20,572:INFO:             mlxtend: Not installed
2023-06-15 15:23:20,572:INFO:       statsforecast: Not installed
2023-06-15 15:23:20,572:INFO:        tune_sklearn: Not installed
2023-06-15 15:23:20,572:INFO:                 ray: Not installed
2023-06-15 15:23:20,572:INFO:            hyperopt: Not installed
2023-06-15 15:23:20,572:INFO:              optuna: Not installed
2023-06-15 15:23:20,573:INFO:               skopt: Not installed
2023-06-15 15:23:20,573:INFO:              mlflow: Not installed
2023-06-15 15:23:20,573:INFO:              gradio: Not installed
2023-06-15 15:23:20,573:INFO:             fastapi: Not installed
2023-06-15 15:23:20,573:INFO:             uvicorn: Not installed
2023-06-15 15:23:20,573:INFO:              m2cgen: Not installed
2023-06-15 15:23:20,573:INFO:           evidently: Not installed
2023-06-15 15:23:20,573:INFO:               fugue: Not installed
2023-06-15 15:23:20,573:INFO:           streamlit: 1.22.0
2023-06-15 15:23:20,573:INFO:             prophet: Not installed
2023-06-15 15:23:20,573:INFO:None
2023-06-15 15:23:20,573:INFO:Set up data.
2023-06-15 15:23:20,577:INFO:Set up train/test split.
2023-06-15 15:23:20,578:INFO:Set up data.
2023-06-15 15:23:20,582:INFO:Set up index.
2023-06-15 15:23:20,582:INFO:Set up folding strategy.
2023-06-15 15:23:20,582:INFO:Assigning column types.
2023-06-15 15:23:20,587:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-15 15:23:20,587:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,592:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,597:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,720:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,721:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,721:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,722:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,727:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,732:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,794:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,844:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,844:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,845:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,845:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-15 15:23:20,850:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,855:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:20,975:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-15 15:23:20,980:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,096:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,097:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-15 15:23:21,108:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,182:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,251:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,251:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,270:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,433:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,434:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-15 15:23:21,533:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,604:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,604:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,605:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,689:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,740:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,741:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,742:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-15 15:23:21,815:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-15 15:23:21,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:21,993:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-15 15:23:22,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,241:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,243:INFO:Preparing preprocessing pipeline...
2023-06-15 15:23:22,244:INFO:Set up target transformation.
2023-06-15 15:23:22,244:INFO:Set up date feature engineering.
2023-06-15 15:23:22,244:INFO:Set up simple imputation.
2023-06-15 15:23:22,296:INFO:Finished creating preprocessing pipeline.
2023-06-15 15:23:22,305:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-15 15:23:22,305:INFO:Creating final display dataframe.
2023-06-15 15:23:22,460:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    NOTCH_VARIANCE
2                   Target type        Regression
3           Original data shape           (94, 4)
4        Transformed data shape           (94, 6)
5   Transformed train set shape           (76, 6)
6    Transformed test set shape           (18, 6)
7              Numeric features                 2
8                 Date features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13             Transform target              True
14      Transform target method       yeo-johnson
15               Fold Generator   TimeSeriesSplit
16                  Fold Number                 3
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              5b5f
2023-06-15 15:23:22,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-15 15:23:22,748:INFO:setup() successfully completed in 2.39s...............
2023-06-15 15:23:23,772:INFO:Initializing compare_models()
2023-06-15 15:23:23,772:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-15 15:23:23,773:INFO:Checking exceptions
2023-06-15 15:23:23,776:INFO:Preparing display monitor
2023-06-15 15:23:23,873:INFO:Initializing Linear Regression
2023-06-15 15:23:23,873:INFO:Total runtime is 0.0 minutes
2023-06-15 15:23:23,880:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:23,880:INFO:Initializing create_model()
2023-06-15 15:23:23,881:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:23,881:INFO:Checking exceptions
2023-06-15 15:23:23,881:INFO:Importing libraries
2023-06-15 15:23:23,881:INFO:Copying training dataset
2023-06-15 15:23:23,892:INFO:Defining folds
2023-06-15 15:23:23,892:INFO:Declaring metric variables
2023-06-15 15:23:23,901:INFO:Importing untrained model
2023-06-15 15:23:23,909:INFO:Linear Regression Imported successfully
2023-06-15 15:23:23,923:INFO:Starting cross validation
2023-06-15 15:23:23,925:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:37,220:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:38,040:INFO:Calculating mean and std
2023-06-15 15:23:38,042:INFO:Creating metrics dataframe
2023-06-15 15:23:38,323:INFO:Uploading results into container
2023-06-15 15:23:38,324:INFO:Uploading model into container now
2023-06-15 15:23:38,324:INFO:_master_model_container: 1
2023-06-15 15:23:38,325:INFO:_display_container: 2
2023-06-15 15:23:38,325:INFO:LinearRegression(n_jobs=-1)
2023-06-15 15:23:38,325:INFO:create_model() successfully completed......................................
2023-06-15 15:23:38,461:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:38,461:INFO:Creating metrics dataframe
2023-06-15 15:23:38,476:INFO:Initializing Lasso Regression
2023-06-15 15:23:38,476:INFO:Total runtime is 0.2433838168780009 minutes
2023-06-15 15:23:38,482:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:38,483:INFO:Initializing create_model()
2023-06-15 15:23:38,484:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:38,484:INFO:Checking exceptions
2023-06-15 15:23:38,484:INFO:Importing libraries
2023-06-15 15:23:38,484:INFO:Copying training dataset
2023-06-15 15:23:38,495:INFO:Defining folds
2023-06-15 15:23:38,496:INFO:Declaring metric variables
2023-06-15 15:23:38,506:INFO:Importing untrained model
2023-06-15 15:23:38,515:INFO:Lasso Regression Imported successfully
2023-06-15 15:23:38,528:INFO:Starting cross validation
2023-06-15 15:23:38,530:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:43,441:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:43,494:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-15 15:23:43,530:INFO:Calculating mean and std
2023-06-15 15:23:43,533:INFO:Creating metrics dataframe
2023-06-15 15:23:43,833:INFO:Uploading results into container
2023-06-15 15:23:43,834:INFO:Uploading model into container now
2023-06-15 15:23:43,834:INFO:_master_model_container: 2
2023-06-15 15:23:43,835:INFO:_display_container: 2
2023-06-15 15:23:43,835:INFO:Lasso(random_state=123)
2023-06-15 15:23:43,836:INFO:create_model() successfully completed......................................
2023-06-15 15:23:43,935:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:43,936:INFO:Creating metrics dataframe
2023-06-15 15:23:43,956:INFO:Initializing Ridge Regression
2023-06-15 15:23:43,956:INFO:Total runtime is 0.334722626209259 minutes
2023-06-15 15:23:43,961:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:43,962:INFO:Initializing create_model()
2023-06-15 15:23:43,962:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:43,963:INFO:Checking exceptions
2023-06-15 15:23:43,963:INFO:Importing libraries
2023-06-15 15:23:43,963:INFO:Copying training dataset
2023-06-15 15:23:43,971:INFO:Defining folds
2023-06-15 15:23:43,972:INFO:Declaring metric variables
2023-06-15 15:23:43,980:INFO:Importing untrained model
2023-06-15 15:23:43,988:INFO:Ridge Regression Imported successfully
2023-06-15 15:23:44,004:INFO:Starting cross validation
2023-06-15 15:23:44,007:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:44,049:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:44,697:INFO:Calculating mean and std
2023-06-15 15:23:44,699:INFO:Creating metrics dataframe
2023-06-15 15:23:44,909:INFO:Uploading results into container
2023-06-15 15:23:44,909:INFO:Uploading model into container now
2023-06-15 15:23:44,910:INFO:_master_model_container: 3
2023-06-15 15:23:44,910:INFO:_display_container: 2
2023-06-15 15:23:44,910:INFO:Ridge(random_state=123)
2023-06-15 15:23:44,911:INFO:create_model() successfully completed......................................
2023-06-15 15:23:45,010:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:45,010:INFO:Creating metrics dataframe
2023-06-15 15:23:45,023:INFO:Initializing Elastic Net
2023-06-15 15:23:45,024:INFO:Total runtime is 0.35252262353897096 minutes
2023-06-15 15:23:45,028:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:45,029:INFO:Initializing create_model()
2023-06-15 15:23:45,029:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:45,029:INFO:Checking exceptions
2023-06-15 15:23:45,029:INFO:Importing libraries
2023-06-15 15:23:45,029:INFO:Copying training dataset
2023-06-15 15:23:45,036:INFO:Defining folds
2023-06-15 15:23:45,037:INFO:Declaring metric variables
2023-06-15 15:23:45,046:INFO:Importing untrained model
2023-06-15 15:23:45,053:INFO:Elastic Net Imported successfully
2023-06-15 15:23:45,063:INFO:Starting cross validation
2023-06-15 15:23:45,065:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:45,102:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:45,176:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-15 15:23:45,750:INFO:Calculating mean and std
2023-06-15 15:23:45,756:INFO:Creating metrics dataframe
2023-06-15 15:23:46,017:INFO:Uploading results into container
2023-06-15 15:23:46,018:INFO:Uploading model into container now
2023-06-15 15:23:46,019:INFO:_master_model_container: 4
2023-06-15 15:23:46,019:INFO:_display_container: 2
2023-06-15 15:23:46,020:INFO:ElasticNet(random_state=123)
2023-06-15 15:23:46,020:INFO:create_model() successfully completed......................................
2023-06-15 15:23:46,119:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:46,119:INFO:Creating metrics dataframe
2023-06-15 15:23:46,131:INFO:Initializing Least Angle Regression
2023-06-15 15:23:46,131:INFO:Total runtime is 0.3709726929664612 minutes
2023-06-15 15:23:46,138:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:46,138:INFO:Initializing create_model()
2023-06-15 15:23:46,139:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:46,139:INFO:Checking exceptions
2023-06-15 15:23:46,139:INFO:Importing libraries
2023-06-15 15:23:46,139:INFO:Copying training dataset
2023-06-15 15:23:46,152:INFO:Defining folds
2023-06-15 15:23:46,152:INFO:Declaring metric variables
2023-06-15 15:23:46,161:INFO:Importing untrained model
2023-06-15 15:23:46,168:INFO:Least Angle Regression Imported successfully
2023-06-15 15:23:46,181:INFO:Starting cross validation
2023-06-15 15:23:46,184:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:46,221:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:46,302:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:46,305:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:46,327:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:46,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.391e-01, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-15 15:23:46,331:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.695e-01, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-15 15:23:46,870:INFO:Calculating mean and std
2023-06-15 15:23:46,872:INFO:Creating metrics dataframe
2023-06-15 15:23:47,087:INFO:Uploading results into container
2023-06-15 15:23:47,088:INFO:Uploading model into container now
2023-06-15 15:23:47,089:INFO:_master_model_container: 5
2023-06-15 15:23:47,089:INFO:_display_container: 2
2023-06-15 15:23:47,090:INFO:Lars(random_state=123)
2023-06-15 15:23:47,090:INFO:create_model() successfully completed......................................
2023-06-15 15:23:47,188:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:47,188:INFO:Creating metrics dataframe
2023-06-15 15:23:47,200:INFO:Initializing Lasso Least Angle Regression
2023-06-15 15:23:47,200:INFO:Total runtime is 0.38878939549128216 minutes
2023-06-15 15:23:47,207:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:47,207:INFO:Initializing create_model()
2023-06-15 15:23:47,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:47,208:INFO:Checking exceptions
2023-06-15 15:23:47,208:INFO:Importing libraries
2023-06-15 15:23:47,208:INFO:Copying training dataset
2023-06-15 15:23:47,222:INFO:Defining folds
2023-06-15 15:23:47,223:INFO:Declaring metric variables
2023-06-15 15:23:47,228:INFO:Importing untrained model
2023-06-15 15:23:47,235:INFO:Lasso Least Angle Regression Imported successfully
2023-06-15 15:23:47,249:INFO:Starting cross validation
2023-06-15 15:23:47,251:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:47,287:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:47,356:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:23:47,381:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:23:47,385:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-15 15:23:48,010:INFO:Calculating mean and std
2023-06-15 15:23:48,013:INFO:Creating metrics dataframe
2023-06-15 15:23:48,301:INFO:Uploading results into container
2023-06-15 15:23:48,303:INFO:Uploading model into container now
2023-06-15 15:23:48,304:INFO:_master_model_container: 6
2023-06-15 15:23:48,305:INFO:_display_container: 2
2023-06-15 15:23:48,305:INFO:LassoLars(random_state=123)
2023-06-15 15:23:48,306:INFO:create_model() successfully completed......................................
2023-06-15 15:23:48,426:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:48,426:INFO:Creating metrics dataframe
2023-06-15 15:23:48,449:INFO:Initializing Orthogonal Matching Pursuit
2023-06-15 15:23:48,450:INFO:Total runtime is 0.40962278842926025 minutes
2023-06-15 15:23:48,463:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:48,463:INFO:Initializing create_model()
2023-06-15 15:23:48,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:48,464:INFO:Checking exceptions
2023-06-15 15:23:48,464:INFO:Importing libraries
2023-06-15 15:23:48,465:INFO:Copying training dataset
2023-06-15 15:23:48,480:INFO:Defining folds
2023-06-15 15:23:48,482:INFO:Declaring metric variables
2023-06-15 15:23:48,489:INFO:Importing untrained model
2023-06-15 15:23:48,500:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-15 15:23:48,515:INFO:Starting cross validation
2023-06-15 15:23:48,518:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:48,567:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:48,653:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:48,658:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-15 15:23:48,666:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:48,681:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-15 15:23:49,234:INFO:Calculating mean and std
2023-06-15 15:23:49,238:INFO:Creating metrics dataframe
2023-06-15 15:23:49,510:INFO:Uploading results into container
2023-06-15 15:23:49,511:INFO:Uploading model into container now
2023-06-15 15:23:49,512:INFO:_master_model_container: 7
2023-06-15 15:23:49,512:INFO:_display_container: 2
2023-06-15 15:23:49,513:INFO:OrthogonalMatchingPursuit()
2023-06-15 15:23:49,513:INFO:create_model() successfully completed......................................
2023-06-15 15:23:49,624:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:49,625:INFO:Creating metrics dataframe
2023-06-15 15:23:49,646:INFO:Initializing Bayesian Ridge
2023-06-15 15:23:49,646:INFO:Total runtime is 0.42955612738927207 minutes
2023-06-15 15:23:49,652:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:49,653:INFO:Initializing create_model()
2023-06-15 15:23:49,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:49,653:INFO:Checking exceptions
2023-06-15 15:23:49,654:INFO:Importing libraries
2023-06-15 15:23:49,654:INFO:Copying training dataset
2023-06-15 15:23:49,665:INFO:Defining folds
2023-06-15 15:23:49,665:INFO:Declaring metric variables
2023-06-15 15:23:49,683:INFO:Importing untrained model
2023-06-15 15:23:49,692:INFO:Bayesian Ridge Imported successfully
2023-06-15 15:23:49,707:INFO:Starting cross validation
2023-06-15 15:23:49,710:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:49,750:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:50,461:INFO:Calculating mean and std
2023-06-15 15:23:50,464:INFO:Creating metrics dataframe
2023-06-15 15:23:50,734:INFO:Uploading results into container
2023-06-15 15:23:50,736:INFO:Uploading model into container now
2023-06-15 15:23:50,737:INFO:_master_model_container: 8
2023-06-15 15:23:50,737:INFO:_display_container: 2
2023-06-15 15:23:50,738:INFO:BayesianRidge()
2023-06-15 15:23:50,738:INFO:create_model() successfully completed......................................
2023-06-15 15:23:50,856:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:50,856:INFO:Creating metrics dataframe
2023-06-15 15:23:50,874:INFO:Initializing Passive Aggressive Regressor
2023-06-15 15:23:50,875:INFO:Total runtime is 0.45003952980041506 minutes
2023-06-15 15:23:50,883:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:50,883:INFO:Initializing create_model()
2023-06-15 15:23:50,884:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:50,884:INFO:Checking exceptions
2023-06-15 15:23:50,884:INFO:Importing libraries
2023-06-15 15:23:50,884:INFO:Copying training dataset
2023-06-15 15:23:50,899:INFO:Defining folds
2023-06-15 15:23:50,900:INFO:Declaring metric variables
2023-06-15 15:23:50,909:INFO:Importing untrained model
2023-06-15 15:23:50,918:INFO:Passive Aggressive Regressor Imported successfully
2023-06-15 15:23:50,935:INFO:Starting cross validation
2023-06-15 15:23:50,937:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:50,989:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:51,792:INFO:Calculating mean and std
2023-06-15 15:23:51,793:INFO:Creating metrics dataframe
2023-06-15 15:23:52,069:INFO:Uploading results into container
2023-06-15 15:23:52,070:INFO:Uploading model into container now
2023-06-15 15:23:52,071:INFO:_master_model_container: 9
2023-06-15 15:23:52,071:INFO:_display_container: 2
2023-06-15 15:23:52,071:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-15 15:23:52,072:INFO:create_model() successfully completed......................................
2023-06-15 15:23:52,205:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:52,205:INFO:Creating metrics dataframe
2023-06-15 15:23:52,227:INFO:Initializing Huber Regressor
2023-06-15 15:23:52,228:INFO:Total runtime is 0.4725895682970683 minutes
2023-06-15 15:23:52,235:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:52,236:INFO:Initializing create_model()
2023-06-15 15:23:52,236:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:52,236:INFO:Checking exceptions
2023-06-15 15:23:52,237:INFO:Importing libraries
2023-06-15 15:23:52,237:INFO:Copying training dataset
2023-06-15 15:23:52,249:INFO:Defining folds
2023-06-15 15:23:52,250:INFO:Declaring metric variables
2023-06-15 15:23:52,259:INFO:Importing untrained model
2023-06-15 15:23:52,268:INFO:Huber Regressor Imported successfully
2023-06-15 15:23:52,286:INFO:Starting cross validation
2023-06-15 15:23:52,288:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:52,333:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:53,077:INFO:Calculating mean and std
2023-06-15 15:23:53,080:INFO:Creating metrics dataframe
2023-06-15 15:23:53,292:INFO:Uploading results into container
2023-06-15 15:23:53,292:INFO:Uploading model into container now
2023-06-15 15:23:53,293:INFO:_master_model_container: 10
2023-06-15 15:23:53,293:INFO:_display_container: 2
2023-06-15 15:23:53,294:INFO:HuberRegressor()
2023-06-15 15:23:53,294:INFO:create_model() successfully completed......................................
2023-06-15 15:23:53,394:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:53,394:INFO:Creating metrics dataframe
2023-06-15 15:23:53,407:INFO:Initializing K Neighbors Regressor
2023-06-15 15:23:53,407:INFO:Total runtime is 0.49223960240681963 minutes
2023-06-15 15:23:53,411:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:53,412:INFO:Initializing create_model()
2023-06-15 15:23:53,412:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:53,412:INFO:Checking exceptions
2023-06-15 15:23:53,413:INFO:Importing libraries
2023-06-15 15:23:53,413:INFO:Copying training dataset
2023-06-15 15:23:53,422:INFO:Defining folds
2023-06-15 15:23:53,422:INFO:Declaring metric variables
2023-06-15 15:23:53,448:INFO:Importing untrained model
2023-06-15 15:23:53,467:INFO:K Neighbors Regressor Imported successfully
2023-06-15 15:23:53,487:INFO:Starting cross validation
2023-06-15 15:23:53,490:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:53,529:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:54,157:INFO:Calculating mean and std
2023-06-15 15:23:54,159:INFO:Creating metrics dataframe
2023-06-15 15:23:54,380:INFO:Uploading results into container
2023-06-15 15:23:54,381:INFO:Uploading model into container now
2023-06-15 15:23:54,382:INFO:_master_model_container: 11
2023-06-15 15:23:54,383:INFO:_display_container: 2
2023-06-15 15:23:54,383:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-15 15:23:54,383:INFO:create_model() successfully completed......................................
2023-06-15 15:23:54,483:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:54,483:INFO:Creating metrics dataframe
2023-06-15 15:23:54,496:INFO:Initializing Decision Tree Regressor
2023-06-15 15:23:54,497:INFO:Total runtime is 0.5104063073794046 minutes
2023-06-15 15:23:54,501:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:54,502:INFO:Initializing create_model()
2023-06-15 15:23:54,502:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:54,503:INFO:Checking exceptions
2023-06-15 15:23:54,503:INFO:Importing libraries
2023-06-15 15:23:54,503:INFO:Copying training dataset
2023-06-15 15:23:54,513:INFO:Defining folds
2023-06-15 15:23:54,514:INFO:Declaring metric variables
2023-06-15 15:23:54,521:INFO:Importing untrained model
2023-06-15 15:23:54,532:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:23:54,549:INFO:Starting cross validation
2023-06-15 15:23:54,551:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:54,588:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:55,214:INFO:Calculating mean and std
2023-06-15 15:23:55,215:INFO:Creating metrics dataframe
2023-06-15 15:23:55,431:INFO:Uploading results into container
2023-06-15 15:23:55,432:INFO:Uploading model into container now
2023-06-15 15:23:55,432:INFO:_master_model_container: 12
2023-06-15 15:23:55,433:INFO:_display_container: 2
2023-06-15 15:23:55,433:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:23:55,433:INFO:create_model() successfully completed......................................
2023-06-15 15:23:55,534:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:55,534:INFO:Creating metrics dataframe
2023-06-15 15:23:55,547:INFO:Initializing Random Forest Regressor
2023-06-15 15:23:55,548:INFO:Total runtime is 0.5279230475425719 minutes
2023-06-15 15:23:55,552:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:55,553:INFO:Initializing create_model()
2023-06-15 15:23:55,553:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:55,553:INFO:Checking exceptions
2023-06-15 15:23:55,553:INFO:Importing libraries
2023-06-15 15:23:55,553:INFO:Copying training dataset
2023-06-15 15:23:55,565:INFO:Defining folds
2023-06-15 15:23:55,565:INFO:Declaring metric variables
2023-06-15 15:23:55,574:INFO:Importing untrained model
2023-06-15 15:23:55,584:INFO:Random Forest Regressor Imported successfully
2023-06-15 15:23:55,595:INFO:Starting cross validation
2023-06-15 15:23:55,597:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:55,636:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:56,381:INFO:Calculating mean and std
2023-06-15 15:23:56,383:INFO:Creating metrics dataframe
2023-06-15 15:23:56,604:INFO:Uploading results into container
2023-06-15 15:23:56,605:INFO:Uploading model into container now
2023-06-15 15:23:56,606:INFO:_master_model_container: 13
2023-06-15 15:23:56,606:INFO:_display_container: 2
2023-06-15 15:23:56,606:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:23:56,607:INFO:create_model() successfully completed......................................
2023-06-15 15:23:56,705:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:56,706:INFO:Creating metrics dataframe
2023-06-15 15:23:56,721:INFO:Initializing Extra Trees Regressor
2023-06-15 15:23:56,722:INFO:Total runtime is 0.5474897344907124 minutes
2023-06-15 15:23:56,726:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:56,727:INFO:Initializing create_model()
2023-06-15 15:23:56,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:56,727:INFO:Checking exceptions
2023-06-15 15:23:56,727:INFO:Importing libraries
2023-06-15 15:23:56,727:INFO:Copying training dataset
2023-06-15 15:23:56,735:INFO:Defining folds
2023-06-15 15:23:56,735:INFO:Declaring metric variables
2023-06-15 15:23:56,744:INFO:Importing untrained model
2023-06-15 15:23:56,753:INFO:Extra Trees Regressor Imported successfully
2023-06-15 15:23:56,768:INFO:Starting cross validation
2023-06-15 15:23:56,772:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:56,826:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:57,565:INFO:Calculating mean and std
2023-06-15 15:23:57,567:INFO:Creating metrics dataframe
2023-06-15 15:23:57,848:INFO:Uploading results into container
2023-06-15 15:23:57,852:INFO:Uploading model into container now
2023-06-15 15:23:57,854:INFO:_master_model_container: 14
2023-06-15 15:23:57,854:INFO:_display_container: 2
2023-06-15 15:23:57,855:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-15 15:23:57,855:INFO:create_model() successfully completed......................................
2023-06-15 15:23:57,964:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:57,964:INFO:Creating metrics dataframe
2023-06-15 15:23:57,980:INFO:Initializing AdaBoost Regressor
2023-06-15 15:23:57,980:INFO:Total runtime is 0.5684558669726053 minutes
2023-06-15 15:23:57,987:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:57,987:INFO:Initializing create_model()
2023-06-15 15:23:57,987:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:57,988:INFO:Checking exceptions
2023-06-15 15:23:57,988:INFO:Importing libraries
2023-06-15 15:23:57,988:INFO:Copying training dataset
2023-06-15 15:23:57,997:INFO:Defining folds
2023-06-15 15:23:57,998:INFO:Declaring metric variables
2023-06-15 15:23:58,007:INFO:Importing untrained model
2023-06-15 15:23:58,012:INFO:AdaBoost Regressor Imported successfully
2023-06-15 15:23:58,027:INFO:Starting cross validation
2023-06-15 15:23:58,029:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:58,065:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:58,719:INFO:Calculating mean and std
2023-06-15 15:23:58,721:INFO:Creating metrics dataframe
2023-06-15 15:23:58,998:INFO:Uploading results into container
2023-06-15 15:23:58,999:INFO:Uploading model into container now
2023-06-15 15:23:59,000:INFO:_master_model_container: 15
2023-06-15 15:23:59,000:INFO:_display_container: 2
2023-06-15 15:23:59,000:INFO:AdaBoostRegressor(random_state=123)
2023-06-15 15:23:59,000:INFO:create_model() successfully completed......................................
2023-06-15 15:23:59,107:INFO:SubProcess create_model() end ==================================
2023-06-15 15:23:59,107:INFO:Creating metrics dataframe
2023-06-15 15:23:59,125:INFO:Initializing Gradient Boosting Regressor
2023-06-15 15:23:59,125:INFO:Total runtime is 0.5875334183375039 minutes
2023-06-15 15:23:59,129:INFO:SubProcess create_model() called ==================================
2023-06-15 15:23:59,130:INFO:Initializing create_model()
2023-06-15 15:23:59,131:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:23:59,131:INFO:Checking exceptions
2023-06-15 15:23:59,131:INFO:Importing libraries
2023-06-15 15:23:59,132:INFO:Copying training dataset
2023-06-15 15:23:59,140:INFO:Defining folds
2023-06-15 15:23:59,140:INFO:Declaring metric variables
2023-06-15 15:23:59,146:INFO:Importing untrained model
2023-06-15 15:23:59,160:INFO:Gradient Boosting Regressor Imported successfully
2023-06-15 15:23:59,179:INFO:Starting cross validation
2023-06-15 15:23:59,184:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:23:59,222:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:23:59,971:INFO:Calculating mean and std
2023-06-15 15:23:59,973:INFO:Creating metrics dataframe
2023-06-15 15:24:00,249:INFO:Uploading results into container
2023-06-15 15:24:00,251:INFO:Uploading model into container now
2023-06-15 15:24:00,252:INFO:_master_model_container: 16
2023-06-15 15:24:00,253:INFO:_display_container: 2
2023-06-15 15:24:00,254:INFO:GradientBoostingRegressor(random_state=123)
2023-06-15 15:24:00,254:INFO:create_model() successfully completed......................................
2023-06-15 15:24:00,373:INFO:SubProcess create_model() end ==================================
2023-06-15 15:24:00,373:INFO:Creating metrics dataframe
2023-06-15 15:24:00,399:INFO:Initializing Light Gradient Boosting Machine
2023-06-15 15:24:00,399:INFO:Total runtime is 0.6087667981783548 minutes
2023-06-15 15:24:00,409:INFO:SubProcess create_model() called ==================================
2023-06-15 15:24:00,410:INFO:Initializing create_model()
2023-06-15 15:24:00,410:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:24:00,410:INFO:Checking exceptions
2023-06-15 15:24:00,411:INFO:Importing libraries
2023-06-15 15:24:00,411:INFO:Copying training dataset
2023-06-15 15:24:00,420:INFO:Defining folds
2023-06-15 15:24:00,421:INFO:Declaring metric variables
2023-06-15 15:24:00,433:INFO:Importing untrained model
2023-06-15 15:24:00,445:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-15 15:24:00,465:INFO:Starting cross validation
2023-06-15 15:24:00,467:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:24:02,770:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:24:03,364:INFO:Calculating mean and std
2023-06-15 15:24:03,365:INFO:Creating metrics dataframe
2023-06-15 15:24:03,639:INFO:Uploading results into container
2023-06-15 15:24:03,640:INFO:Uploading model into container now
2023-06-15 15:24:03,641:INFO:_master_model_container: 17
2023-06-15 15:24:03,641:INFO:_display_container: 2
2023-06-15 15:24:03,642:INFO:LGBMRegressor(random_state=123)
2023-06-15 15:24:03,642:INFO:create_model() successfully completed......................................
2023-06-15 15:24:03,756:INFO:SubProcess create_model() end ==================================
2023-06-15 15:24:03,756:INFO:Creating metrics dataframe
2023-06-15 15:24:03,780:INFO:Initializing Dummy Regressor
2023-06-15 15:24:03,781:INFO:Total runtime is 0.6651437838872273 minutes
2023-06-15 15:24:03,788:INFO:SubProcess create_model() called ==================================
2023-06-15 15:24:03,789:INFO:Initializing create_model()
2023-06-15 15:24:03,789:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000023D418EAEE0>, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:24:03,789:INFO:Checking exceptions
2023-06-15 15:24:03,789:INFO:Importing libraries
2023-06-15 15:24:03,790:INFO:Copying training dataset
2023-06-15 15:24:03,800:INFO:Defining folds
2023-06-15 15:24:03,800:INFO:Declaring metric variables
2023-06-15 15:24:03,816:INFO:Importing untrained model
2023-06-15 15:24:03,823:INFO:Dummy Regressor Imported successfully
2023-06-15 15:24:03,854:INFO:Starting cross validation
2023-06-15 15:24:03,857:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-15 15:24:03,913:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-15 15:24:04,636:INFO:Calculating mean and std
2023-06-15 15:24:04,639:INFO:Creating metrics dataframe
2023-06-15 15:24:04,907:INFO:Uploading results into container
2023-06-15 15:24:04,908:INFO:Uploading model into container now
2023-06-15 15:24:04,909:INFO:_master_model_container: 18
2023-06-15 15:24:04,909:INFO:_display_container: 2
2023-06-15 15:24:04,910:INFO:DummyRegressor()
2023-06-15 15:24:04,910:INFO:create_model() successfully completed......................................
2023-06-15 15:24:05,036:INFO:SubProcess create_model() end ==================================
2023-06-15 15:24:05,036:INFO:Creating metrics dataframe
2023-06-15 15:24:05,078:INFO:Initializing create_model()
2023-06-15 15:24:05,079:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=DecisionTreeRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-15 15:24:05,079:INFO:Checking exceptions
2023-06-15 15:24:05,083:INFO:Importing libraries
2023-06-15 15:24:05,083:INFO:Copying training dataset
2023-06-15 15:24:05,094:INFO:Defining folds
2023-06-15 15:24:05,095:INFO:Declaring metric variables
2023-06-15 15:24:05,095:INFO:Importing untrained model
2023-06-15 15:24:05,096:INFO:Declaring custom model
2023-06-15 15:24:05,097:INFO:Decision Tree Regressor Imported successfully
2023-06-15 15:24:05,099:INFO:Cross validation set to False
2023-06-15 15:24:05,099:INFO:Fitting Model
2023-06-15 15:24:05,399:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:24:05,399:INFO:create_model() successfully completed......................................
2023-06-15 15:24:05,583:INFO:_master_model_container: 18
2023-06-15 15:24:05,583:INFO:_display_container: 2
2023-06-15 15:24:05,584:INFO:DecisionTreeRegressor(random_state=123)
2023-06-15 15:24:05,584:INFO:compare_models() successfully completed......................................
2023-06-15 15:24:05,640:INFO:Initializing predict_model()
2023-06-15 15:24:05,640:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000023D41A82F40>, estimator=DecisionTreeRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000023D43C66430>)
2023-06-15 15:24:05,641:INFO:Checking exceptions
2023-06-15 15:24:05,641:INFO:Preloading libraries
2023-06-15 15:24:05,644:INFO:Set up data.
2023-06-15 15:24:05,651:INFO:Set up index.
2023-06-16 15:33:51,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 15:33:51,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 15:33:51,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 15:33:51,735:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-16 15:34:13,662:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-16 15:34:25,912:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_11476\3283110646.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["MONTH"] = [i.month for i in data["BASE_DATE"]]

2023-06-16 15:34:25,913:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_11476\3283110646.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_CLS["YEAR"] = [i.year for i in data["BASE_DATE"]]

2023-06-16 15:34:26,309:INFO:PyCaret RegressionExperiment
2023-06-16 15:34:26,309:INFO:Logging name: reg-default-name
2023-06-16 15:34:26,309:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-16 15:34:26,310:INFO:version 3.0.2
2023-06-16 15:34:26,310:INFO:Initializing setup()
2023-06-16 15:34:26,310:INFO:self.USI: 62a2
2023-06-16 15:34:26,310:INFO:self._variable_keys: {'X_train', 'target_param', 'y', 'data', '_available_plots', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'exp_name_log', 'log_plots_param', 'fold_shuffle_param', 'fold_generator', 'y_test', 'gpu_param', 'exp_id', 'X', 'n_jobs_param', 'idx', 'memory', 'X_test', 'logging_param', 'seed', 'transform_target_param', 'USI', 'html_param', 'pipeline', 'fold_groups_param'}
2023-06-16 15:34:26,310:INFO:Checking environment
2023-06-16 15:34:26,310:INFO:python_version: 3.9.13
2023-06-16 15:34:26,310:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-16 15:34:26,310:INFO:machine: AMD64
2023-06-16 15:34:26,310:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 15:34:26,310:INFO:Memory: svmem(total=8285085696, available=1235062784, percent=85.1, used=7050022912, free=1235062784)
2023-06-16 15:34:26,310:INFO:Physical Core: 2
2023-06-16 15:34:26,310:INFO:Logical Core: 4
2023-06-16 15:34:26,310:INFO:Checking libraries
2023-06-16 15:34:26,310:INFO:System:
2023-06-16 15:34:26,311:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-16 15:34:26,311:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-16 15:34:26,311:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 15:34:26,311:INFO:PyCaret required dependencies:
2023-06-16 15:34:26,311:INFO:                 pip: 22.2.2
2023-06-16 15:34:26,311:INFO:          setuptools: 63.4.1
2023-06-16 15:34:26,311:INFO:             pycaret: 3.0.2
2023-06-16 15:34:26,311:INFO:             IPython: 7.31.1
2023-06-16 15:34:26,311:INFO:          ipywidgets: 7.6.5
2023-06-16 15:34:26,311:INFO:                tqdm: 4.64.1
2023-06-16 15:34:26,311:INFO:               numpy: 1.21.5
2023-06-16 15:34:26,311:INFO:              pandas: 1.4.4
2023-06-16 15:34:26,311:INFO:              jinja2: 2.11.3
2023-06-16 15:34:26,311:INFO:               scipy: 1.9.1
2023-06-16 15:34:26,312:INFO:              joblib: 1.1.0
2023-06-16 15:34:26,312:INFO:             sklearn: 1.0.2
2023-06-16 15:34:26,312:INFO:                pyod: 1.0.9
2023-06-16 15:34:26,312:INFO:            imblearn: 0.10.1
2023-06-16 15:34:26,312:INFO:   category_encoders: 2.6.1
2023-06-16 15:34:26,312:INFO:            lightgbm: 3.3.5
2023-06-16 15:34:26,312:INFO:               numba: 0.55.1
2023-06-16 15:34:26,312:INFO:            requests: 2.28.1
2023-06-16 15:34:26,312:INFO:          matplotlib: 3.5.2
2023-06-16 15:34:26,312:INFO:          scikitplot: 0.3.7
2023-06-16 15:34:26,312:INFO:         yellowbrick: 1.5
2023-06-16 15:34:26,312:INFO:              plotly: 5.9.0
2023-06-16 15:34:26,312:INFO:             kaleido: 0.2.1
2023-06-16 15:34:26,312:INFO:         statsmodels: 0.13.2
2023-06-16 15:34:26,313:INFO:              sktime: 0.17.0
2023-06-16 15:34:26,313:INFO:               tbats: 1.1.3
2023-06-16 15:34:26,313:INFO:            pmdarima: 2.0.3
2023-06-16 15:34:26,313:INFO:              psutil: 5.9.0
2023-06-16 15:34:26,313:INFO:PyCaret optional dependencies:
2023-06-16 15:34:26,410:INFO:                shap: Not installed
2023-06-16 15:34:26,411:INFO:           interpret: Not installed
2023-06-16 15:34:26,411:INFO:                umap: Not installed
2023-06-16 15:34:26,411:INFO:    pandas_profiling: Not installed
2023-06-16 15:34:26,411:INFO:  explainerdashboard: Not installed
2023-06-16 15:34:26,411:INFO:             autoviz: Not installed
2023-06-16 15:34:26,411:INFO:           fairlearn: Not installed
2023-06-16 15:34:26,411:INFO:             xgboost: Not installed
2023-06-16 15:34:26,412:INFO:            catboost: Not installed
2023-06-16 15:34:26,412:INFO:              kmodes: Not installed
2023-06-16 15:34:26,412:INFO:             mlxtend: Not installed
2023-06-16 15:34:26,412:INFO:       statsforecast: Not installed
2023-06-16 15:34:26,412:INFO:        tune_sklearn: Not installed
2023-06-16 15:34:26,413:INFO:                 ray: Not installed
2023-06-16 15:34:26,413:INFO:            hyperopt: Not installed
2023-06-16 15:34:26,413:INFO:              optuna: Not installed
2023-06-16 15:34:26,413:INFO:               skopt: Not installed
2023-06-16 15:34:26,413:INFO:              mlflow: Not installed
2023-06-16 15:34:26,413:INFO:              gradio: Not installed
2023-06-16 15:34:26,413:INFO:             fastapi: Not installed
2023-06-16 15:34:26,413:INFO:             uvicorn: Not installed
2023-06-16 15:34:26,414:INFO:              m2cgen: Not installed
2023-06-16 15:34:26,415:INFO:           evidently: Not installed
2023-06-16 15:34:26,415:INFO:               fugue: Not installed
2023-06-16 15:34:26,415:INFO:           streamlit: 1.22.0
2023-06-16 15:34:26,415:INFO:             prophet: Not installed
2023-06-16 15:34:26,417:INFO:None
2023-06-16 15:34:26,418:INFO:Set up data.
2023-06-16 15:34:26,435:INFO:Set up train/test split.
2023-06-16 15:34:26,435:INFO:Set up data.
2023-06-16 15:34:26,448:INFO:Set up index.
2023-06-16 15:34:26,449:INFO:Set up folding strategy.
2023-06-16 15:34:26,449:INFO:Assigning column types.
2023-06-16 15:34:26,461:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 15:34:26,461:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,470:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,476:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,581:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,662:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:26,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:26,970:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,975:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:34:26,981:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,060:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,127:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,129:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-16 15:34:27,138:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,144:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,235:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,297:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,298:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,307:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,313:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,411:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,476:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,478:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-16 15:34:27,492:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,575:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,639:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,654:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,742:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,809:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,811:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-16 15:34:27,904:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,960:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:27,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:27,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,045:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:28,097:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:34:28,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,099:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 15:34:28,179:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:28,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,348:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:34:28,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,426:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-16 15:34:28,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,693:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:28,718:INFO:Preparing preprocessing pipeline...
2023-06-16 15:34:28,718:INFO:Set up target transformation.
2023-06-16 15:34:28,718:INFO:Set up date feature engineering.
2023-06-16 15:34:28,718:INFO:Set up simple imputation.
2023-06-16 15:34:28,830:INFO:Finished creating preprocessing pipeline.
2023-06-16 15:34:28,860:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-16 15:34:28,860:INFO:Creating final display dataframe.
2023-06-16 15:34:29,077:INFO:Setup _display_container:                     Description                      Value
0                    Session id                        123
1                        Target  COMPOSITE_LIQUIDITY_SCORE
2                   Target type                 Regression
3           Original data shape                    (94, 4)
4        Transformed data shape                    (94, 6)
5   Transformed train set shape                    (76, 6)
6    Transformed test set shape                    (18, 6)
7              Numeric features                          2
8                 Date features                          1
9                    Preprocess                       True
10              Imputation type                     simple
11           Numeric imputation                       mean
12       Categorical imputation                       mode
13             Transform target                       True
14      Transform target method                yeo-johnson
15               Fold Generator            TimeSeriesSplit
16                  Fold Number                          3
17                     CPU Jobs                         -1
18                      Use GPU                      False
19               Log Experiment                      False
20              Experiment Name           reg-default-name
21                          USI                       62a2
2023-06-16 15:34:29,247:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:29,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:29,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:29,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:34:29,437:INFO:setup() successfully completed in 3.5s...............
2023-06-16 15:34:29,461:INFO:Initializing compare_models()
2023-06-16 15:34:29,461:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-16 15:34:29,461:INFO:Checking exceptions
2023-06-16 15:34:29,466:INFO:Preparing display monitor
2023-06-16 15:34:29,541:INFO:Initializing Linear Regression
2023-06-16 15:34:29,541:INFO:Total runtime is 0.0 minutes
2023-06-16 15:34:29,548:INFO:SubProcess create_model() called ==================================
2023-06-16 15:34:29,548:INFO:Initializing create_model()
2023-06-16 15:34:29,549:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:34:29,549:INFO:Checking exceptions
2023-06-16 15:34:29,549:INFO:Importing libraries
2023-06-16 15:34:29,549:INFO:Copying training dataset
2023-06-16 15:34:29,558:INFO:Defining folds
2023-06-16 15:34:29,558:INFO:Declaring metric variables
2023-06-16 15:34:29,564:INFO:Importing untrained model
2023-06-16 15:34:29,573:INFO:Linear Regression Imported successfully
2023-06-16 15:34:29,592:INFO:Starting cross validation
2023-06-16 15:34:29,667:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:34:48,788:INFO:Calculating mean and std
2023-06-16 15:34:48,790:INFO:Creating metrics dataframe
2023-06-16 15:34:49,073:INFO:Uploading results into container
2023-06-16 15:34:49,074:INFO:Uploading model into container now
2023-06-16 15:34:49,074:INFO:_master_model_container: 1
2023-06-16 15:34:49,075:INFO:_display_container: 2
2023-06-16 15:34:49,075:INFO:LinearRegression(n_jobs=-1)
2023-06-16 15:34:49,076:INFO:create_model() successfully completed......................................
2023-06-16 15:34:49,189:INFO:SubProcess create_model() end ==================================
2023-06-16 15:34:49,189:INFO:Creating metrics dataframe
2023-06-16 15:34:49,201:INFO:Initializing Lasso Regression
2023-06-16 15:34:49,202:INFO:Total runtime is 0.32768404483795166 minutes
2023-06-16 15:34:49,207:INFO:SubProcess create_model() called ==================================
2023-06-16 15:34:49,208:INFO:Initializing create_model()
2023-06-16 15:34:49,208:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:34:49,208:INFO:Checking exceptions
2023-06-16 15:34:49,208:INFO:Importing libraries
2023-06-16 15:34:49,208:INFO:Copying training dataset
2023-06-16 15:34:49,224:INFO:Defining folds
2023-06-16 15:34:49,224:INFO:Declaring metric variables
2023-06-16 15:34:49,234:INFO:Importing untrained model
2023-06-16 15:34:49,245:INFO:Lasso Regression Imported successfully
2023-06-16 15:34:49,264:INFO:Starting cross validation
2023-06-16 15:34:49,267:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:34:58,031:INFO:Calculating mean and std
2023-06-16 15:34:58,048:INFO:Creating metrics dataframe
2023-06-16 15:34:58,865:INFO:Uploading results into container
2023-06-16 15:34:58,866:INFO:Uploading model into container now
2023-06-16 15:34:58,867:INFO:_master_model_container: 2
2023-06-16 15:34:58,867:INFO:_display_container: 2
2023-06-16 15:34:58,868:INFO:Lasso(random_state=123)
2023-06-16 15:34:58,868:INFO:create_model() successfully completed......................................
2023-06-16 15:34:59,245:INFO:SubProcess create_model() end ==================================
2023-06-16 15:34:59,246:INFO:Creating metrics dataframe
2023-06-16 15:34:59,309:INFO:Initializing Ridge Regression
2023-06-16 15:34:59,310:INFO:Total runtime is 0.49615288972854615 minutes
2023-06-16 15:34:59,326:INFO:SubProcess create_model() called ==================================
2023-06-16 15:34:59,329:INFO:Initializing create_model()
2023-06-16 15:34:59,329:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:34:59,329:INFO:Checking exceptions
2023-06-16 15:34:59,329:INFO:Importing libraries
2023-06-16 15:34:59,330:INFO:Copying training dataset
2023-06-16 15:34:59,354:INFO:Defining folds
2023-06-16 15:34:59,356:INFO:Declaring metric variables
2023-06-16 15:34:59,404:INFO:Importing untrained model
2023-06-16 15:34:59,419:INFO:Ridge Regression Imported successfully
2023-06-16 15:34:59,522:INFO:Starting cross validation
2023-06-16 15:34:59,524:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:00,631:INFO:Calculating mean and std
2023-06-16 15:35:00,634:INFO:Creating metrics dataframe
2023-06-16 15:35:00,974:INFO:Uploading results into container
2023-06-16 15:35:00,975:INFO:Uploading model into container now
2023-06-16 15:35:00,976:INFO:_master_model_container: 3
2023-06-16 15:35:00,977:INFO:_display_container: 2
2023-06-16 15:35:00,978:INFO:Ridge(random_state=123)
2023-06-16 15:35:00,978:INFO:create_model() successfully completed......................................
2023-06-16 15:35:01,113:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:01,113:INFO:Creating metrics dataframe
2023-06-16 15:35:01,140:INFO:Initializing Elastic Net
2023-06-16 15:35:01,140:INFO:Total runtime is 0.5266592184702555 minutes
2023-06-16 15:35:01,150:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:01,151:INFO:Initializing create_model()
2023-06-16 15:35:01,151:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:01,152:INFO:Checking exceptions
2023-06-16 15:35:01,152:INFO:Importing libraries
2023-06-16 15:35:01,153:INFO:Copying training dataset
2023-06-16 15:35:01,166:INFO:Defining folds
2023-06-16 15:35:01,174:INFO:Declaring metric variables
2023-06-16 15:35:01,188:INFO:Importing untrained model
2023-06-16 15:35:01,199:INFO:Elastic Net Imported successfully
2023-06-16 15:35:01,218:INFO:Starting cross validation
2023-06-16 15:35:01,220:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:02,233:INFO:Calculating mean and std
2023-06-16 15:35:02,238:INFO:Creating metrics dataframe
2023-06-16 15:35:02,592:INFO:Uploading results into container
2023-06-16 15:35:02,595:INFO:Uploading model into container now
2023-06-16 15:35:02,596:INFO:_master_model_container: 4
2023-06-16 15:35:02,597:INFO:_display_container: 2
2023-06-16 15:35:02,597:INFO:ElasticNet(random_state=123)
2023-06-16 15:35:02,597:INFO:create_model() successfully completed......................................
2023-06-16 15:35:02,750:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:02,751:INFO:Creating metrics dataframe
2023-06-16 15:35:02,785:INFO:Initializing Least Angle Regression
2023-06-16 15:35:02,785:INFO:Total runtime is 0.5540759325027466 minutes
2023-06-16 15:35:02,800:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:02,800:INFO:Initializing create_model()
2023-06-16 15:35:02,800:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:02,801:INFO:Checking exceptions
2023-06-16 15:35:02,802:INFO:Importing libraries
2023-06-16 15:35:02,802:INFO:Copying training dataset
2023-06-16 15:35:02,823:INFO:Defining folds
2023-06-16 15:35:02,823:INFO:Declaring metric variables
2023-06-16 15:35:02,835:INFO:Importing untrained model
2023-06-16 15:35:02,847:INFO:Least Angle Regression Imported successfully
2023-06-16 15:35:02,872:INFO:Starting cross validation
2023-06-16 15:35:02,874:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:03,097:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:03,164:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:03,888:INFO:Calculating mean and std
2023-06-16 15:35:03,895:INFO:Creating metrics dataframe
2023-06-16 15:35:04,253:INFO:Uploading results into container
2023-06-16 15:35:04,255:INFO:Uploading model into container now
2023-06-16 15:35:04,257:INFO:_master_model_container: 5
2023-06-16 15:35:04,257:INFO:_display_container: 2
2023-06-16 15:35:04,258:INFO:Lars(random_state=123)
2023-06-16 15:35:04,258:INFO:create_model() successfully completed......................................
2023-06-16 15:35:04,413:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:04,413:INFO:Creating metrics dataframe
2023-06-16 15:35:04,449:INFO:Initializing Lasso Least Angle Regression
2023-06-16 15:35:04,450:INFO:Total runtime is 0.5818272352218627 minutes
2023-06-16 15:35:04,462:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:04,463:INFO:Initializing create_model()
2023-06-16 15:35:04,464:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:04,464:INFO:Checking exceptions
2023-06-16 15:35:04,464:INFO:Importing libraries
2023-06-16 15:35:04,464:INFO:Copying training dataset
2023-06-16 15:35:04,487:INFO:Defining folds
2023-06-16 15:35:04,488:INFO:Declaring metric variables
2023-06-16 15:35:04,508:INFO:Importing untrained model
2023-06-16 15:35:04,521:INFO:Lasso Least Angle Regression Imported successfully
2023-06-16 15:35:04,549:INFO:Starting cross validation
2023-06-16 15:35:04,552:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:04,815:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:04,824:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:04,832:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:05,910:INFO:Calculating mean and std
2023-06-16 15:35:05,916:INFO:Creating metrics dataframe
2023-06-16 15:35:06,379:INFO:Uploading results into container
2023-06-16 15:35:06,381:INFO:Uploading model into container now
2023-06-16 15:35:06,382:INFO:_master_model_container: 6
2023-06-16 15:35:06,383:INFO:_display_container: 2
2023-06-16 15:35:06,384:INFO:LassoLars(random_state=123)
2023-06-16 15:35:06,384:INFO:create_model() successfully completed......................................
2023-06-16 15:35:06,555:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:06,555:INFO:Creating metrics dataframe
2023-06-16 15:35:06,589:INFO:Initializing Orthogonal Matching Pursuit
2023-06-16 15:35:06,589:INFO:Total runtime is 0.6174780845642089 minutes
2023-06-16 15:35:06,601:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:06,603:INFO:Initializing create_model()
2023-06-16 15:35:06,603:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:06,604:INFO:Checking exceptions
2023-06-16 15:35:06,604:INFO:Importing libraries
2023-06-16 15:35:06,604:INFO:Copying training dataset
2023-06-16 15:35:06,625:INFO:Defining folds
2023-06-16 15:35:06,627:INFO:Declaring metric variables
2023-06-16 15:35:06,640:INFO:Importing untrained model
2023-06-16 15:35:06,654:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-16 15:35:06,678:INFO:Starting cross validation
2023-06-16 15:35:06,681:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:06,873:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:06,896:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:07,739:INFO:Calculating mean and std
2023-06-16 15:35:07,743:INFO:Creating metrics dataframe
2023-06-16 15:35:08,144:INFO:Uploading results into container
2023-06-16 15:35:08,145:INFO:Uploading model into container now
2023-06-16 15:35:08,147:INFO:_master_model_container: 7
2023-06-16 15:35:08,147:INFO:_display_container: 2
2023-06-16 15:35:08,147:INFO:OrthogonalMatchingPursuit()
2023-06-16 15:35:08,148:INFO:create_model() successfully completed......................................
2023-06-16 15:35:08,304:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:08,304:INFO:Creating metrics dataframe
2023-06-16 15:35:08,337:INFO:Initializing Bayesian Ridge
2023-06-16 15:35:08,337:INFO:Total runtime is 0.6466035485267638 minutes
2023-06-16 15:35:08,350:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:08,351:INFO:Initializing create_model()
2023-06-16 15:35:08,352:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:08,352:INFO:Checking exceptions
2023-06-16 15:35:08,352:INFO:Importing libraries
2023-06-16 15:35:08,352:INFO:Copying training dataset
2023-06-16 15:35:08,370:INFO:Defining folds
2023-06-16 15:35:08,370:INFO:Declaring metric variables
2023-06-16 15:35:08,384:INFO:Importing untrained model
2023-06-16 15:35:08,403:INFO:Bayesian Ridge Imported successfully
2023-06-16 15:35:08,433:INFO:Starting cross validation
2023-06-16 15:35:08,437:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:09,692:INFO:Calculating mean and std
2023-06-16 15:35:09,696:INFO:Creating metrics dataframe
2023-06-16 15:35:10,148:INFO:Uploading results into container
2023-06-16 15:35:10,149:INFO:Uploading model into container now
2023-06-16 15:35:10,151:INFO:_master_model_container: 8
2023-06-16 15:35:10,151:INFO:_display_container: 2
2023-06-16 15:35:10,152:INFO:BayesianRidge()
2023-06-16 15:35:10,152:INFO:create_model() successfully completed......................................
2023-06-16 15:35:10,331:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:10,332:INFO:Creating metrics dataframe
2023-06-16 15:35:10,364:INFO:Initializing Passive Aggressive Regressor
2023-06-16 15:35:10,365:INFO:Total runtime is 0.680404524008433 minutes
2023-06-16 15:35:10,378:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:10,379:INFO:Initializing create_model()
2023-06-16 15:35:10,379:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:10,379:INFO:Checking exceptions
2023-06-16 15:35:10,379:INFO:Importing libraries
2023-06-16 15:35:10,380:INFO:Copying training dataset
2023-06-16 15:35:10,403:INFO:Defining folds
2023-06-16 15:35:10,404:INFO:Declaring metric variables
2023-06-16 15:35:10,424:INFO:Importing untrained model
2023-06-16 15:35:10,435:INFO:Passive Aggressive Regressor Imported successfully
2023-06-16 15:35:10,456:INFO:Starting cross validation
2023-06-16 15:35:10,461:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:11,908:INFO:Calculating mean and std
2023-06-16 15:35:11,912:INFO:Creating metrics dataframe
2023-06-16 15:35:12,257:INFO:Uploading results into container
2023-06-16 15:35:12,260:INFO:Uploading model into container now
2023-06-16 15:35:12,261:INFO:_master_model_container: 9
2023-06-16 15:35:12,261:INFO:_display_container: 2
2023-06-16 15:35:12,262:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 15:35:12,262:INFO:create_model() successfully completed......................................
2023-06-16 15:35:12,415:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:12,415:INFO:Creating metrics dataframe
2023-06-16 15:35:12,460:INFO:Initializing Huber Regressor
2023-06-16 15:35:12,461:INFO:Total runtime is 0.7153466741243998 minutes
2023-06-16 15:35:12,471:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:12,472:INFO:Initializing create_model()
2023-06-16 15:35:12,472:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:12,473:INFO:Checking exceptions
2023-06-16 15:35:12,473:INFO:Importing libraries
2023-06-16 15:35:12,473:INFO:Copying training dataset
2023-06-16 15:35:12,532:INFO:Defining folds
2023-06-16 15:35:12,533:INFO:Declaring metric variables
2023-06-16 15:35:12,543:INFO:Importing untrained model
2023-06-16 15:35:12,554:INFO:Huber Regressor Imported successfully
2023-06-16 15:35:12,577:INFO:Starting cross validation
2023-06-16 15:35:12,580:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:13,679:INFO:Calculating mean and std
2023-06-16 15:35:13,683:INFO:Creating metrics dataframe
2023-06-16 15:35:14,050:INFO:Uploading results into container
2023-06-16 15:35:14,052:INFO:Uploading model into container now
2023-06-16 15:35:14,053:INFO:_master_model_container: 10
2023-06-16 15:35:14,054:INFO:_display_container: 2
2023-06-16 15:35:14,054:INFO:HuberRegressor()
2023-06-16 15:35:14,054:INFO:create_model() successfully completed......................................
2023-06-16 15:35:14,268:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:14,269:INFO:Creating metrics dataframe
2023-06-16 15:35:14,301:INFO:Initializing K Neighbors Regressor
2023-06-16 15:35:14,302:INFO:Total runtime is 0.7460221330324809 minutes
2023-06-16 15:35:14,335:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:14,336:INFO:Initializing create_model()
2023-06-16 15:35:14,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:14,336:INFO:Checking exceptions
2023-06-16 15:35:14,337:INFO:Importing libraries
2023-06-16 15:35:14,337:INFO:Copying training dataset
2023-06-16 15:35:14,352:INFO:Defining folds
2023-06-16 15:35:14,352:INFO:Declaring metric variables
2023-06-16 15:35:14,363:INFO:Importing untrained model
2023-06-16 15:35:14,389:INFO:K Neighbors Regressor Imported successfully
2023-06-16 15:35:14,406:INFO:Starting cross validation
2023-06-16 15:35:14,409:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:15,683:INFO:Calculating mean and std
2023-06-16 15:35:15,690:INFO:Creating metrics dataframe
2023-06-16 15:35:16,188:INFO:Uploading results into container
2023-06-16 15:35:16,189:INFO:Uploading model into container now
2023-06-16 15:35:16,190:INFO:_master_model_container: 11
2023-06-16 15:35:16,191:INFO:_display_container: 2
2023-06-16 15:35:16,192:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-16 15:35:16,193:INFO:create_model() successfully completed......................................
2023-06-16 15:35:16,341:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:16,341:INFO:Creating metrics dataframe
2023-06-16 15:35:16,372:INFO:Initializing Decision Tree Regressor
2023-06-16 15:35:16,372:INFO:Total runtime is 0.7805260459582011 minutes
2023-06-16 15:35:16,383:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:16,383:INFO:Initializing create_model()
2023-06-16 15:35:16,383:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:16,383:INFO:Checking exceptions
2023-06-16 15:35:16,384:INFO:Importing libraries
2023-06-16 15:35:16,384:INFO:Copying training dataset
2023-06-16 15:35:16,403:INFO:Defining folds
2023-06-16 15:35:16,404:INFO:Declaring metric variables
2023-06-16 15:35:16,422:INFO:Importing untrained model
2023-06-16 15:35:16,433:INFO:Decision Tree Regressor Imported successfully
2023-06-16 15:35:16,456:INFO:Starting cross validation
2023-06-16 15:35:16,459:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:17,531:INFO:Calculating mean and std
2023-06-16 15:35:17,536:INFO:Creating metrics dataframe
2023-06-16 15:35:18,010:INFO:Uploading results into container
2023-06-16 15:35:18,012:INFO:Uploading model into container now
2023-06-16 15:35:18,013:INFO:_master_model_container: 12
2023-06-16 15:35:18,014:INFO:_display_container: 2
2023-06-16 15:35:18,014:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 15:35:18,014:INFO:create_model() successfully completed......................................
2023-06-16 15:35:18,165:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:18,165:INFO:Creating metrics dataframe
2023-06-16 15:35:18,205:INFO:Initializing Random Forest Regressor
2023-06-16 15:35:18,206:INFO:Total runtime is 0.811092738310496 minutes
2023-06-16 15:35:18,221:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:18,222:INFO:Initializing create_model()
2023-06-16 15:35:18,222:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:18,222:INFO:Checking exceptions
2023-06-16 15:35:18,222:INFO:Importing libraries
2023-06-16 15:35:18,222:INFO:Copying training dataset
2023-06-16 15:35:18,251:INFO:Defining folds
2023-06-16 15:35:18,251:INFO:Declaring metric variables
2023-06-16 15:35:18,264:INFO:Importing untrained model
2023-06-16 15:35:18,273:INFO:Random Forest Regressor Imported successfully
2023-06-16 15:35:18,300:INFO:Starting cross validation
2023-06-16 15:35:18,303:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:19,517:INFO:Calculating mean and std
2023-06-16 15:35:19,522:INFO:Creating metrics dataframe
2023-06-16 15:35:19,878:INFO:Uploading results into container
2023-06-16 15:35:19,879:INFO:Uploading model into container now
2023-06-16 15:35:19,880:INFO:_master_model_container: 13
2023-06-16 15:35:19,881:INFO:_display_container: 2
2023-06-16 15:35:19,881:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-16 15:35:19,882:INFO:create_model() successfully completed......................................
2023-06-16 15:35:20,034:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:20,034:INFO:Creating metrics dataframe
2023-06-16 15:35:20,071:INFO:Initializing Extra Trees Regressor
2023-06-16 15:35:20,071:INFO:Total runtime is 0.8421773155530293 minutes
2023-06-16 15:35:20,080:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:20,081:INFO:Initializing create_model()
2023-06-16 15:35:20,082:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:20,082:INFO:Checking exceptions
2023-06-16 15:35:20,082:INFO:Importing libraries
2023-06-16 15:35:20,082:INFO:Copying training dataset
2023-06-16 15:35:20,105:INFO:Defining folds
2023-06-16 15:35:20,106:INFO:Declaring metric variables
2023-06-16 15:35:20,117:INFO:Importing untrained model
2023-06-16 15:35:20,128:INFO:Extra Trees Regressor Imported successfully
2023-06-16 15:35:20,151:INFO:Starting cross validation
2023-06-16 15:35:20,154:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:21,487:INFO:Calculating mean and std
2023-06-16 15:35:21,492:INFO:Creating metrics dataframe
2023-06-16 15:35:21,883:INFO:Uploading results into container
2023-06-16 15:35:21,884:INFO:Uploading model into container now
2023-06-16 15:35:21,885:INFO:_master_model_container: 14
2023-06-16 15:35:21,886:INFO:_display_container: 2
2023-06-16 15:35:21,887:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-16 15:35:21,887:INFO:create_model() successfully completed......................................
2023-06-16 15:35:22,091:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:22,091:INFO:Creating metrics dataframe
2023-06-16 15:35:22,132:INFO:Initializing AdaBoost Regressor
2023-06-16 15:35:22,132:INFO:Total runtime is 0.8765282829602559 minutes
2023-06-16 15:35:22,141:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:22,142:INFO:Initializing create_model()
2023-06-16 15:35:22,142:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:22,143:INFO:Checking exceptions
2023-06-16 15:35:22,143:INFO:Importing libraries
2023-06-16 15:35:22,143:INFO:Copying training dataset
2023-06-16 15:35:22,154:INFO:Defining folds
2023-06-16 15:35:22,155:INFO:Declaring metric variables
2023-06-16 15:35:22,183:INFO:Importing untrained model
2023-06-16 15:35:22,194:INFO:AdaBoost Regressor Imported successfully
2023-06-16 15:35:22,212:INFO:Starting cross validation
2023-06-16 15:35:22,216:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:23,305:INFO:Calculating mean and std
2023-06-16 15:35:23,309:INFO:Creating metrics dataframe
2023-06-16 15:35:23,654:INFO:Uploading results into container
2023-06-16 15:35:23,657:INFO:Uploading model into container now
2023-06-16 15:35:23,658:INFO:_master_model_container: 15
2023-06-16 15:35:23,658:INFO:_display_container: 2
2023-06-16 15:35:23,659:INFO:AdaBoostRegressor(random_state=123)
2023-06-16 15:35:23,659:INFO:create_model() successfully completed......................................
2023-06-16 15:35:23,782:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:23,782:INFO:Creating metrics dataframe
2023-06-16 15:35:23,814:INFO:Initializing Gradient Boosting Regressor
2023-06-16 15:35:23,814:INFO:Total runtime is 0.9045616348584492 minutes
2023-06-16 15:35:23,823:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:23,823:INFO:Initializing create_model()
2023-06-16 15:35:23,824:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:23,824:INFO:Checking exceptions
2023-06-16 15:35:23,824:INFO:Importing libraries
2023-06-16 15:35:23,824:INFO:Copying training dataset
2023-06-16 15:35:23,835:INFO:Defining folds
2023-06-16 15:35:23,836:INFO:Declaring metric variables
2023-06-16 15:35:23,845:INFO:Importing untrained model
2023-06-16 15:35:23,855:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 15:35:23,874:INFO:Starting cross validation
2023-06-16 15:35:23,876:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:24,914:INFO:Calculating mean and std
2023-06-16 15:35:24,918:INFO:Creating metrics dataframe
2023-06-16 15:35:25,268:INFO:Uploading results into container
2023-06-16 15:35:25,269:INFO:Uploading model into container now
2023-06-16 15:35:25,270:INFO:_master_model_container: 16
2023-06-16 15:35:25,270:INFO:_display_container: 2
2023-06-16 15:35:25,271:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 15:35:25,271:INFO:create_model() successfully completed......................................
2023-06-16 15:35:25,418:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:25,419:INFO:Creating metrics dataframe
2023-06-16 15:35:25,455:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 15:35:25,455:INFO:Total runtime is 0.9319037357966105 minutes
2023-06-16 15:35:25,465:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:25,467:INFO:Initializing create_model()
2023-06-16 15:35:25,467:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:25,468:INFO:Checking exceptions
2023-06-16 15:35:25,468:INFO:Importing libraries
2023-06-16 15:35:25,468:INFO:Copying training dataset
2023-06-16 15:35:25,481:INFO:Defining folds
2023-06-16 15:35:25,482:INFO:Declaring metric variables
2023-06-16 15:35:25,498:INFO:Importing untrained model
2023-06-16 15:35:25,510:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:35:25,530:INFO:Starting cross validation
2023-06-16 15:35:25,533:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:30,469:INFO:Calculating mean and std
2023-06-16 15:35:30,474:INFO:Creating metrics dataframe
2023-06-16 15:35:30,835:INFO:Uploading results into container
2023-06-16 15:35:30,837:INFO:Uploading model into container now
2023-06-16 15:35:30,839:INFO:_master_model_container: 17
2023-06-16 15:35:30,839:INFO:_display_container: 2
2023-06-16 15:35:30,840:INFO:LGBMRegressor(random_state=123)
2023-06-16 15:35:30,840:INFO:create_model() successfully completed......................................
2023-06-16 15:35:31,012:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:31,012:INFO:Creating metrics dataframe
2023-06-16 15:35:31,049:INFO:Initializing Dummy Regressor
2023-06-16 15:35:31,050:INFO:Total runtime is 1.0251572132110596 minutes
2023-06-16 15:35:31,058:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:31,059:INFO:Initializing create_model()
2023-06-16 15:35:31,059:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E05088B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:31,060:INFO:Checking exceptions
2023-06-16 15:35:31,060:INFO:Importing libraries
2023-06-16 15:35:31,060:INFO:Copying training dataset
2023-06-16 15:35:31,076:INFO:Defining folds
2023-06-16 15:35:31,076:INFO:Declaring metric variables
2023-06-16 15:35:31,087:INFO:Importing untrained model
2023-06-16 15:35:31,118:INFO:Dummy Regressor Imported successfully
2023-06-16 15:35:31,145:INFO:Starting cross validation
2023-06-16 15:35:31,147:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:32,248:INFO:Calculating mean and std
2023-06-16 15:35:32,252:INFO:Creating metrics dataframe
2023-06-16 15:35:32,584:INFO:Uploading results into container
2023-06-16 15:35:32,586:INFO:Uploading model into container now
2023-06-16 15:35:32,587:INFO:_master_model_container: 18
2023-06-16 15:35:32,587:INFO:_display_container: 2
2023-06-16 15:35:32,589:INFO:DummyRegressor()
2023-06-16 15:35:32,589:INFO:create_model() successfully completed......................................
2023-06-16 15:35:32,729:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:32,730:INFO:Creating metrics dataframe
2023-06-16 15:35:32,854:INFO:Initializing create_model()
2023-06-16 15:35:32,854:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=PassiveAggressiveRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:32,854:INFO:Checking exceptions
2023-06-16 15:35:32,862:INFO:Importing libraries
2023-06-16 15:35:32,863:INFO:Copying training dataset
2023-06-16 15:35:32,881:INFO:Defining folds
2023-06-16 15:35:32,882:INFO:Declaring metric variables
2023-06-16 15:35:32,882:INFO:Importing untrained model
2023-06-16 15:35:32,882:INFO:Declaring custom model
2023-06-16 15:35:32,954:INFO:Passive Aggressive Regressor Imported successfully
2023-06-16 15:35:32,957:INFO:Cross validation set to False
2023-06-16 15:35:32,958:INFO:Fitting Model
2023-06-16 15:35:33,541:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 15:35:33,542:INFO:create_model() successfully completed......................................
2023-06-16 15:35:33,788:INFO:_master_model_container: 18
2023-06-16 15:35:33,790:INFO:_display_container: 2
2023-06-16 15:35:33,791:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 15:35:33,792:INFO:compare_models() successfully completed......................................
2023-06-16 15:35:33,863:INFO:Initializing predict_model()
2023-06-16 15:35:33,863:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CF19A0>, estimator=PassiveAggressiveRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021E04DD39D0>)
2023-06-16 15:35:33,863:INFO:Checking exceptions
2023-06-16 15:35:33,863:INFO:Preloading libraries
2023-06-16 15:35:33,869:INFO:Set up data.
2023-06-16 15:35:33,880:INFO:Set up index.
2023-06-16 15:35:34,230:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_11476\1074727570.py:4: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_BIR["MONTH"] = [i.month for i in data["BASE_DATE"]]

2023-06-16 15:35:34,236:WARNING:C:\Users\zariff\AppData\Local\Temp\ipykernel_11476\1074727570.py:5: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  data_BIR["YEAR"] = [i.year for i in data["BASE_DATE"]]

2023-06-16 15:35:34,642:INFO:PyCaret RegressionExperiment
2023-06-16 15:35:34,643:INFO:Logging name: reg-default-name
2023-06-16 15:35:34,643:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-16 15:35:34,643:INFO:version 3.0.2
2023-06-16 15:35:34,644:INFO:Initializing setup()
2023-06-16 15:35:34,644:INFO:self.USI: 72b0
2023-06-16 15:35:34,644:INFO:self._variable_keys: {'X_train', 'target_param', 'y', 'data', '_available_plots', '_ml_usecase', 'gpu_n_jobs_param', 'y_train', 'exp_name_log', 'log_plots_param', 'fold_shuffle_param', 'fold_generator', 'y_test', 'gpu_param', 'exp_id', 'X', 'n_jobs_param', 'idx', 'memory', 'X_test', 'logging_param', 'seed', 'transform_target_param', 'USI', 'html_param', 'pipeline', 'fold_groups_param'}
2023-06-16 15:35:34,644:INFO:Checking environment
2023-06-16 15:35:34,644:INFO:python_version: 3.9.13
2023-06-16 15:35:34,644:INFO:python_build: ('main', 'Aug 25 2022 23:51:50')
2023-06-16 15:35:34,644:INFO:machine: AMD64
2023-06-16 15:35:34,645:INFO:platform: Windows-10-10.0.19045-SP0
2023-06-16 15:35:34,645:INFO:Memory: svmem(total=8285085696, available=490815488, percent=94.1, used=7794270208, free=490815488)
2023-06-16 15:35:34,645:INFO:Physical Core: 2
2023-06-16 15:35:34,645:INFO:Logical Core: 4
2023-06-16 15:35:34,645:INFO:Checking libraries
2023-06-16 15:35:34,645:INFO:System:
2023-06-16 15:35:34,646:INFO:    python: 3.9.13 (main, Aug 25 2022, 23:51:50) [MSC v.1916 64 bit (AMD64)]
2023-06-16 15:35:34,646:INFO:executable: C:\ProgramData\Anaconda3\python.exe
2023-06-16 15:35:34,646:INFO:   machine: Windows-10-10.0.19045-SP0
2023-06-16 15:35:34,646:INFO:PyCaret required dependencies:
2023-06-16 15:35:34,646:INFO:                 pip: 22.2.2
2023-06-16 15:35:34,647:INFO:          setuptools: 63.4.1
2023-06-16 15:35:34,647:INFO:             pycaret: 3.0.2
2023-06-16 15:35:34,647:INFO:             IPython: 7.31.1
2023-06-16 15:35:34,647:INFO:          ipywidgets: 7.6.5
2023-06-16 15:35:34,647:INFO:                tqdm: 4.64.1
2023-06-16 15:35:34,647:INFO:               numpy: 1.21.5
2023-06-16 15:35:34,647:INFO:              pandas: 1.4.4
2023-06-16 15:35:34,648:INFO:              jinja2: 2.11.3
2023-06-16 15:35:34,648:INFO:               scipy: 1.9.1
2023-06-16 15:35:34,648:INFO:              joblib: 1.1.0
2023-06-16 15:35:34,648:INFO:             sklearn: 1.0.2
2023-06-16 15:35:34,648:INFO:                pyod: 1.0.9
2023-06-16 15:35:34,648:INFO:            imblearn: 0.10.1
2023-06-16 15:35:34,648:INFO:   category_encoders: 2.6.1
2023-06-16 15:35:34,648:INFO:            lightgbm: 3.3.5
2023-06-16 15:35:34,648:INFO:               numba: 0.55.1
2023-06-16 15:35:34,648:INFO:            requests: 2.28.1
2023-06-16 15:35:34,648:INFO:          matplotlib: 3.5.2
2023-06-16 15:35:34,648:INFO:          scikitplot: 0.3.7
2023-06-16 15:35:34,648:INFO:         yellowbrick: 1.5
2023-06-16 15:35:34,649:INFO:              plotly: 5.9.0
2023-06-16 15:35:34,649:INFO:             kaleido: 0.2.1
2023-06-16 15:35:34,649:INFO:         statsmodels: 0.13.2
2023-06-16 15:35:34,649:INFO:              sktime: 0.17.0
2023-06-16 15:35:34,649:INFO:               tbats: 1.1.3
2023-06-16 15:35:34,649:INFO:            pmdarima: 2.0.3
2023-06-16 15:35:34,649:INFO:              psutil: 5.9.0
2023-06-16 15:35:34,649:INFO:PyCaret optional dependencies:
2023-06-16 15:35:34,649:INFO:                shap: Not installed
2023-06-16 15:35:34,649:INFO:           interpret: Not installed
2023-06-16 15:35:34,649:INFO:                umap: Not installed
2023-06-16 15:35:34,649:INFO:    pandas_profiling: Not installed
2023-06-16 15:35:34,649:INFO:  explainerdashboard: Not installed
2023-06-16 15:35:34,650:INFO:             autoviz: Not installed
2023-06-16 15:35:34,650:INFO:           fairlearn: Not installed
2023-06-16 15:35:34,650:INFO:             xgboost: Not installed
2023-06-16 15:35:34,650:INFO:            catboost: Not installed
2023-06-16 15:35:34,650:INFO:              kmodes: Not installed
2023-06-16 15:35:34,650:INFO:             mlxtend: Not installed
2023-06-16 15:35:34,651:INFO:       statsforecast: Not installed
2023-06-16 15:35:34,651:INFO:        tune_sklearn: Not installed
2023-06-16 15:35:34,651:INFO:                 ray: Not installed
2023-06-16 15:35:34,651:INFO:            hyperopt: Not installed
2023-06-16 15:35:34,651:INFO:              optuna: Not installed
2023-06-16 15:35:34,651:INFO:               skopt: Not installed
2023-06-16 15:35:34,651:INFO:              mlflow: Not installed
2023-06-16 15:35:34,651:INFO:              gradio: Not installed
2023-06-16 15:35:34,651:INFO:             fastapi: Not installed
2023-06-16 15:35:34,651:INFO:             uvicorn: Not installed
2023-06-16 15:35:34,651:INFO:              m2cgen: Not installed
2023-06-16 15:35:34,651:INFO:           evidently: Not installed
2023-06-16 15:35:34,651:INFO:               fugue: Not installed
2023-06-16 15:35:34,652:INFO:           streamlit: 1.22.0
2023-06-16 15:35:34,652:INFO:             prophet: Not installed
2023-06-16 15:35:34,652:INFO:None
2023-06-16 15:35:34,652:INFO:Set up data.
2023-06-16 15:35:34,659:INFO:Set up train/test split.
2023-06-16 15:35:34,659:INFO:Set up data.
2023-06-16 15:35:34,667:INFO:Set up index.
2023-06-16 15:35:34,668:INFO:Set up folding strategy.
2023-06-16 15:35:34,668:INFO:Assigning column types.
2023-06-16 15:35:34,675:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-16 15:35:34,675:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 15:35:34,681:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:35:34,687:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:34,785:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:34,981:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:34,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:34,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:34,984:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,015:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,029:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,204:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,354:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,356:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,356:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,358:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-16 15:35:35,376:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,388:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,510:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,572:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,572:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,573:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,580:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,586:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,675:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:35,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:35,801:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-16 15:35:35,843:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,091:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,230:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:36,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:36,258:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,393:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,525:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,527:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:36,527:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:36,528:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-16 15:35:36,768:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,934:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:36,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:36,935:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,069:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:37,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-16 15:35:37,182:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,182:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,184:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-16 15:35:37,368:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:37,461:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,637:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-16 15:35:37,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,751:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-16 15:35:37,985:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:37,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:38,283:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:38,284:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:38,293:INFO:Preparing preprocessing pipeline...
2023-06-16 15:35:38,293:INFO:Set up target transformation.
2023-06-16 15:35:38,293:INFO:Set up date feature engineering.
2023-06-16 15:35:38,293:INFO:Set up simple imputation.
2023-06-16 15:35:38,443:INFO:Finished creating preprocessing pipeline.
2023-06-16 15:35:38,463:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\zariff\AppData\Local\Temp\joblib),
         steps=[('target_transformation',
                 TransformerWrapperWithInverse(transformer=TargetTransformer(estimator=PowerTransformer(standardize=False)))),
                ('date_feature_extractor',
                 TransformerWrapper(include=['BASE_DATE'],
                                    transformer=ExtractDateTimeFeatures())),
                ('numerical_imputer',
                 TransformerWrapper(include=['MONTH', 'YEAR'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent')))])
2023-06-16 15:35:38,463:INFO:Creating final display dataframe.
2023-06-16 15:35:38,812:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    NOTCH_VARIANCE
2                   Target type        Regression
3           Original data shape           (94, 4)
4        Transformed data shape           (94, 6)
5   Transformed train set shape           (76, 6)
6    Transformed test set shape           (18, 6)
7              Numeric features                 2
8                 Date features                 1
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13             Transform target              True
14      Transform target method       yeo-johnson
15               Fold Generator   TimeSeriesSplit
16                  Fold Number                 3
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              72b0
2023-06-16 15:35:39,005:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:39,006:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:39,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:39,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-16 15:35:39,143:INFO:setup() successfully completed in 4.84s...............
2023-06-16 15:35:39,348:INFO:Initializing compare_models()
2023-06-16 15:35:39,349:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, include=None, fold=None, round=4, cross_validation=True, sort=MAE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-16 15:35:39,349:INFO:Checking exceptions
2023-06-16 15:35:39,352:INFO:Preparing display monitor
2023-06-16 15:35:39,431:INFO:Initializing Linear Regression
2023-06-16 15:35:39,432:INFO:Total runtime is 1.663366953531901e-05 minutes
2023-06-16 15:35:39,440:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:39,440:INFO:Initializing create_model()
2023-06-16 15:35:39,441:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=lr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:39,441:INFO:Checking exceptions
2023-06-16 15:35:39,441:INFO:Importing libraries
2023-06-16 15:35:39,441:INFO:Copying training dataset
2023-06-16 15:35:39,452:INFO:Defining folds
2023-06-16 15:35:39,452:INFO:Declaring metric variables
2023-06-16 15:35:39,473:INFO:Importing untrained model
2023-06-16 15:35:39,485:INFO:Linear Regression Imported successfully
2023-06-16 15:35:39,518:INFO:Starting cross validation
2023-06-16 15:35:39,520:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:39,588:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:40,273:INFO:Calculating mean and std
2023-06-16 15:35:40,273:INFO:Creating metrics dataframe
2023-06-16 15:35:40,520:INFO:Uploading results into container
2023-06-16 15:35:40,521:INFO:Uploading model into container now
2023-06-16 15:35:40,522:INFO:_master_model_container: 1
2023-06-16 15:35:40,522:INFO:_display_container: 2
2023-06-16 15:35:40,522:INFO:LinearRegression(n_jobs=-1)
2023-06-16 15:35:40,523:INFO:create_model() successfully completed......................................
2023-06-16 15:35:40,660:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:40,660:INFO:Creating metrics dataframe
2023-06-16 15:35:40,676:INFO:Initializing Lasso Regression
2023-06-16 15:35:40,676:INFO:Total runtime is 0.02076113224029541 minutes
2023-06-16 15:35:40,685:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:40,686:INFO:Initializing create_model()
2023-06-16 15:35:40,690:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=lasso, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:40,690:INFO:Checking exceptions
2023-06-16 15:35:40,690:INFO:Importing libraries
2023-06-16 15:35:40,690:INFO:Copying training dataset
2023-06-16 15:35:40,704:INFO:Defining folds
2023-06-16 15:35:40,704:INFO:Declaring metric variables
2023-06-16 15:35:40,724:INFO:Importing untrained model
2023-06-16 15:35:40,732:INFO:Lasso Regression Imported successfully
2023-06-16 15:35:40,750:INFO:Starting cross validation
2023-06-16 15:35:40,752:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:40,811:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:40,959:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-16 15:35:41,659:INFO:Calculating mean and std
2023-06-16 15:35:41,661:INFO:Creating metrics dataframe
2023-06-16 15:35:41,967:INFO:Uploading results into container
2023-06-16 15:35:41,968:INFO:Uploading model into container now
2023-06-16 15:35:41,969:INFO:_master_model_container: 2
2023-06-16 15:35:41,969:INFO:_display_container: 2
2023-06-16 15:35:41,970:INFO:Lasso(random_state=123)
2023-06-16 15:35:41,970:INFO:create_model() successfully completed......................................
2023-06-16 15:35:42,067:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:42,067:INFO:Creating metrics dataframe
2023-06-16 15:35:42,079:INFO:Initializing Ridge Regression
2023-06-16 15:35:42,080:INFO:Total runtime is 0.044162031014760336 minutes
2023-06-16 15:35:42,087:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:42,088:INFO:Initializing create_model()
2023-06-16 15:35:42,088:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=ridge, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:42,088:INFO:Checking exceptions
2023-06-16 15:35:42,088:INFO:Importing libraries
2023-06-16 15:35:42,089:INFO:Copying training dataset
2023-06-16 15:35:42,100:INFO:Defining folds
2023-06-16 15:35:42,100:INFO:Declaring metric variables
2023-06-16 15:35:42,109:INFO:Importing untrained model
2023-06-16 15:35:42,118:INFO:Ridge Regression Imported successfully
2023-06-16 15:35:42,135:INFO:Starting cross validation
2023-06-16 15:35:42,139:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:42,191:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:42,991:INFO:Calculating mean and std
2023-06-16 15:35:42,994:INFO:Creating metrics dataframe
2023-06-16 15:35:43,267:INFO:Uploading results into container
2023-06-16 15:35:43,268:INFO:Uploading model into container now
2023-06-16 15:35:43,269:INFO:_master_model_container: 3
2023-06-16 15:35:43,269:INFO:_display_container: 2
2023-06-16 15:35:43,270:INFO:Ridge(random_state=123)
2023-06-16 15:35:43,271:INFO:create_model() successfully completed......................................
2023-06-16 15:35:43,373:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:43,373:INFO:Creating metrics dataframe
2023-06-16 15:35:43,393:INFO:Initializing Elastic Net
2023-06-16 15:35:43,393:INFO:Total runtime is 0.06604456504185995 minutes
2023-06-16 15:35:43,401:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:43,402:INFO:Initializing create_model()
2023-06-16 15:35:43,402:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=en, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:43,402:INFO:Checking exceptions
2023-06-16 15:35:43,402:INFO:Importing libraries
2023-06-16 15:35:43,403:INFO:Copying training dataset
2023-06-16 15:35:43,416:INFO:Defining folds
2023-06-16 15:35:43,416:INFO:Declaring metric variables
2023-06-16 15:35:43,426:INFO:Importing untrained model
2023-06-16 15:35:43,437:INFO:Elastic Net Imported successfully
2023-06-16 15:35:43,454:INFO:Starting cross validation
2023-06-16 15:35:43,456:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:43,494:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:43,592:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:647: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 0.000e+00, tolerance: 0.000e+00
  model = cd_fast.enet_coordinate_descent(

2023-06-16 15:35:44,242:INFO:Calculating mean and std
2023-06-16 15:35:44,245:INFO:Creating metrics dataframe
2023-06-16 15:35:44,558:INFO:Uploading results into container
2023-06-16 15:35:44,559:INFO:Uploading model into container now
2023-06-16 15:35:44,561:INFO:_master_model_container: 4
2023-06-16 15:35:44,561:INFO:_display_container: 2
2023-06-16 15:35:44,562:INFO:ElasticNet(random_state=123)
2023-06-16 15:35:44,562:INFO:create_model() successfully completed......................................
2023-06-16 15:35:44,682:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:44,682:INFO:Creating metrics dataframe
2023-06-16 15:35:44,699:INFO:Initializing Least Angle Regression
2023-06-16 15:35:44,699:INFO:Total runtime is 0.08780031204223633 minutes
2023-06-16 15:35:44,708:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:44,709:INFO:Initializing create_model()
2023-06-16 15:35:44,709:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=lar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:44,710:INFO:Checking exceptions
2023-06-16 15:35:44,710:INFO:Importing libraries
2023-06-16 15:35:44,710:INFO:Copying training dataset
2023-06-16 15:35:44,724:INFO:Defining folds
2023-06-16 15:35:44,725:INFO:Declaring metric variables
2023-06-16 15:35:44,740:INFO:Importing untrained model
2023-06-16 15:35:44,747:INFO:Least Angle Regression Imported successfully
2023-06-16 15:35:44,764:INFO:Starting cross validation
2023-06-16 15:35:44,766:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:44,817:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:44,916:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:44,927:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:44,945:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:44,991:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 1 iterations, i.e. alpha=3.391e-01, with an active set of 1 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-16 15:35:44,992:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_least_angle.py:652: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 2 iterations, i.e. alpha=1.695e-01, with an active set of 2 regressors, and the smallest cholesky pivot element being 1.490e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-16 15:35:45,676:INFO:Calculating mean and std
2023-06-16 15:35:45,678:INFO:Creating metrics dataframe
2023-06-16 15:35:46,013:INFO:Uploading results into container
2023-06-16 15:35:46,014:INFO:Uploading model into container now
2023-06-16 15:35:46,016:INFO:_master_model_container: 5
2023-06-16 15:35:46,016:INFO:_display_container: 2
2023-06-16 15:35:46,017:INFO:Lars(random_state=123)
2023-06-16 15:35:46,017:INFO:create_model() successfully completed......................................
2023-06-16 15:35:46,132:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:46,133:INFO:Creating metrics dataframe
2023-06-16 15:35:46,153:INFO:Initializing Lasso Least Angle Regression
2023-06-16 15:35:46,153:INFO:Total runtime is 0.11203362544377646 minutes
2023-06-16 15:35:46,162:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:46,163:INFO:Initializing create_model()
2023-06-16 15:35:46,164:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=llar, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:46,164:INFO:Checking exceptions
2023-06-16 15:35:46,165:INFO:Importing libraries
2023-06-16 15:35:46,165:INFO:Copying training dataset
2023-06-16 15:35:46,179:INFO:Defining folds
2023-06-16 15:35:46,180:INFO:Declaring metric variables
2023-06-16 15:35:46,188:INFO:Importing untrained model
2023-06-16 15:35:46,197:INFO:Lasso Least Angle Regression Imported successfully
2023-06-16 15:35:46,220:INFO:Starting cross validation
2023-06-16 15:35:46,222:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:46,276:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:46,371:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:46,378:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:46,393:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-06-16 15:35:46,998:INFO:Calculating mean and std
2023-06-16 15:35:47,000:INFO:Creating metrics dataframe
2023-06-16 15:35:47,227:INFO:Uploading results into container
2023-06-16 15:35:47,228:INFO:Uploading model into container now
2023-06-16 15:35:47,228:INFO:_master_model_container: 6
2023-06-16 15:35:47,228:INFO:_display_container: 2
2023-06-16 15:35:47,229:INFO:LassoLars(random_state=123)
2023-06-16 15:35:47,230:INFO:create_model() successfully completed......................................
2023-06-16 15:35:47,323:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:47,324:INFO:Creating metrics dataframe
2023-06-16 15:35:47,335:INFO:Initializing Orthogonal Matching Pursuit
2023-06-16 15:35:47,335:INFO:Total runtime is 0.13174512386322024 minutes
2023-06-16 15:35:47,342:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:47,343:INFO:Initializing create_model()
2023-06-16 15:35:47,343:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=omp, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:47,343:INFO:Checking exceptions
2023-06-16 15:35:47,343:INFO:Importing libraries
2023-06-16 15:35:47,344:INFO:Copying training dataset
2023-06-16 15:35:47,352:INFO:Defining folds
2023-06-16 15:35:47,352:INFO:Declaring metric variables
2023-06-16 15:35:47,362:INFO:Importing untrained model
2023-06-16 15:35:47,371:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-16 15:35:47,383:INFO:Starting cross validation
2023-06-16 15:35:47,386:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:47,423:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:47,500:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:47,504:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:47,523:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-06-16 15:35:47,526:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\linear_model\_omp.py:758: RuntimeWarning: Orthogonal matching pursuit ended prematurely due to linear dependence in the dictionary. The requested precision might not have been met.
  coef_, self.n_iter_ = orthogonal_mp_gram(

2023-06-16 15:35:48,123:INFO:Calculating mean and std
2023-06-16 15:35:48,126:INFO:Creating metrics dataframe
2023-06-16 15:35:48,396:INFO:Uploading results into container
2023-06-16 15:35:48,397:INFO:Uploading model into container now
2023-06-16 15:35:48,398:INFO:_master_model_container: 7
2023-06-16 15:35:48,398:INFO:_display_container: 2
2023-06-16 15:35:48,399:INFO:OrthogonalMatchingPursuit()
2023-06-16 15:35:48,399:INFO:create_model() successfully completed......................................
2023-06-16 15:35:48,501:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:48,502:INFO:Creating metrics dataframe
2023-06-16 15:35:48,516:INFO:Initializing Bayesian Ridge
2023-06-16 15:35:48,516:INFO:Total runtime is 0.15142842531204226 minutes
2023-06-16 15:35:48,521:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:48,522:INFO:Initializing create_model()
2023-06-16 15:35:48,522:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=br, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:48,522:INFO:Checking exceptions
2023-06-16 15:35:48,522:INFO:Importing libraries
2023-06-16 15:35:48,523:INFO:Copying training dataset
2023-06-16 15:35:48,532:INFO:Defining folds
2023-06-16 15:35:48,532:INFO:Declaring metric variables
2023-06-16 15:35:48,542:INFO:Importing untrained model
2023-06-16 15:35:48,556:INFO:Bayesian Ridge Imported successfully
2023-06-16 15:35:48,572:INFO:Starting cross validation
2023-06-16 15:35:48,574:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:48,611:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:49,314:INFO:Calculating mean and std
2023-06-16 15:35:49,316:INFO:Creating metrics dataframe
2023-06-16 15:35:49,532:INFO:Uploading results into container
2023-06-16 15:35:49,533:INFO:Uploading model into container now
2023-06-16 15:35:49,534:INFO:_master_model_container: 8
2023-06-16 15:35:49,534:INFO:_display_container: 2
2023-06-16 15:35:49,535:INFO:BayesianRidge()
2023-06-16 15:35:49,536:INFO:create_model() successfully completed......................................
2023-06-16 15:35:49,624:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:49,624:INFO:Creating metrics dataframe
2023-06-16 15:35:49,637:INFO:Initializing Passive Aggressive Regressor
2023-06-16 15:35:49,637:INFO:Total runtime is 0.1701089104016622 minutes
2023-06-16 15:35:49,642:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:49,642:INFO:Initializing create_model()
2023-06-16 15:35:49,643:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=par, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:49,643:INFO:Checking exceptions
2023-06-16 15:35:49,643:INFO:Importing libraries
2023-06-16 15:35:49,643:INFO:Copying training dataset
2023-06-16 15:35:49,653:INFO:Defining folds
2023-06-16 15:35:49,653:INFO:Declaring metric variables
2023-06-16 15:35:49,662:INFO:Importing untrained model
2023-06-16 15:35:49,671:INFO:Passive Aggressive Regressor Imported successfully
2023-06-16 15:35:49,684:INFO:Starting cross validation
2023-06-16 15:35:49,687:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:49,724:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:50,354:INFO:Calculating mean and std
2023-06-16 15:35:50,356:INFO:Creating metrics dataframe
2023-06-16 15:35:50,576:INFO:Uploading results into container
2023-06-16 15:35:50,577:INFO:Uploading model into container now
2023-06-16 15:35:50,578:INFO:_master_model_container: 9
2023-06-16 15:35:50,578:INFO:_display_container: 2
2023-06-16 15:35:50,579:INFO:PassiveAggressiveRegressor(random_state=123)
2023-06-16 15:35:50,579:INFO:create_model() successfully completed......................................
2023-06-16 15:35:50,669:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:50,669:INFO:Creating metrics dataframe
2023-06-16 15:35:50,683:INFO:Initializing Huber Regressor
2023-06-16 15:35:50,683:INFO:Total runtime is 0.1875368634859721 minutes
2023-06-16 15:35:50,690:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:50,690:INFO:Initializing create_model()
2023-06-16 15:35:50,691:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=huber, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:50,691:INFO:Checking exceptions
2023-06-16 15:35:50,691:INFO:Importing libraries
2023-06-16 15:35:50,691:INFO:Copying training dataset
2023-06-16 15:35:50,698:INFO:Defining folds
2023-06-16 15:35:50,698:INFO:Declaring metric variables
2023-06-16 15:35:50,709:INFO:Importing untrained model
2023-06-16 15:35:50,715:INFO:Huber Regressor Imported successfully
2023-06-16 15:35:50,730:INFO:Starting cross validation
2023-06-16 15:35:50,731:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:50,769:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:51,430:INFO:Calculating mean and std
2023-06-16 15:35:51,432:INFO:Creating metrics dataframe
2023-06-16 15:35:51,654:INFO:Uploading results into container
2023-06-16 15:35:51,655:INFO:Uploading model into container now
2023-06-16 15:35:51,657:INFO:_master_model_container: 10
2023-06-16 15:35:51,657:INFO:_display_container: 2
2023-06-16 15:35:51,657:INFO:HuberRegressor()
2023-06-16 15:35:51,658:INFO:create_model() successfully completed......................................
2023-06-16 15:35:51,745:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:51,745:INFO:Creating metrics dataframe
2023-06-16 15:35:51,759:INFO:Initializing K Neighbors Regressor
2023-06-16 15:35:51,759:INFO:Total runtime is 0.20546662012736003 minutes
2023-06-16 15:35:51,767:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:51,767:INFO:Initializing create_model()
2023-06-16 15:35:51,768:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=knn, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:51,768:INFO:Checking exceptions
2023-06-16 15:35:51,768:INFO:Importing libraries
2023-06-16 15:35:51,768:INFO:Copying training dataset
2023-06-16 15:35:51,777:INFO:Defining folds
2023-06-16 15:35:51,777:INFO:Declaring metric variables
2023-06-16 15:35:51,789:INFO:Importing untrained model
2023-06-16 15:35:51,795:INFO:K Neighbors Regressor Imported successfully
2023-06-16 15:35:51,811:INFO:Starting cross validation
2023-06-16 15:35:51,813:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:51,848:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:52,525:INFO:Calculating mean and std
2023-06-16 15:35:52,527:INFO:Creating metrics dataframe
2023-06-16 15:35:52,747:INFO:Uploading results into container
2023-06-16 15:35:52,749:INFO:Uploading model into container now
2023-06-16 15:35:52,750:INFO:_master_model_container: 11
2023-06-16 15:35:52,750:INFO:_display_container: 2
2023-06-16 15:35:52,751:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-16 15:35:52,751:INFO:create_model() successfully completed......................................
2023-06-16 15:35:52,839:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:52,840:INFO:Creating metrics dataframe
2023-06-16 15:35:52,855:INFO:Initializing Decision Tree Regressor
2023-06-16 15:35:52,855:INFO:Total runtime is 0.22374699513117471 minutes
2023-06-16 15:35:52,859:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:52,860:INFO:Initializing create_model()
2023-06-16 15:35:52,861:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=dt, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:52,861:INFO:Checking exceptions
2023-06-16 15:35:52,861:INFO:Importing libraries
2023-06-16 15:35:52,861:INFO:Copying training dataset
2023-06-16 15:35:52,869:INFO:Defining folds
2023-06-16 15:35:52,870:INFO:Declaring metric variables
2023-06-16 15:35:52,880:INFO:Importing untrained model
2023-06-16 15:35:52,889:INFO:Decision Tree Regressor Imported successfully
2023-06-16 15:35:52,905:INFO:Starting cross validation
2023-06-16 15:35:52,907:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:52,942:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:53,569:INFO:Calculating mean and std
2023-06-16 15:35:53,570:INFO:Creating metrics dataframe
2023-06-16 15:35:53,792:INFO:Uploading results into container
2023-06-16 15:35:53,793:INFO:Uploading model into container now
2023-06-16 15:35:53,794:INFO:_master_model_container: 12
2023-06-16 15:35:53,794:INFO:_display_container: 2
2023-06-16 15:35:53,796:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 15:35:53,796:INFO:create_model() successfully completed......................................
2023-06-16 15:35:53,884:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:53,884:INFO:Creating metrics dataframe
2023-06-16 15:35:53,899:INFO:Initializing Random Forest Regressor
2023-06-16 15:35:53,899:INFO:Total runtime is 0.24113659461339315 minutes
2023-06-16 15:35:53,905:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:53,906:INFO:Initializing create_model()
2023-06-16 15:35:53,906:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=rf, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:53,906:INFO:Checking exceptions
2023-06-16 15:35:53,906:INFO:Importing libraries
2023-06-16 15:35:53,906:INFO:Copying training dataset
2023-06-16 15:35:53,913:INFO:Defining folds
2023-06-16 15:35:53,914:INFO:Declaring metric variables
2023-06-16 15:35:53,924:INFO:Importing untrained model
2023-06-16 15:35:53,933:INFO:Random Forest Regressor Imported successfully
2023-06-16 15:35:53,947:INFO:Starting cross validation
2023-06-16 15:35:53,950:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:53,982:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:54,775:INFO:Calculating mean and std
2023-06-16 15:35:54,777:INFO:Creating metrics dataframe
2023-06-16 15:35:54,992:INFO:Uploading results into container
2023-06-16 15:35:54,993:INFO:Uploading model into container now
2023-06-16 15:35:54,994:INFO:_master_model_container: 13
2023-06-16 15:35:54,994:INFO:_display_container: 2
2023-06-16 15:35:54,995:INFO:RandomForestRegressor(n_jobs=-1, random_state=123)
2023-06-16 15:35:54,995:INFO:create_model() successfully completed......................................
2023-06-16 15:35:55,085:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:55,085:INFO:Creating metrics dataframe
2023-06-16 15:35:55,101:INFO:Initializing Extra Trees Regressor
2023-06-16 15:35:55,101:INFO:Total runtime is 0.2611694812774658 minutes
2023-06-16 15:35:55,109:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:55,109:INFO:Initializing create_model()
2023-06-16 15:35:55,109:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=et, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:55,110:INFO:Checking exceptions
2023-06-16 15:35:55,110:INFO:Importing libraries
2023-06-16 15:35:55,110:INFO:Copying training dataset
2023-06-16 15:35:55,118:INFO:Defining folds
2023-06-16 15:35:55,118:INFO:Declaring metric variables
2023-06-16 15:35:55,128:INFO:Importing untrained model
2023-06-16 15:35:55,135:INFO:Extra Trees Regressor Imported successfully
2023-06-16 15:35:55,151:INFO:Starting cross validation
2023-06-16 15:35:55,153:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:55,191:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:56,000:INFO:Calculating mean and std
2023-06-16 15:35:56,003:INFO:Creating metrics dataframe
2023-06-16 15:35:56,224:INFO:Uploading results into container
2023-06-16 15:35:56,225:INFO:Uploading model into container now
2023-06-16 15:35:56,226:INFO:_master_model_container: 14
2023-06-16 15:35:56,226:INFO:_display_container: 2
2023-06-16 15:35:56,227:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=123)
2023-06-16 15:35:56,227:INFO:create_model() successfully completed......................................
2023-06-16 15:35:56,316:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:56,316:INFO:Creating metrics dataframe
2023-06-16 15:35:56,331:INFO:Initializing AdaBoost Regressor
2023-06-16 15:35:56,331:INFO:Total runtime is 0.28166494369506834 minutes
2023-06-16 15:35:56,335:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:56,336:INFO:Initializing create_model()
2023-06-16 15:35:56,336:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=ada, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:56,336:INFO:Checking exceptions
2023-06-16 15:35:56,337:INFO:Importing libraries
2023-06-16 15:35:56,337:INFO:Copying training dataset
2023-06-16 15:35:56,348:INFO:Defining folds
2023-06-16 15:35:56,349:INFO:Declaring metric variables
2023-06-16 15:35:56,362:INFO:Importing untrained model
2023-06-16 15:35:56,371:INFO:AdaBoost Regressor Imported successfully
2023-06-16 15:35:56,386:INFO:Starting cross validation
2023-06-16 15:35:56,389:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:56,422:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:57,153:INFO:Calculating mean and std
2023-06-16 15:35:57,157:INFO:Creating metrics dataframe
2023-06-16 15:35:57,465:INFO:Uploading results into container
2023-06-16 15:35:57,466:INFO:Uploading model into container now
2023-06-16 15:35:57,467:INFO:_master_model_container: 15
2023-06-16 15:35:57,467:INFO:_display_container: 2
2023-06-16 15:35:57,467:INFO:AdaBoostRegressor(random_state=123)
2023-06-16 15:35:57,468:INFO:create_model() successfully completed......................................
2023-06-16 15:35:57,596:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:57,596:INFO:Creating metrics dataframe
2023-06-16 15:35:57,622:INFO:Initializing Gradient Boosting Regressor
2023-06-16 15:35:57,622:INFO:Total runtime is 0.3031954606374105 minutes
2023-06-16 15:35:57,630:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:57,631:INFO:Initializing create_model()
2023-06-16 15:35:57,631:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=gbr, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:57,632:INFO:Checking exceptions
2023-06-16 15:35:57,632:INFO:Importing libraries
2023-06-16 15:35:57,632:INFO:Copying training dataset
2023-06-16 15:35:57,644:INFO:Defining folds
2023-06-16 15:35:57,644:INFO:Declaring metric variables
2023-06-16 15:35:57,653:INFO:Importing untrained model
2023-06-16 15:35:57,665:INFO:Gradient Boosting Regressor Imported successfully
2023-06-16 15:35:57,683:INFO:Starting cross validation
2023-06-16 15:35:57,688:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:35:57,741:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:35:58,628:INFO:Calculating mean and std
2023-06-16 15:35:58,632:INFO:Creating metrics dataframe
2023-06-16 15:35:58,932:INFO:Uploading results into container
2023-06-16 15:35:58,933:INFO:Uploading model into container now
2023-06-16 15:35:58,934:INFO:_master_model_container: 16
2023-06-16 15:35:58,934:INFO:_display_container: 2
2023-06-16 15:35:58,936:INFO:GradientBoostingRegressor(random_state=123)
2023-06-16 15:35:58,937:INFO:create_model() successfully completed......................................
2023-06-16 15:35:59,041:INFO:SubProcess create_model() end ==================================
2023-06-16 15:35:59,041:INFO:Creating metrics dataframe
2023-06-16 15:35:59,056:INFO:Initializing Light Gradient Boosting Machine
2023-06-16 15:35:59,056:INFO:Total runtime is 0.327096172173818 minutes
2023-06-16 15:35:59,064:INFO:SubProcess create_model() called ==================================
2023-06-16 15:35:59,064:INFO:Initializing create_model()
2023-06-16 15:35:59,064:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=lightgbm, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:35:59,065:INFO:Checking exceptions
2023-06-16 15:35:59,065:INFO:Importing libraries
2023-06-16 15:35:59,065:INFO:Copying training dataset
2023-06-16 15:35:59,077:INFO:Defining folds
2023-06-16 15:35:59,077:INFO:Declaring metric variables
2023-06-16 15:35:59,087:INFO:Importing untrained model
2023-06-16 15:35:59,097:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-16 15:35:59,116:INFO:Starting cross validation
2023-06-16 15:35:59,119:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:36:01,268:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:36:01,451:INFO:Calculating mean and std
2023-06-16 15:36:01,457:INFO:Creating metrics dataframe
2023-06-16 15:36:01,851:INFO:Uploading results into container
2023-06-16 15:36:01,852:INFO:Uploading model into container now
2023-06-16 15:36:01,853:INFO:_master_model_container: 17
2023-06-16 15:36:01,854:INFO:_display_container: 2
2023-06-16 15:36:01,855:INFO:LGBMRegressor(random_state=123)
2023-06-16 15:36:01,857:INFO:create_model() successfully completed......................................
2023-06-16 15:36:01,986:INFO:SubProcess create_model() end ==================================
2023-06-16 15:36:01,987:INFO:Creating metrics dataframe
2023-06-16 15:36:02,015:INFO:Initializing Dummy Regressor
2023-06-16 15:36:02,016:INFO:Total runtime is 0.37642118533452357 minutes
2023-06-16 15:36:02,025:INFO:SubProcess create_model() called ==================================
2023-06-16 15:36:02,026:INFO:Initializing create_model()
2023-06-16 15:36:02,027:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=dummy, fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021E01674B50>, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:36:02,027:INFO:Checking exceptions
2023-06-16 15:36:02,027:INFO:Importing libraries
2023-06-16 15:36:02,027:INFO:Copying training dataset
2023-06-16 15:36:02,038:INFO:Defining folds
2023-06-16 15:36:02,039:INFO:Declaring metric variables
2023-06-16 15:36:02,047:INFO:Importing untrained model
2023-06-16 15:36:02,059:INFO:Dummy Regressor Imported successfully
2023-06-16 15:36:02,077:INFO:Starting cross validation
2023-06-16 15:36:02,079:INFO:Cross validating with TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), n_jobs=-1
2023-06-16 15:36:02,144:WARNING:C:\ProgramData\Anaconda3\lib\site-packages\sklearn\preprocessing\_data.py:3253: RuntimeWarning: divide by zero encountered in log
  loglike = -n_samples / 2 * np.log(x_trans.var())

2023-06-16 15:36:02,947:INFO:Calculating mean and std
2023-06-16 15:36:02,949:INFO:Creating metrics dataframe
2023-06-16 15:36:03,246:INFO:Uploading results into container
2023-06-16 15:36:03,247:INFO:Uploading model into container now
2023-06-16 15:36:03,248:INFO:_master_model_container: 18
2023-06-16 15:36:03,248:INFO:_display_container: 2
2023-06-16 15:36:03,250:INFO:DummyRegressor()
2023-06-16 15:36:03,250:INFO:create_model() successfully completed......................................
2023-06-16 15:36:03,345:INFO:SubProcess create_model() end ==================================
2023-06-16 15:36:03,345:INFO:Creating metrics dataframe
2023-06-16 15:36:03,385:INFO:Initializing create_model()
2023-06-16 15:36:03,385:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=DecisionTreeRegressor(random_state=123), fold=TimeSeriesSplit(gap=0, max_train_size=None, n_splits=3, test_size=None), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-16 15:36:03,385:INFO:Checking exceptions
2023-06-16 15:36:03,388:INFO:Importing libraries
2023-06-16 15:36:03,388:INFO:Copying training dataset
2023-06-16 15:36:03,396:INFO:Defining folds
2023-06-16 15:36:03,397:INFO:Declaring metric variables
2023-06-16 15:36:03,397:INFO:Importing untrained model
2023-06-16 15:36:03,397:INFO:Declaring custom model
2023-06-16 15:36:03,398:INFO:Decision Tree Regressor Imported successfully
2023-06-16 15:36:03,400:INFO:Cross validation set to False
2023-06-16 15:36:03,400:INFO:Fitting Model
2023-06-16 15:36:03,734:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 15:36:03,735:INFO:create_model() successfully completed......................................
2023-06-16 15:36:03,912:INFO:_master_model_container: 18
2023-06-16 15:36:03,913:INFO:_display_container: 2
2023-06-16 15:36:03,913:INFO:DecisionTreeRegressor(random_state=123)
2023-06-16 15:36:03,914:INFO:compare_models() successfully completed......................................
2023-06-16 15:36:03,973:INFO:Initializing predict_model()
2023-06-16 15:36:03,973:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x0000021E03CDEF70>, estimator=DecisionTreeRegressor(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000021E049E9310>)
2023-06-16 15:36:03,973:INFO:Checking exceptions
2023-06-16 15:36:03,974:INFO:Preloading libraries
2023-06-16 15:36:03,980:INFO:Set up data.
2023-06-16 15:36:03,990:INFO:Set up index.
